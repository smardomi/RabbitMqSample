{"@timestamp":"2023-05-15T09:52:43.6474439+03:30","level":"Information","messageTemplate":"Executed DbCommand ({elapsed}ms) [Parameters=[{parameters}], CommandType='{commandType}', CommandTimeout='{commandTimeout}']{newLine}{commandText}","message":"Executed DbCommand (\"18\"ms) [Parameters=[\"\"], CommandType='Text', CommandTimeout='30']\"\r\n\"\"SELECT [o].[Id], [o].[EventDate], [o].[EventPayload], [o].[EventType], [o].[ExpireDate]\r\nFROM [OutboxMessages] AS [o]\r\nWHERE ([o].[ExpireDate] IS NULL) OR [o].[ExpireDate] >= GETDATE()\"","fields":{"elapsed":"18","parameters":"","commandType":"Text","commandTimeout":30,"newLine":"\r\n","commandText":"SELECT [o].[Id], [o].[EventDate], [o].[EventPayload], [o].[EventType], [o].[ExpireDate]\r\nFROM [OutboxMessages] AS [o]\r\nWHERE ([o].[ExpireDate] IS NULL) OR [o].[ExpireDate] >= GETDATE()","EventId":{"Id":20101,"Name":"Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted"},"SourceContext":"Microsoft.EntityFrameworkCore.Database.Command"}}
{"@timestamp":"2023-05-15T09:52:43.9550688+03:30","level":"Information","messageTemplate":"Bus started: {HostAddress}","message":"Bus started: rabbitmq://localhost:0/","fields":{"HostAddress":"rabbitmq://localhost:0/","SourceContext":"MassTransit"}}
{"@timestamp":"2023-05-15T09:52:43.9657029+03:30","level":"Information","messageTemplate":"Now listening on: {address}","message":"Now listening on: \"https://localhost:7211\"","fields":{"address":"https://localhost:7211","EventId":{"Id":14,"Name":"ListeningOnAddress"},"SourceContext":"Microsoft.Hosting.Lifetime"}}
{"@timestamp":"2023-05-15T09:52:43.9660400+03:30","level":"Information","messageTemplate":"Now listening on: {address}","message":"Now listening on: \"http://localhost:5112\"","fields":{"address":"http://localhost:5112","EventId":{"Id":14,"Name":"ListeningOnAddress"},"SourceContext":"Microsoft.Hosting.Lifetime"}}
{"@timestamp":"2023-05-15T09:52:43.9664044+03:30","level":"Information","messageTemplate":"Application started. Press Ctrl+C to shut down.","message":"Application started. Press Ctrl+C to shut down.","fields":{"SourceContext":"Microsoft.Hosting.Lifetime"}}
{"@timestamp":"2023-05-15T09:52:43.9664774+03:30","level":"Information","messageTemplate":"Hosting environment: {EnvName}","message":"Hosting environment: \"Development\"","fields":{"EnvName":"Development","SourceContext":"Microsoft.Hosting.Lifetime"}}
{"@timestamp":"2023-05-15T09:52:43.9665080+03:30","level":"Information","messageTemplate":"Content root path: {ContentRoot}","message":"Content root path: \"D:\\Mardomi\\Projects\\RabbitMqSample\\RabbitMqSample.Publisher\"","fields":{"ContentRoot":"D:\\Mardomi\\Projects\\RabbitMqSample\\RabbitMqSample.Publisher","SourceContext":"Microsoft.Hosting.Lifetime"}}
{"@timestamp":"2023-05-15T09:52:48.7612418+03:30","level":"Information","messageTemplate":"Executed DbCommand ({elapsed}ms) [Parameters=[{parameters}], CommandType='{commandType}', CommandTimeout='{commandTimeout}']{newLine}{commandText}","message":"Executed DbCommand (\"11\"ms) [Parameters=[\"\"], CommandType='Text', CommandTimeout='30']\"\r\n\"\"SELECT [o].[Id], [o].[EventDate], [o].[EventPayload], [o].[EventType], [o].[ExpireDate]\r\nFROM [OutboxMessages] AS [o]\r\nWHERE ([o].[ExpireDate] IS NULL) OR [o].[ExpireDate] >= GETDATE()\"","fields":{"elapsed":"11","parameters":"","commandType":"Text","commandTimeout":30,"newLine":"\r\n","commandText":"SELECT [o].[Id], [o].[EventDate], [o].[EventPayload], [o].[EventType], [o].[ExpireDate]\r\nFROM [OutboxMessages] AS [o]\r\nWHERE ([o].[ExpireDate] IS NULL) OR [o].[ExpireDate] >= GETDATE()","EventId":{"Id":20101,"Name":"Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted"},"SourceContext":"Microsoft.EntityFrameworkCore.Database.Command"}}
{"@timestamp":"2023-05-15T09:52:48.7735269+03:30","level":"Information","messageTemplate":"{HostingRequestStartingLog:l}","message":"Request starting HTTP/2 GET https://localhost:7211/swagger/index.html - -","fields":{"Protocol":"HTTP/2","Method":"GET","ContentType":null,"ContentLength":null,"Scheme":"https","Host":"localhost:7211","PathBase":"","Path":"/swagger/index.html","QueryString":"","HostingRequestStartingLog":"Request starting HTTP/2 GET https://localhost:7211/swagger/index.html - -","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HMQL1J5MT4T7:00000001","RequestPath":"/swagger/index.html","ConnectionId":"0HMQL1J5MT4T7"},"renderings":{"HostingRequestStartingLog":[{"Format":"l","Rendering":"Request starting HTTP/2 GET https://localhost:7211/swagger/index.html - -"}]}}
{"@timestamp":"2023-05-15T09:52:49.1504290+03:30","level":"Information","messageTemplate":"{HostingRequestStartingLog:l}","message":"Request starting HTTP/2 GET https://localhost:7211/_framework/aspnetcore-browser-refresh.js - -","fields":{"Protocol":"HTTP/2","Method":"GET","ContentType":null,"ContentLength":null,"Scheme":"https","Host":"localhost:7211","PathBase":"","Path":"/_framework/aspnetcore-browser-refresh.js","QueryString":"","HostingRequestStartingLog":"Request starting HTTP/2 GET https://localhost:7211/_framework/aspnetcore-browser-refresh.js - -","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HMQL1J5MT4T7:00000003","RequestPath":"/_framework/aspnetcore-browser-refresh.js","ConnectionId":"0HMQL1J5MT4T7"},"renderings":{"HostingRequestStartingLog":[{"Format":"l","Rendering":"Request starting HTTP/2 GET https://localhost:7211/_framework/aspnetcore-browser-refresh.js - -"}]}}
{"@timestamp":"2023-05-15T09:52:49.1518293+03:30","level":"Information","messageTemplate":"{HostingRequestStartingLog:l}","message":"Request starting HTTP/2 GET https://localhost:7211/_vs/browserLink - -","fields":{"Protocol":"HTTP/2","Method":"GET","ContentType":null,"ContentLength":null,"Scheme":"https","Host":"localhost:7211","PathBase":"","Path":"/_vs/browserLink","QueryString":"","HostingRequestStartingLog":"Request starting HTTP/2 GET https://localhost:7211/_vs/browserLink - -","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HMQL1J5MT4T7:00000005","RequestPath":"/_vs/browserLink","ConnectionId":"0HMQL1J5MT4T7"},"renderings":{"HostingRequestStartingLog":[{"Format":"l","Rendering":"Request starting HTTP/2 GET https://localhost:7211/_vs/browserLink - -"}]}}
{"@timestamp":"2023-05-15T09:52:49.1613471+03:30","level":"Information","messageTemplate":"{HostingRequestFinishedLog:l}","message":"Request finished HTTP/2 GET https://localhost:7211/swagger/index.html - - - 200 - text/html;charset=utf-8 385.2951ms","fields":{"ElapsedMilliseconds":385.2951,"StatusCode":200,"ContentType":"text/html;charset=utf-8","ContentLength":null,"Protocol":"HTTP/2","Method":"GET","Scheme":"https","Host":"localhost:7211","PathBase":"","Path":"/swagger/index.html","QueryString":"","HostingRequestFinishedLog":"Request finished HTTP/2 GET https://localhost:7211/swagger/index.html - - - 200 - text/html;charset=utf-8 385.2951ms","EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HMQL1J5MT4T7:00000001","RequestPath":"/swagger/index.html","ConnectionId":"0HMQL1J5MT4T7"},"renderings":{"HostingRequestFinishedLog":[{"Format":"l","Rendering":"Request finished HTTP/2 GET https://localhost:7211/swagger/index.html - - - 200 - text/html;charset=utf-8 385.2951ms"}]}}
{"@timestamp":"2023-05-15T09:52:49.1673485+03:30","level":"Information","messageTemplate":"{HostingRequestFinishedLog:l}","message":"Request finished HTTP/2 GET https://localhost:7211/_framework/aspnetcore-browser-refresh.js - - - 200 12018 application/javascript;+charset=utf-8 16.0670ms","fields":{"ElapsedMilliseconds":16.067,"StatusCode":200,"ContentType":"application/javascript; charset=utf-8","ContentLength":12018,"Protocol":"HTTP/2","Method":"GET","Scheme":"https","Host":"localhost:7211","PathBase":"","Path":"/_framework/aspnetcore-browser-refresh.js","QueryString":"","HostingRequestFinishedLog":"Request finished HTTP/2 GET https://localhost:7211/_framework/aspnetcore-browser-refresh.js - - - 200 12018 application/javascript;+charset=utf-8 16.0670ms","EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HMQL1J5MT4T7:00000003","RequestPath":"/_framework/aspnetcore-browser-refresh.js","ConnectionId":"0HMQL1J5MT4T7"},"renderings":{"HostingRequestFinishedLog":[{"Format":"l","Rendering":"Request finished HTTP/2 GET https://localhost:7211/_framework/aspnetcore-browser-refresh.js - - - 200 12018 application/javascript;+charset=utf-8 16.0670ms"}]}}
{"@timestamp":"2023-05-15T09:52:49.2846513+03:30","level":"Information","messageTemplate":"{HostingRequestFinishedLog:l}","message":"Request finished HTTP/2 GET https://localhost:7211/_vs/browserLink - - - 200 - text/javascript;+charset=UTF-8 132.7801ms","fields":{"ElapsedMilliseconds":132.7801,"StatusCode":200,"ContentType":"text/javascript; charset=UTF-8","ContentLength":null,"Protocol":"HTTP/2","Method":"GET","Scheme":"https","Host":"localhost:7211","PathBase":"","Path":"/_vs/browserLink","QueryString":"","HostingRequestFinishedLog":"Request finished HTTP/2 GET https://localhost:7211/_vs/browserLink - - - 200 - text/javascript;+charset=UTF-8 132.7801ms","EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HMQL1J5MT4T7:00000005","RequestPath":"/_vs/browserLink","ConnectionId":"0HMQL1J5MT4T7"},"renderings":{"HostingRequestFinishedLog":[{"Format":"l","Rendering":"Request finished HTTP/2 GET https://localhost:7211/_vs/browserLink - - - 200 - text/javascript;+charset=UTF-8 132.7801ms"}]}}
{"@timestamp":"2023-05-15T09:52:49.5337845+03:30","level":"Information","messageTemplate":"{HostingRequestStartingLog:l}","message":"Request starting HTTP/2 GET https://localhost:7211/swagger/v1/swagger.json - -","fields":{"Protocol":"HTTP/2","Method":"GET","ContentType":null,"ContentLength":null,"Scheme":"https","Host":"localhost:7211","PathBase":"","Path":"/swagger/v1/swagger.json","QueryString":"","HostingRequestStartingLog":"Request starting HTTP/2 GET https://localhost:7211/swagger/v1/swagger.json - -","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HMQL1J5MT4T7:00000007","RequestPath":"/swagger/v1/swagger.json","ConnectionId":"0HMQL1J5MT4T7"},"renderings":{"HostingRequestStartingLog":[{"Format":"l","Rendering":"Request starting HTTP/2 GET https://localhost:7211/swagger/v1/swagger.json - -"}]}}
{"@timestamp":"2023-05-15T09:52:49.6657975+03:30","level":"Information","messageTemplate":"{HostingRequestFinishedLog:l}","message":"Request finished HTTP/2 GET https://localhost:7211/swagger/v1/swagger.json - - - 200 - application/json;charset=utf-8 132.0061ms","fields":{"ElapsedMilliseconds":132.0061,"StatusCode":200,"ContentType":"application/json;charset=utf-8","ContentLength":null,"Protocol":"HTTP/2","Method":"GET","Scheme":"https","Host":"localhost:7211","PathBase":"","Path":"/swagger/v1/swagger.json","QueryString":"","HostingRequestFinishedLog":"Request finished HTTP/2 GET https://localhost:7211/swagger/v1/swagger.json - - - 200 - application/json;charset=utf-8 132.0061ms","EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HMQL1J5MT4T7:00000007","RequestPath":"/swagger/v1/swagger.json","ConnectionId":"0HMQL1J5MT4T7"},"renderings":{"HostingRequestFinishedLog":[{"Format":"l","Rendering":"Request finished HTTP/2 GET https://localhost:7211/swagger/v1/swagger.json - - - 200 - application/json;charset=utf-8 132.0061ms"}]}}
{"@timestamp":"2023-05-15T09:52:53.8304530+03:30","level":"Information","messageTemplate":"Executed DbCommand ({elapsed}ms) [Parameters=[{parameters}], CommandType='{commandType}', CommandTimeout='{commandTimeout}']{newLine}{commandText}","message":"Executed DbCommand (\"1\"ms) [Parameters=[\"\"], CommandType='Text', CommandTimeout='30']\"\r\n\"\"SELECT [o].[Id], [o].[EventDate], [o].[EventPayload], [o].[EventType], [o].[ExpireDate]\r\nFROM [OutboxMessages] AS [o]\r\nWHERE ([o].[ExpireDate] IS NULL) OR [o].[ExpireDate] >= GETDATE()\"","fields":{"elapsed":"1","parameters":"","commandType":"Text","commandTimeout":30,"newLine":"\r\n","commandText":"SELECT [o].[Id], [o].[EventDate], [o].[EventPayload], [o].[EventType], [o].[ExpireDate]\r\nFROM [OutboxMessages] AS [o]\r\nWHERE ([o].[ExpireDate] IS NULL) OR [o].[ExpireDate] >= GETDATE()","EventId":{"Id":20101,"Name":"Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted"},"SourceContext":"Microsoft.EntityFrameworkCore.Database.Command"}}
{"@timestamp":"2023-05-15T09:52:58.8409686+03:30","level":"Information","messageTemplate":"Executed DbCommand ({elapsed}ms) [Parameters=[{parameters}], CommandType='{commandType}', CommandTimeout='{commandTimeout}']{newLine}{commandText}","message":"Executed DbCommand (\"1\"ms) [Parameters=[\"\"], CommandType='Text', CommandTimeout='30']\"\r\n\"\"SELECT [o].[Id], [o].[EventDate], [o].[EventPayload], [o].[EventType], [o].[ExpireDate]\r\nFROM [OutboxMessages] AS [o]\r\nWHERE ([o].[ExpireDate] IS NULL) OR [o].[ExpireDate] >= GETDATE()\"","fields":{"elapsed":"1","parameters":"","commandType":"Text","commandTimeout":30,"newLine":"\r\n","commandText":"SELECT [o].[Id], [o].[EventDate], [o].[EventPayload], [o].[EventType], [o].[ExpireDate]\r\nFROM [OutboxMessages] AS [o]\r\nWHERE ([o].[ExpireDate] IS NULL) OR [o].[ExpireDate] >= GETDATE()","EventId":{"Id":20101,"Name":"Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted"},"SourceContext":"Microsoft.EntityFrameworkCore.Database.Command"}}
{"@timestamp":"2023-05-15T09:53:03.8446912+03:30","level":"Information","messageTemplate":"Executed DbCommand ({elapsed}ms) [Parameters=[{parameters}], CommandType='{commandType}', CommandTimeout='{commandTimeout}']{newLine}{commandText}","message":"Executed DbCommand (\"0\"ms) [Parameters=[\"\"], CommandType='Text', CommandTimeout='30']\"\r\n\"\"SELECT [o].[Id], [o].[EventDate], [o].[EventPayload], [o].[EventType], [o].[ExpireDate]\r\nFROM [OutboxMessages] AS [o]\r\nWHERE ([o].[ExpireDate] IS NULL) OR [o].[ExpireDate] >= GETDATE()\"","fields":{"elapsed":"0","parameters":"","commandType":"Text","commandTimeout":30,"newLine":"\r\n","commandText":"SELECT [o].[Id], [o].[EventDate], [o].[EventPayload], [o].[EventType], [o].[ExpireDate]\r\nFROM [OutboxMessages] AS [o]\r\nWHERE ([o].[ExpireDate] IS NULL) OR [o].[ExpireDate] >= GETDATE()","EventId":{"Id":20101,"Name":"Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted"},"SourceContext":"Microsoft.EntityFrameworkCore.Database.Command"}}
{"@timestamp":"2023-05-15T09:53:08.8586299+03:30","level":"Information","messageTemplate":"Executed DbCommand ({elapsed}ms) [Parameters=[{parameters}], CommandType='{commandType}', CommandTimeout='{commandTimeout}']{newLine}{commandText}","message":"Executed DbCommand (\"0\"ms) [Parameters=[\"\"], CommandType='Text', CommandTimeout='30']\"\r\n\"\"SELECT [o].[Id], [o].[EventDate], [o].[EventPayload], [o].[EventType], [o].[ExpireDate]\r\nFROM [OutboxMessages] AS [o]\r\nWHERE ([o].[ExpireDate] IS NULL) OR [o].[ExpireDate] >= GETDATE()\"","fields":{"elapsed":"0","parameters":"","commandType":"Text","commandTimeout":30,"newLine":"\r\n","commandText":"SELECT [o].[Id], [o].[EventDate], [o].[EventPayload], [o].[EventType], [o].[ExpireDate]\r\nFROM [OutboxMessages] AS [o]\r\nWHERE ([o].[ExpireDate] IS NULL) OR [o].[ExpireDate] >= GETDATE()","EventId":{"Id":20101,"Name":"Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted"},"SourceContext":"Microsoft.EntityFrameworkCore.Database.Command"}}
{"@timestamp":"2023-05-15T09:53:13.8618009+03:30","level":"Information","messageTemplate":"Executed DbCommand ({elapsed}ms) [Parameters=[{parameters}], CommandType='{commandType}', CommandTimeout='{commandTimeout}']{newLine}{commandText}","message":"Executed DbCommand (\"0\"ms) [Parameters=[\"\"], CommandType='Text', CommandTimeout='30']\"\r\n\"\"SELECT [o].[Id], [o].[EventDate], [o].[EventPayload], [o].[EventType], [o].[ExpireDate]\r\nFROM [OutboxMessages] AS [o]\r\nWHERE ([o].[ExpireDate] IS NULL) OR [o].[ExpireDate] >= GETDATE()\"","fields":{"elapsed":"0","parameters":"","commandType":"Text","commandTimeout":30,"newLine":"\r\n","commandText":"SELECT [o].[Id], [o].[EventDate], [o].[EventPayload], [o].[EventType], [o].[ExpireDate]\r\nFROM [OutboxMessages] AS [o]\r\nWHERE ([o].[ExpireDate] IS NULL) OR [o].[ExpireDate] >= GETDATE()","EventId":{"Id":20101,"Name":"Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted"},"SourceContext":"Microsoft.EntityFrameworkCore.Database.Command"}}
{"@timestamp":"2023-05-15T09:53:18.8731929+03:30","level":"Information","messageTemplate":"Executed DbCommand ({elapsed}ms) [Parameters=[{parameters}], CommandType='{commandType}', CommandTimeout='{commandTimeout}']{newLine}{commandText}","message":"Executed DbCommand (\"0\"ms) [Parameters=[\"\"], CommandType='Text', CommandTimeout='30']\"\r\n\"\"SELECT [o].[Id], [o].[EventDate], [o].[EventPayload], [o].[EventType], [o].[ExpireDate]\r\nFROM [OutboxMessages] AS [o]\r\nWHERE ([o].[ExpireDate] IS NULL) OR [o].[ExpireDate] >= GETDATE()\"","fields":{"elapsed":"0","parameters":"","commandType":"Text","commandTimeout":30,"newLine":"\r\n","commandText":"SELECT [o].[Id], [o].[EventDate], [o].[EventPayload], [o].[EventType], [o].[ExpireDate]\r\nFROM [OutboxMessages] AS [o]\r\nWHERE ([o].[ExpireDate] IS NULL) OR [o].[ExpireDate] >= GETDATE()","EventId":{"Id":20101,"Name":"Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted"},"SourceContext":"Microsoft.EntityFrameworkCore.Database.Command"}}
{"@timestamp":"2023-05-15T09:53:23.8814536+03:30","level":"Information","messageTemplate":"Executed DbCommand ({elapsed}ms) [Parameters=[{parameters}], CommandType='{commandType}', CommandTimeout='{commandTimeout}']{newLine}{commandText}","message":"Executed DbCommand (\"0\"ms) [Parameters=[\"\"], CommandType='Text', CommandTimeout='30']\"\r\n\"\"SELECT [o].[Id], [o].[EventDate], [o].[EventPayload], [o].[EventType], [o].[ExpireDate]\r\nFROM [OutboxMessages] AS [o]\r\nWHERE ([o].[ExpireDate] IS NULL) OR [o].[ExpireDate] >= GETDATE()\"","fields":{"elapsed":"0","parameters":"","commandType":"Text","commandTimeout":30,"newLine":"\r\n","commandText":"SELECT [o].[Id], [o].[EventDate], [o].[EventPayload], [o].[EventType], [o].[ExpireDate]\r\nFROM [OutboxMessages] AS [o]\r\nWHERE ([o].[ExpireDate] IS NULL) OR [o].[ExpireDate] >= GETDATE()","EventId":{"Id":20101,"Name":"Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted"},"SourceContext":"Microsoft.EntityFrameworkCore.Database.Command"}}
{"@timestamp":"2023-05-15T09:53:28.2744272+03:30","level":"Information","messageTemplate":"{HostingRequestStartingLog:l}","message":"Request starting HTTP/2 GET https://localhost:7211/Event/FireEvent - -","fields":{"Protocol":"HTTP/2","Method":"GET","ContentType":null,"ContentLength":null,"Scheme":"https","Host":"localhost:7211","PathBase":"","Path":"/Event/FireEvent","QueryString":"","HostingRequestStartingLog":"Request starting HTTP/2 GET https://localhost:7211/Event/FireEvent - -","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HMQL1J5MT4T7:00000009","RequestPath":"/Event/FireEvent","ConnectionId":"0HMQL1J5MT4T7"},"renderings":{"HostingRequestStartingLog":[{"Format":"l","Rendering":"Request starting HTTP/2 GET https://localhost:7211/Event/FireEvent - -"}]}}
{"@timestamp":"2023-05-15T09:53:28.2804031+03:30","level":"Information","messageTemplate":"Executing endpoint '{EndpointName}'","message":"Executing endpoint '\"RabbitMqSample.Publisher.Controllers.EventController.FireEvent (RabbitMqSample.Publisher)\"'","fields":{"EndpointName":"RabbitMqSample.Publisher.Controllers.EventController.FireEvent (RabbitMqSample.Publisher)","EventId":{"Name":"ExecutingEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HMQL1J5MT4T7:00000009","RequestPath":"/Event/FireEvent","ConnectionId":"0HMQL1J5MT4T7"}}
{"@timestamp":"2023-05-15T09:53:28.2916363+03:30","level":"Information","messageTemplate":"Route matched with {RouteData}. Executing controller action with signature {MethodInfo} on controller {Controller} ({AssemblyName}).","message":"Route matched with \"{action = \\\"FireEvent\\\", controller = \\\"Event\\\"}\". Executing controller action with signature \"System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] FireEvent()\" on controller \"RabbitMqSample.Publisher.Controllers.EventController\" (\"RabbitMqSample.Publisher\").","fields":{"RouteData":"{action = \"FireEvent\", controller = \"Event\"}","MethodInfo":"System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] FireEvent()","Controller":"RabbitMqSample.Publisher.Controllers.EventController","AssemblyName":"RabbitMqSample.Publisher","EventId":{"Id":102,"Name":"ControllerActionExecuting"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker","ActionId":"49350fce-e933-4b94-9b76-933995a110b0","ActionName":"RabbitMqSample.Publisher.Controllers.EventController.FireEvent (RabbitMqSample.Publisher)","RequestId":"0HMQL1J5MT4T7:00000009","RequestPath":"/Event/FireEvent","ConnectionId":"0HMQL1J5MT4T7"}}
{"@timestamp":"2023-05-15T09:53:28.3435903+03:30","level":"Information","messageTemplate":"Executing action method {ActionName} - Validation state: {ValidationState}","message":"Executing action method \"RabbitMqSample.Publisher.Controllers.EventController.FireEvent (RabbitMqSample.Publisher)\" - Validation state: Valid","fields":{"ActionName":"RabbitMqSample.Publisher.Controllers.EventController.FireEvent (RabbitMqSample.Publisher)","ValidationState":"Valid","EventId":{"Id":101,"Name":"ActionMethodExecuting"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker","ActionId":"49350fce-e933-4b94-9b76-933995a110b0","RequestId":"0HMQL1J5MT4T7:00000009","RequestPath":"/Event/FireEvent","ConnectionId":"0HMQL1J5MT4T7"}}
{"@timestamp":"2023-05-15T09:53:28.5749362+03:30","level":"Information","messageTemplate":"Executed DbCommand ({elapsed}ms) [Parameters=[{parameters}], CommandType='{commandType}', CommandTimeout='{commandTimeout}']{newLine}{commandText}","message":"Executed DbCommand (\"31\"ms) [Parameters=[\"@p0='?' (DbType = DateTime2), @p1='?' (Size = 4000), @p2='?' (Size = 4000), @p3='?' (DbType = DateTime2)\"], CommandType='Text', CommandTimeout='30']\"\r\n\"\"SET IMPLICIT_TRANSACTIONS OFF;\r\nSET NOCOUNT ON;\r\nINSERT INTO [OutboxMessages] ([EventDate], [EventPayload], [EventType], [ExpireDate])\r\nOUTPUT INSERTED.[Id]\r\nVALUES (@p0, @p1, @p2, @p3);\"","fields":{"elapsed":"31","parameters":"@p0='?' (DbType = DateTime2), @p1='?' (Size = 4000), @p2='?' (Size = 4000), @p3='?' (DbType = DateTime2)","commandType":"Text","commandTimeout":30,"newLine":"\r\n","commandText":"SET IMPLICIT_TRANSACTIONS OFF;\r\nSET NOCOUNT ON;\r\nINSERT INTO [OutboxMessages] ([EventDate], [EventPayload], [EventType], [ExpireDate])\r\nOUTPUT INSERTED.[Id]\r\nVALUES (@p0, @p1, @p2, @p3);","EventId":{"Id":20101,"Name":"Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted"},"SourceContext":"Microsoft.EntityFrameworkCore.Database.Command","ActionId":"49350fce-e933-4b94-9b76-933995a110b0","ActionName":"RabbitMqSample.Publisher.Controllers.EventController.FireEvent (RabbitMqSample.Publisher)","RequestId":"0HMQL1J5MT4T7:00000009","RequestPath":"/Event/FireEvent","ConnectionId":"0HMQL1J5MT4T7"}}
{"@timestamp":"2023-05-15T09:53:28.6074286+03:30","level":"Information","messageTemplate":"Event published successfully","message":"Event published successfully","fields":{"SourceContext":"RabbitMqSample.Publisher.Controllers.EventController","ActionId":"49350fce-e933-4b94-9b76-933995a110b0","ActionName":"RabbitMqSample.Publisher.Controllers.EventController.FireEvent (RabbitMqSample.Publisher)","RequestId":"0HMQL1J5MT4T7:00000009","RequestPath":"/Event/FireEvent","ConnectionId":"0HMQL1J5MT4T7"}}
{"@timestamp":"2023-05-15T09:53:28.6108989+03:30","level":"Information","messageTemplate":"Executed action method {ActionName}, returned result {ActionResult} in {ElapsedMilliseconds}ms.","message":"Executed action method \"RabbitMqSample.Publisher.Controllers.EventController.FireEvent (RabbitMqSample.Publisher)\", returned result \"Microsoft.AspNetCore.Mvc.OkResult\" in 264.5776ms.","fields":{"ActionName":"RabbitMqSample.Publisher.Controllers.EventController.FireEvent (RabbitMqSample.Publisher)","ActionResult":"Microsoft.AspNetCore.Mvc.OkResult","ElapsedMilliseconds":264.5776,"EventId":{"Id":103,"Name":"ActionMethodExecuted"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker","ActionId":"49350fce-e933-4b94-9b76-933995a110b0","RequestId":"0HMQL1J5MT4T7:00000009","RequestPath":"/Event/FireEvent","ConnectionId":"0HMQL1J5MT4T7"}}
{"@timestamp":"2023-05-15T09:53:28.6149255+03:30","level":"Information","messageTemplate":"Executing StatusCodeResult, setting HTTP status code {StatusCode}","message":"Executing StatusCodeResult, setting HTTP status code 200","fields":{"StatusCode":200,"EventId":{"Id":1,"Name":"HttpStatusCodeResultExecuting"},"SourceContext":"Microsoft.AspNetCore.Mvc.StatusCodeResult","ActionId":"49350fce-e933-4b94-9b76-933995a110b0","ActionName":"RabbitMqSample.Publisher.Controllers.EventController.FireEvent (RabbitMqSample.Publisher)","RequestId":"0HMQL1J5MT4T7:00000009","RequestPath":"/Event/FireEvent","ConnectionId":"0HMQL1J5MT4T7"}}
{"@timestamp":"2023-05-15T09:53:28.6185784+03:30","level":"Information","messageTemplate":"Executed action {ActionName} in {ElapsedMilliseconds}ms","message":"Executed action \"RabbitMqSample.Publisher.Controllers.EventController.FireEvent (RabbitMqSample.Publisher)\" in 323.9248ms","fields":{"ActionName":"RabbitMqSample.Publisher.Controllers.EventController.FireEvent (RabbitMqSample.Publisher)","ElapsedMilliseconds":323.9248,"EventId":{"Id":105,"Name":"ActionExecuted"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker","RequestId":"0HMQL1J5MT4T7:00000009","RequestPath":"/Event/FireEvent","ConnectionId":"0HMQL1J5MT4T7"}}
{"@timestamp":"2023-05-15T09:53:28.6192115+03:30","level":"Information","messageTemplate":"Executed endpoint '{EndpointName}'","message":"Executed endpoint '\"RabbitMqSample.Publisher.Controllers.EventController.FireEvent (RabbitMqSample.Publisher)\"'","fields":{"EndpointName":"RabbitMqSample.Publisher.Controllers.EventController.FireEvent (RabbitMqSample.Publisher)","EventId":{"Id":1,"Name":"ExecutedEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HMQL1J5MT4T7:00000009","RequestPath":"/Event/FireEvent","ConnectionId":"0HMQL1J5MT4T7"}}
{"@timestamp":"2023-05-15T09:53:28.6197327+03:30","level":"Information","messageTemplate":"{HostingRequestFinishedLog:l}","message":"Request finished HTTP/2 GET https://localhost:7211/Event/FireEvent - - - 200 0 - 345.3173ms","fields":{"ElapsedMilliseconds":345.3173,"StatusCode":200,"ContentType":null,"ContentLength":0,"Protocol":"HTTP/2","Method":"GET","Scheme":"https","Host":"localhost:7211","PathBase":"","Path":"/Event/FireEvent","QueryString":"","HostingRequestFinishedLog":"Request finished HTTP/2 GET https://localhost:7211/Event/FireEvent - - - 200 0 - 345.3173ms","EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HMQL1J5MT4T7:00000009","RequestPath":"/Event/FireEvent","ConnectionId":"0HMQL1J5MT4T7"},"renderings":{"HostingRequestFinishedLog":[{"Format":"l","Rendering":"Request finished HTTP/2 GET https://localhost:7211/Event/FireEvent - - - 200 0 - 345.3173ms"}]}}
{"@timestamp":"2023-05-15T09:53:28.8885782+03:30","level":"Information","messageTemplate":"Executed DbCommand ({elapsed}ms) [Parameters=[{parameters}], CommandType='{commandType}', CommandTimeout='{commandTimeout}']{newLine}{commandText}","message":"Executed DbCommand (\"2\"ms) [Parameters=[\"\"], CommandType='Text', CommandTimeout='30']\"\r\n\"\"SELECT [o].[Id], [o].[EventDate], [o].[EventPayload], [o].[EventType], [o].[ExpireDate]\r\nFROM [OutboxMessages] AS [o]\r\nWHERE ([o].[ExpireDate] IS NULL) OR [o].[ExpireDate] >= GETDATE()\"","fields":{"elapsed":"2","parameters":"","commandType":"Text","commandTimeout":30,"newLine":"\r\n","commandText":"SELECT [o].[Id], [o].[EventDate], [o].[EventPayload], [o].[EventType], [o].[ExpireDate]\r\nFROM [OutboxMessages] AS [o]\r\nWHERE ([o].[ExpireDate] IS NULL) OR [o].[ExpireDate] >= GETDATE()","EventId":{"Id":20101,"Name":"Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted"},"SourceContext":"Microsoft.EntityFrameworkCore.Database.Command"}}
{"@timestamp":"2023-05-15T09:53:29.0130801+03:30","level":"Information","messageTemplate":"{HostingRequestStartingLog:l}","message":"Request starting HTTP/2 GET https://localhost:7211/Event/FireEvent - -","fields":{"Protocol":"HTTP/2","Method":"GET","ContentType":null,"ContentLength":null,"Scheme":"https","Host":"localhost:7211","PathBase":"","Path":"/Event/FireEvent","QueryString":"","HostingRequestStartingLog":"Request starting HTTP/2 GET https://localhost:7211/Event/FireEvent - -","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HMQL1J5MT4T7:0000000B","RequestPath":"/Event/FireEvent","ConnectionId":"0HMQL1J5MT4T7"},"renderings":{"HostingRequestStartingLog":[{"Format":"l","Rendering":"Request starting HTTP/2 GET https://localhost:7211/Event/FireEvent - -"}]}}
{"@timestamp":"2023-05-15T09:53:29.0135720+03:30","level":"Information","messageTemplate":"Executing endpoint '{EndpointName}'","message":"Executing endpoint '\"RabbitMqSample.Publisher.Controllers.EventController.FireEvent (RabbitMqSample.Publisher)\"'","fields":{"EndpointName":"RabbitMqSample.Publisher.Controllers.EventController.FireEvent (RabbitMqSample.Publisher)","EventId":{"Name":"ExecutingEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HMQL1J5MT4T7:0000000B","RequestPath":"/Event/FireEvent","ConnectionId":"0HMQL1J5MT4T7"}}
{"@timestamp":"2023-05-15T09:53:29.0139145+03:30","level":"Information","messageTemplate":"Route matched with {RouteData}. Executing controller action with signature {MethodInfo} on controller {Controller} ({AssemblyName}).","message":"Route matched with \"{action = \\\"FireEvent\\\", controller = \\\"Event\\\"}\". Executing controller action with signature \"System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] FireEvent()\" on controller \"RabbitMqSample.Publisher.Controllers.EventController\" (\"RabbitMqSample.Publisher\").","fields":{"RouteData":"{action = \"FireEvent\", controller = \"Event\"}","MethodInfo":"System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] FireEvent()","Controller":"RabbitMqSample.Publisher.Controllers.EventController","AssemblyName":"RabbitMqSample.Publisher","EventId":{"Id":102,"Name":"ControllerActionExecuting"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker","ActionId":"49350fce-e933-4b94-9b76-933995a110b0","ActionName":"RabbitMqSample.Publisher.Controllers.EventController.FireEvent (RabbitMqSample.Publisher)","RequestId":"0HMQL1J5MT4T7:0000000B","RequestPath":"/Event/FireEvent","ConnectionId":"0HMQL1J5MT4T7"}}
{"@timestamp":"2023-05-15T09:53:29.0282435+03:30","level":"Information","messageTemplate":"Executing action method {ActionName} - Validation state: {ValidationState}","message":"Executing action method \"RabbitMqSample.Publisher.Controllers.EventController.FireEvent (RabbitMqSample.Publisher)\" - Validation state: Valid","fields":{"ActionName":"RabbitMqSample.Publisher.Controllers.EventController.FireEvent (RabbitMqSample.Publisher)","ValidationState":"Valid","EventId":{"Id":101,"Name":"ActionMethodExecuting"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker","ActionId":"49350fce-e933-4b94-9b76-933995a110b0","RequestId":"0HMQL1J5MT4T7:0000000B","RequestPath":"/Event/FireEvent","ConnectionId":"0HMQL1J5MT4T7"}}
{"@timestamp":"2023-05-15T09:53:29.0346343+03:30","level":"Information","messageTemplate":"Executed DbCommand ({elapsed}ms) [Parameters=[{parameters}], CommandType='{commandType}', CommandTimeout='{commandTimeout}']{newLine}{commandText}","message":"Executed DbCommand (\"3\"ms) [Parameters=[\"@p0='?' (DbType = DateTime2), @p1='?' (Size = 4000), @p2='?' (Size = 4000), @p3='?' (DbType = DateTime2)\"], CommandType='Text', CommandTimeout='30']\"\r\n\"\"SET IMPLICIT_TRANSACTIONS OFF;\r\nSET NOCOUNT ON;\r\nINSERT INTO [OutboxMessages] ([EventDate], [EventPayload], [EventType], [ExpireDate])\r\nOUTPUT INSERTED.[Id]\r\nVALUES (@p0, @p1, @p2, @p3);\"","fields":{"elapsed":"3","parameters":"@p0='?' (DbType = DateTime2), @p1='?' (Size = 4000), @p2='?' (Size = 4000), @p3='?' (DbType = DateTime2)","commandType":"Text","commandTimeout":30,"newLine":"\r\n","commandText":"SET IMPLICIT_TRANSACTIONS OFF;\r\nSET NOCOUNT ON;\r\nINSERT INTO [OutboxMessages] ([EventDate], [EventPayload], [EventType], [ExpireDate])\r\nOUTPUT INSERTED.[Id]\r\nVALUES (@p0, @p1, @p2, @p3);","EventId":{"Id":20101,"Name":"Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted"},"SourceContext":"Microsoft.EntityFrameworkCore.Database.Command","ActionId":"49350fce-e933-4b94-9b76-933995a110b0","ActionName":"RabbitMqSample.Publisher.Controllers.EventController.FireEvent (RabbitMqSample.Publisher)","RequestId":"0HMQL1J5MT4T7:0000000B","RequestPath":"/Event/FireEvent","ConnectionId":"0HMQL1J5MT4T7"}}
{"@timestamp":"2023-05-15T09:53:29.0359743+03:30","level":"Information","messageTemplate":"Event published successfully","message":"Event published successfully","fields":{"SourceContext":"RabbitMqSample.Publisher.Controllers.EventController","ActionId":"49350fce-e933-4b94-9b76-933995a110b0","ActionName":"RabbitMqSample.Publisher.Controllers.EventController.FireEvent (RabbitMqSample.Publisher)","RequestId":"0HMQL1J5MT4T7:0000000B","RequestPath":"/Event/FireEvent","ConnectionId":"0HMQL1J5MT4T7"}}
{"@timestamp":"2023-05-15T09:53:29.0360784+03:30","level":"Information","messageTemplate":"Executed action method {ActionName}, returned result {ActionResult} in {ElapsedMilliseconds}ms.","message":"Executed action method \"RabbitMqSample.Publisher.Controllers.EventController.FireEvent (RabbitMqSample.Publisher)\", returned result \"Microsoft.AspNetCore.Mvc.OkResult\" in 7.6829ms.","fields":{"ActionName":"RabbitMqSample.Publisher.Controllers.EventController.FireEvent (RabbitMqSample.Publisher)","ActionResult":"Microsoft.AspNetCore.Mvc.OkResult","ElapsedMilliseconds":7.6829,"EventId":{"Id":103,"Name":"ActionMethodExecuted"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker","ActionId":"49350fce-e933-4b94-9b76-933995a110b0","RequestId":"0HMQL1J5MT4T7:0000000B","RequestPath":"/Event/FireEvent","ConnectionId":"0HMQL1J5MT4T7"}}
{"@timestamp":"2023-05-15T09:53:29.0364202+03:30","level":"Information","messageTemplate":"Executing StatusCodeResult, setting HTTP status code {StatusCode}","message":"Executing StatusCodeResult, setting HTTP status code 200","fields":{"StatusCode":200,"EventId":{"Id":1,"Name":"HttpStatusCodeResultExecuting"},"SourceContext":"Microsoft.AspNetCore.Mvc.StatusCodeResult","ActionId":"49350fce-e933-4b94-9b76-933995a110b0","ActionName":"RabbitMqSample.Publisher.Controllers.EventController.FireEvent (RabbitMqSample.Publisher)","RequestId":"0HMQL1J5MT4T7:0000000B","RequestPath":"/Event/FireEvent","ConnectionId":"0HMQL1J5MT4T7"}}
{"@timestamp":"2023-05-15T09:53:29.0365585+03:30","level":"Information","messageTemplate":"Executed action {ActionName} in {ElapsedMilliseconds}ms","message":"Executed action \"RabbitMqSample.Publisher.Controllers.EventController.FireEvent (RabbitMqSample.Publisher)\" in 22.5666ms","fields":{"ActionName":"RabbitMqSample.Publisher.Controllers.EventController.FireEvent (RabbitMqSample.Publisher)","ElapsedMilliseconds":22.5666,"EventId":{"Id":105,"Name":"ActionExecuted"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker","RequestId":"0HMQL1J5MT4T7:0000000B","RequestPath":"/Event/FireEvent","ConnectionId":"0HMQL1J5MT4T7"}}
{"@timestamp":"2023-05-15T09:53:29.0366121+03:30","level":"Information","messageTemplate":"Executed endpoint '{EndpointName}'","message":"Executed endpoint '\"RabbitMqSample.Publisher.Controllers.EventController.FireEvent (RabbitMqSample.Publisher)\"'","fields":{"EndpointName":"RabbitMqSample.Publisher.Controllers.EventController.FireEvent (RabbitMqSample.Publisher)","EventId":{"Id":1,"Name":"ExecutedEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HMQL1J5MT4T7:0000000B","RequestPath":"/Event/FireEvent","ConnectionId":"0HMQL1J5MT4T7"}}
{"@timestamp":"2023-05-15T09:53:29.0367398+03:30","level":"Information","messageTemplate":"{HostingRequestFinishedLog:l}","message":"Request finished HTTP/2 GET https://localhost:7211/Event/FireEvent - - - 200 0 - 23.6446ms","fields":{"ElapsedMilliseconds":23.6446,"StatusCode":200,"ContentType":null,"ContentLength":0,"Protocol":"HTTP/2","Method":"GET","Scheme":"https","Host":"localhost:7211","PathBase":"","Path":"/Event/FireEvent","QueryString":"","HostingRequestFinishedLog":"Request finished HTTP/2 GET https://localhost:7211/Event/FireEvent - - - 200 0 - 23.6446ms","EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HMQL1J5MT4T7:0000000B","RequestPath":"/Event/FireEvent","ConnectionId":"0HMQL1J5MT4T7"},"renderings":{"HostingRequestFinishedLog":[{"Format":"l","Rendering":"Request finished HTTP/2 GET https://localhost:7211/Event/FireEvent - - - 200 0 - 23.6446ms"}]}}
{"@timestamp":"2023-05-15T09:53:29.1658808+03:30","level":"Information","messageTemplate":"Executed DbCommand ({elapsed}ms) [Parameters=[{parameters}], CommandType='{commandType}', CommandTimeout='{commandTimeout}']{newLine}{commandText}","message":"Executed DbCommand (\"2\"ms) [Parameters=[\"@p0='?' (DbType = Int32)\"], CommandType='Text', CommandTimeout='30']\"\r\n\"\"SET IMPLICIT_TRANSACTIONS OFF;\r\nSET NOCOUNT ON;\r\nDELETE FROM [OutboxMessages]\r\nOUTPUT 1\r\nWHERE [Id] = @p0;\"","fields":{"elapsed":"2","parameters":"@p0='?' (DbType = Int32)","commandType":"Text","commandTimeout":30,"newLine":"\r\n","commandText":"SET IMPLICIT_TRANSACTIONS OFF;\r\nSET NOCOUNT ON;\r\nDELETE FROM [OutboxMessages]\r\nOUTPUT 1\r\nWHERE [Id] = @p0;","EventId":{"Id":20101,"Name":"Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted"},"SourceContext":"Microsoft.EntityFrameworkCore.Database.Command"}}
{"@timestamp":"2023-05-15T09:53:29.1902019+03:30","level":"Information","messageTemplate":"{HostingRequestStartingLog:l}","message":"Request starting HTTP/2 GET https://localhost:7211/Event/FireEvent - -","fields":{"Protocol":"HTTP/2","Method":"GET","ContentType":null,"ContentLength":null,"Scheme":"https","Host":"localhost:7211","PathBase":"","Path":"/Event/FireEvent","QueryString":"","HostingRequestStartingLog":"Request starting HTTP/2 GET https://localhost:7211/Event/FireEvent - -","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HMQL1J5MT4T7:0000000D","RequestPath":"/Event/FireEvent","ConnectionId":"0HMQL1J5MT4T7"},"renderings":{"HostingRequestStartingLog":[{"Format":"l","Rendering":"Request starting HTTP/2 GET https://localhost:7211/Event/FireEvent - -"}]}}
{"@timestamp":"2023-05-15T09:53:29.1905750+03:30","level":"Information","messageTemplate":"Executing endpoint '{EndpointName}'","message":"Executing endpoint '\"RabbitMqSample.Publisher.Controllers.EventController.FireEvent (RabbitMqSample.Publisher)\"'","fields":{"EndpointName":"RabbitMqSample.Publisher.Controllers.EventController.FireEvent (RabbitMqSample.Publisher)","EventId":{"Name":"ExecutingEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HMQL1J5MT4T7:0000000D","RequestPath":"/Event/FireEvent","ConnectionId":"0HMQL1J5MT4T7"}}
{"@timestamp":"2023-05-15T09:53:29.1907032+03:30","level":"Information","messageTemplate":"Route matched with {RouteData}. Executing controller action with signature {MethodInfo} on controller {Controller} ({AssemblyName}).","message":"Route matched with \"{action = \\\"FireEvent\\\", controller = \\\"Event\\\"}\". Executing controller action with signature \"System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] FireEvent()\" on controller \"RabbitMqSample.Publisher.Controllers.EventController\" (\"RabbitMqSample.Publisher\").","fields":{"RouteData":"{action = \"FireEvent\", controller = \"Event\"}","MethodInfo":"System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] FireEvent()","Controller":"RabbitMqSample.Publisher.Controllers.EventController","AssemblyName":"RabbitMqSample.Publisher","EventId":{"Id":102,"Name":"ControllerActionExecuting"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker","ActionId":"49350fce-e933-4b94-9b76-933995a110b0","ActionName":"RabbitMqSample.Publisher.Controllers.EventController.FireEvent (RabbitMqSample.Publisher)","RequestId":"0HMQL1J5MT4T7:0000000D","RequestPath":"/Event/FireEvent","ConnectionId":"0HMQL1J5MT4T7"}}
{"@timestamp":"2023-05-15T09:53:29.2048690+03:30","level":"Information","messageTemplate":"Executing action method {ActionName} - Validation state: {ValidationState}","message":"Executing action method \"RabbitMqSample.Publisher.Controllers.EventController.FireEvent (RabbitMqSample.Publisher)\" - Validation state: Valid","fields":{"ActionName":"RabbitMqSample.Publisher.Controllers.EventController.FireEvent (RabbitMqSample.Publisher)","ValidationState":"Valid","EventId":{"Id":101,"Name":"ActionMethodExecuting"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker","ActionId":"49350fce-e933-4b94-9b76-933995a110b0","RequestId":"0HMQL1J5MT4T7:0000000D","RequestPath":"/Event/FireEvent","ConnectionId":"0HMQL1J5MT4T7"}}
{"@timestamp":"2023-05-15T09:53:29.2082890+03:30","level":"Information","messageTemplate":"Executed DbCommand ({elapsed}ms) [Parameters=[{parameters}], CommandType='{commandType}', CommandTimeout='{commandTimeout}']{newLine}{commandText}","message":"Executed DbCommand (\"2\"ms) [Parameters=[\"@p0='?' (DbType = DateTime2), @p1='?' (Size = 4000), @p2='?' (Size = 4000), @p3='?' (DbType = DateTime2)\"], CommandType='Text', CommandTimeout='30']\"\r\n\"\"SET IMPLICIT_TRANSACTIONS OFF;\r\nSET NOCOUNT ON;\r\nINSERT INTO [OutboxMessages] ([EventDate], [EventPayload], [EventType], [ExpireDate])\r\nOUTPUT INSERTED.[Id]\r\nVALUES (@p0, @p1, @p2, @p3);\"","fields":{"elapsed":"2","parameters":"@p0='?' (DbType = DateTime2), @p1='?' (Size = 4000), @p2='?' (Size = 4000), @p3='?' (DbType = DateTime2)","commandType":"Text","commandTimeout":30,"newLine":"\r\n","commandText":"SET IMPLICIT_TRANSACTIONS OFF;\r\nSET NOCOUNT ON;\r\nINSERT INTO [OutboxMessages] ([EventDate], [EventPayload], [EventType], [ExpireDate])\r\nOUTPUT INSERTED.[Id]\r\nVALUES (@p0, @p1, @p2, @p3);","EventId":{"Id":20101,"Name":"Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted"},"SourceContext":"Microsoft.EntityFrameworkCore.Database.Command","ActionId":"49350fce-e933-4b94-9b76-933995a110b0","ActionName":"RabbitMqSample.Publisher.Controllers.EventController.FireEvent (RabbitMqSample.Publisher)","RequestId":"0HMQL1J5MT4T7:0000000D","RequestPath":"/Event/FireEvent","ConnectionId":"0HMQL1J5MT4T7"}}
{"@timestamp":"2023-05-15T09:53:29.2085576+03:30","level":"Information","messageTemplate":"Event published successfully","message":"Event published successfully","fields":{"SourceContext":"RabbitMqSample.Publisher.Controllers.EventController","ActionId":"49350fce-e933-4b94-9b76-933995a110b0","ActionName":"RabbitMqSample.Publisher.Controllers.EventController.FireEvent (RabbitMqSample.Publisher)","RequestId":"0HMQL1J5MT4T7:0000000D","RequestPath":"/Event/FireEvent","ConnectionId":"0HMQL1J5MT4T7"}}
{"@timestamp":"2023-05-15T09:53:29.2086155+03:30","level":"Information","messageTemplate":"Executed action method {ActionName}, returned result {ActionResult} in {ElapsedMilliseconds}ms.","message":"Executed action method \"RabbitMqSample.Publisher.Controllers.EventController.FireEvent (RabbitMqSample.Publisher)\", returned result \"Microsoft.AspNetCore.Mvc.OkResult\" in 3.6263ms.","fields":{"ActionName":"RabbitMqSample.Publisher.Controllers.EventController.FireEvent (RabbitMqSample.Publisher)","ActionResult":"Microsoft.AspNetCore.Mvc.OkResult","ElapsedMilliseconds":3.6263,"EventId":{"Id":103,"Name":"ActionMethodExecuted"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker","ActionId":"49350fce-e933-4b94-9b76-933995a110b0","RequestId":"0HMQL1J5MT4T7:0000000D","RequestPath":"/Event/FireEvent","ConnectionId":"0HMQL1J5MT4T7"}}
{"@timestamp":"2023-05-15T09:53:29.2086866+03:30","level":"Information","messageTemplate":"Executing StatusCodeResult, setting HTTP status code {StatusCode}","message":"Executing StatusCodeResult, setting HTTP status code 200","fields":{"StatusCode":200,"EventId":{"Id":1,"Name":"HttpStatusCodeResultExecuting"},"SourceContext":"Microsoft.AspNetCore.Mvc.StatusCodeResult","ActionId":"49350fce-e933-4b94-9b76-933995a110b0","ActionName":"RabbitMqSample.Publisher.Controllers.EventController.FireEvent (RabbitMqSample.Publisher)","RequestId":"0HMQL1J5MT4T7:0000000D","RequestPath":"/Event/FireEvent","ConnectionId":"0HMQL1J5MT4T7"}}
{"@timestamp":"2023-05-15T09:53:29.2087321+03:30","level":"Information","messageTemplate":"Executed action {ActionName} in {ElapsedMilliseconds}ms","message":"Executed action \"RabbitMqSample.Publisher.Controllers.EventController.FireEvent (RabbitMqSample.Publisher)\" in 17.9738ms","fields":{"ActionName":"RabbitMqSample.Publisher.Controllers.EventController.FireEvent (RabbitMqSample.Publisher)","ElapsedMilliseconds":17.9738,"EventId":{"Id":105,"Name":"ActionExecuted"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker","RequestId":"0HMQL1J5MT4T7:0000000D","RequestPath":"/Event/FireEvent","ConnectionId":"0HMQL1J5MT4T7"}}
{"@timestamp":"2023-05-15T09:53:29.2087722+03:30","level":"Information","messageTemplate":"Executed endpoint '{EndpointName}'","message":"Executed endpoint '\"RabbitMqSample.Publisher.Controllers.EventController.FireEvent (RabbitMqSample.Publisher)\"'","fields":{"EndpointName":"RabbitMqSample.Publisher.Controllers.EventController.FireEvent (RabbitMqSample.Publisher)","EventId":{"Id":1,"Name":"ExecutedEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HMQL1J5MT4T7:0000000D","RequestPath":"/Event/FireEvent","ConnectionId":"0HMQL1J5MT4T7"}}
{"@timestamp":"2023-05-15T09:53:29.2089294+03:30","level":"Information","messageTemplate":"{HostingRequestFinishedLog:l}","message":"Request finished HTTP/2 GET https://localhost:7211/Event/FireEvent - - - 200 0 - 18.6923ms","fields":{"ElapsedMilliseconds":18.6923,"StatusCode":200,"ContentType":null,"ContentLength":0,"Protocol":"HTTP/2","Method":"GET","Scheme":"https","Host":"localhost:7211","PathBase":"","Path":"/Event/FireEvent","QueryString":"","HostingRequestFinishedLog":"Request finished HTTP/2 GET https://localhost:7211/Event/FireEvent - - - 200 0 - 18.6923ms","EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HMQL1J5MT4T7:0000000D","RequestPath":"/Event/FireEvent","ConnectionId":"0HMQL1J5MT4T7"},"renderings":{"HostingRequestFinishedLog":[{"Format":"l","Rendering":"Request finished HTTP/2 GET https://localhost:7211/Event/FireEvent - - - 200 0 - 18.6923ms"}]}}
{"@timestamp":"2023-05-15T09:53:29.3449388+03:30","level":"Information","messageTemplate":"{HostingRequestStartingLog:l}","message":"Request starting HTTP/2 GET https://localhost:7211/Event/FireEvent - -","fields":{"Protocol":"HTTP/2","Method":"GET","ContentType":null,"ContentLength":null,"Scheme":"https","Host":"localhost:7211","PathBase":"","Path":"/Event/FireEvent","QueryString":"","HostingRequestStartingLog":"Request starting HTTP/2 GET https://localhost:7211/Event/FireEvent - -","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HMQL1J5MT4T7:0000000F","RequestPath":"/Event/FireEvent","ConnectionId":"0HMQL1J5MT4T7"},"renderings":{"HostingRequestStartingLog":[{"Format":"l","Rendering":"Request starting HTTP/2 GET https://localhost:7211/Event/FireEvent - -"}]}}
{"@timestamp":"2023-05-15T09:53:29.3454845+03:30","level":"Information","messageTemplate":"Executing endpoint '{EndpointName}'","message":"Executing endpoint '\"RabbitMqSample.Publisher.Controllers.EventController.FireEvent (RabbitMqSample.Publisher)\"'","fields":{"EndpointName":"RabbitMqSample.Publisher.Controllers.EventController.FireEvent (RabbitMqSample.Publisher)","EventId":{"Name":"ExecutingEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HMQL1J5MT4T7:0000000F","RequestPath":"/Event/FireEvent","ConnectionId":"0HMQL1J5MT4T7"}}
{"@timestamp":"2023-05-15T09:53:29.3456235+03:30","level":"Information","messageTemplate":"Route matched with {RouteData}. Executing controller action with signature {MethodInfo} on controller {Controller} ({AssemblyName}).","message":"Route matched with \"{action = \\\"FireEvent\\\", controller = \\\"Event\\\"}\". Executing controller action with signature \"System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] FireEvent()\" on controller \"RabbitMqSample.Publisher.Controllers.EventController\" (\"RabbitMqSample.Publisher\").","fields":{"RouteData":"{action = \"FireEvent\", controller = \"Event\"}","MethodInfo":"System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] FireEvent()","Controller":"RabbitMqSample.Publisher.Controllers.EventController","AssemblyName":"RabbitMqSample.Publisher","EventId":{"Id":102,"Name":"ControllerActionExecuting"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker","ActionId":"49350fce-e933-4b94-9b76-933995a110b0","ActionName":"RabbitMqSample.Publisher.Controllers.EventController.FireEvent (RabbitMqSample.Publisher)","RequestId":"0HMQL1J5MT4T7:0000000F","RequestPath":"/Event/FireEvent","ConnectionId":"0HMQL1J5MT4T7"}}
{"@timestamp":"2023-05-15T09:53:29.3568577+03:30","level":"Information","messageTemplate":"Executing action method {ActionName} - Validation state: {ValidationState}","message":"Executing action method \"RabbitMqSample.Publisher.Controllers.EventController.FireEvent (RabbitMqSample.Publisher)\" - Validation state: Valid","fields":{"ActionName":"RabbitMqSample.Publisher.Controllers.EventController.FireEvent (RabbitMqSample.Publisher)","ValidationState":"Valid","EventId":{"Id":101,"Name":"ActionMethodExecuting"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker","ActionId":"49350fce-e933-4b94-9b76-933995a110b0","RequestId":"0HMQL1J5MT4T7:0000000F","RequestPath":"/Event/FireEvent","ConnectionId":"0HMQL1J5MT4T7"}}
{"@timestamp":"2023-05-15T09:53:29.3602182+03:30","level":"Information","messageTemplate":"Executed DbCommand ({elapsed}ms) [Parameters=[{parameters}], CommandType='{commandType}', CommandTimeout='{commandTimeout}']{newLine}{commandText}","message":"Executed DbCommand (\"2\"ms) [Parameters=[\"@p0='?' (DbType = DateTime2), @p1='?' (Size = 4000), @p2='?' (Size = 4000), @p3='?' (DbType = DateTime2)\"], CommandType='Text', CommandTimeout='30']\"\r\n\"\"SET IMPLICIT_TRANSACTIONS OFF;\r\nSET NOCOUNT ON;\r\nINSERT INTO [OutboxMessages] ([EventDate], [EventPayload], [EventType], [ExpireDate])\r\nOUTPUT INSERTED.[Id]\r\nVALUES (@p0, @p1, @p2, @p3);\"","fields":{"elapsed":"2","parameters":"@p0='?' (DbType = DateTime2), @p1='?' (Size = 4000), @p2='?' (Size = 4000), @p3='?' (DbType = DateTime2)","commandType":"Text","commandTimeout":30,"newLine":"\r\n","commandText":"SET IMPLICIT_TRANSACTIONS OFF;\r\nSET NOCOUNT ON;\r\nINSERT INTO [OutboxMessages] ([EventDate], [EventPayload], [EventType], [ExpireDate])\r\nOUTPUT INSERTED.[Id]\r\nVALUES (@p0, @p1, @p2, @p3);","EventId":{"Id":20101,"Name":"Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted"},"SourceContext":"Microsoft.EntityFrameworkCore.Database.Command","ActionId":"49350fce-e933-4b94-9b76-933995a110b0","ActionName":"RabbitMqSample.Publisher.Controllers.EventController.FireEvent (RabbitMqSample.Publisher)","RequestId":"0HMQL1J5MT4T7:0000000F","RequestPath":"/Event/FireEvent","ConnectionId":"0HMQL1J5MT4T7"}}
{"@timestamp":"2023-05-15T09:53:29.3606052+03:30","level":"Information","messageTemplate":"Event published successfully","message":"Event published successfully","fields":{"SourceContext":"RabbitMqSample.Publisher.Controllers.EventController","ActionId":"49350fce-e933-4b94-9b76-933995a110b0","ActionName":"RabbitMqSample.Publisher.Controllers.EventController.FireEvent (RabbitMqSample.Publisher)","RequestId":"0HMQL1J5MT4T7:0000000F","RequestPath":"/Event/FireEvent","ConnectionId":"0HMQL1J5MT4T7"}}
{"@timestamp":"2023-05-15T09:53:29.3606774+03:30","level":"Information","messageTemplate":"Executed action method {ActionName}, returned result {ActionResult} in {ElapsedMilliseconds}ms.","message":"Executed action method \"RabbitMqSample.Publisher.Controllers.EventController.FireEvent (RabbitMqSample.Publisher)\", returned result \"Microsoft.AspNetCore.Mvc.OkResult\" in 3.6899ms.","fields":{"ActionName":"RabbitMqSample.Publisher.Controllers.EventController.FireEvent (RabbitMqSample.Publisher)","ActionResult":"Microsoft.AspNetCore.Mvc.OkResult","ElapsedMilliseconds":3.6899,"EventId":{"Id":103,"Name":"ActionMethodExecuted"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker","ActionId":"49350fce-e933-4b94-9b76-933995a110b0","RequestId":"0HMQL1J5MT4T7:0000000F","RequestPath":"/Event/FireEvent","ConnectionId":"0HMQL1J5MT4T7"}}
{"@timestamp":"2023-05-15T09:53:29.3609057+03:30","level":"Information","messageTemplate":"Executing StatusCodeResult, setting HTTP status code {StatusCode}","message":"Executing StatusCodeResult, setting HTTP status code 200","fields":{"StatusCode":200,"EventId":{"Id":1,"Name":"HttpStatusCodeResultExecuting"},"SourceContext":"Microsoft.AspNetCore.Mvc.StatusCodeResult","ActionId":"49350fce-e933-4b94-9b76-933995a110b0","ActionName":"RabbitMqSample.Publisher.Controllers.EventController.FireEvent (RabbitMqSample.Publisher)","RequestId":"0HMQL1J5MT4T7:0000000F","RequestPath":"/Event/FireEvent","ConnectionId":"0HMQL1J5MT4T7"}}
{"@timestamp":"2023-05-15T09:53:29.3609577+03:30","level":"Information","messageTemplate":"Executed action {ActionName} in {ElapsedMilliseconds}ms","message":"Executed action \"RabbitMqSample.Publisher.Controllers.EventController.FireEvent (RabbitMqSample.Publisher)\" in 15.2781ms","fields":{"ActionName":"RabbitMqSample.Publisher.Controllers.EventController.FireEvent (RabbitMqSample.Publisher)","ElapsedMilliseconds":15.2781,"EventId":{"Id":105,"Name":"ActionExecuted"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker","RequestId":"0HMQL1J5MT4T7:0000000F","RequestPath":"/Event/FireEvent","ConnectionId":"0HMQL1J5MT4T7"}}
{"@timestamp":"2023-05-15T09:53:29.3609960+03:30","level":"Information","messageTemplate":"Executed endpoint '{EndpointName}'","message":"Executed endpoint '\"RabbitMqSample.Publisher.Controllers.EventController.FireEvent (RabbitMqSample.Publisher)\"'","fields":{"EndpointName":"RabbitMqSample.Publisher.Controllers.EventController.FireEvent (RabbitMqSample.Publisher)","EventId":{"Id":1,"Name":"ExecutedEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HMQL1J5MT4T7:0000000F","RequestPath":"/Event/FireEvent","ConnectionId":"0HMQL1J5MT4T7"}}
{"@timestamp":"2023-05-15T09:53:29.3611380+03:30","level":"Information","messageTemplate":"{HostingRequestFinishedLog:l}","message":"Request finished HTTP/2 GET https://localhost:7211/Event/FireEvent - - - 200 0 - 16.2607ms","fields":{"ElapsedMilliseconds":16.2607,"StatusCode":200,"ContentType":null,"ContentLength":0,"Protocol":"HTTP/2","Method":"GET","Scheme":"https","Host":"localhost:7211","PathBase":"","Path":"/Event/FireEvent","QueryString":"","HostingRequestFinishedLog":"Request finished HTTP/2 GET https://localhost:7211/Event/FireEvent - - - 200 0 - 16.2607ms","EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HMQL1J5MT4T7:0000000F","RequestPath":"/Event/FireEvent","ConnectionId":"0HMQL1J5MT4T7"},"renderings":{"HostingRequestFinishedLog":[{"Format":"l","Rendering":"Request finished HTTP/2 GET https://localhost:7211/Event/FireEvent - - - 200 0 - 16.2607ms"}]}}
{"@timestamp":"2023-05-15T09:53:29.4948396+03:30","level":"Information","messageTemplate":"{HostingRequestStartingLog:l}","message":"Request starting HTTP/2 GET https://localhost:7211/Event/FireEvent - -","fields":{"Protocol":"HTTP/2","Method":"GET","ContentType":null,"ContentLength":null,"Scheme":"https","Host":"localhost:7211","PathBase":"","Path":"/Event/FireEvent","QueryString":"","HostingRequestStartingLog":"Request starting HTTP/2 GET https://localhost:7211/Event/FireEvent - -","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HMQL1J5MT4T7:00000011","RequestPath":"/Event/FireEvent","ConnectionId":"0HMQL1J5MT4T7"},"renderings":{"HostingRequestStartingLog":[{"Format":"l","Rendering":"Request starting HTTP/2 GET https://localhost:7211/Event/FireEvent - -"}]}}
{"@timestamp":"2023-05-15T09:53:29.4952063+03:30","level":"Information","messageTemplate":"Executing endpoint '{EndpointName}'","message":"Executing endpoint '\"RabbitMqSample.Publisher.Controllers.EventController.FireEvent (RabbitMqSample.Publisher)\"'","fields":{"EndpointName":"RabbitMqSample.Publisher.Controllers.EventController.FireEvent (RabbitMqSample.Publisher)","EventId":{"Name":"ExecutingEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HMQL1J5MT4T7:00000011","RequestPath":"/Event/FireEvent","ConnectionId":"0HMQL1J5MT4T7"}}
{"@timestamp":"2023-05-15T09:53:29.4953038+03:30","level":"Information","messageTemplate":"Route matched with {RouteData}. Executing controller action with signature {MethodInfo} on controller {Controller} ({AssemblyName}).","message":"Route matched with \"{action = \\\"FireEvent\\\", controller = \\\"Event\\\"}\". Executing controller action with signature \"System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] FireEvent()\" on controller \"RabbitMqSample.Publisher.Controllers.EventController\" (\"RabbitMqSample.Publisher\").","fields":{"RouteData":"{action = \"FireEvent\", controller = \"Event\"}","MethodInfo":"System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] FireEvent()","Controller":"RabbitMqSample.Publisher.Controllers.EventController","AssemblyName":"RabbitMqSample.Publisher","EventId":{"Id":102,"Name":"ControllerActionExecuting"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker","ActionId":"49350fce-e933-4b94-9b76-933995a110b0","ActionName":"RabbitMqSample.Publisher.Controllers.EventController.FireEvent (RabbitMqSample.Publisher)","RequestId":"0HMQL1J5MT4T7:00000011","RequestPath":"/Event/FireEvent","ConnectionId":"0HMQL1J5MT4T7"}}
{"@timestamp":"2023-05-15T09:53:29.5083557+03:30","level":"Information","messageTemplate":"Executing action method {ActionName} - Validation state: {ValidationState}","message":"Executing action method \"RabbitMqSample.Publisher.Controllers.EventController.FireEvent (RabbitMqSample.Publisher)\" - Validation state: Valid","fields":{"ActionName":"RabbitMqSample.Publisher.Controllers.EventController.FireEvent (RabbitMqSample.Publisher)","ValidationState":"Valid","EventId":{"Id":101,"Name":"ActionMethodExecuting"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker","ActionId":"49350fce-e933-4b94-9b76-933995a110b0","RequestId":"0HMQL1J5MT4T7:00000011","RequestPath":"/Event/FireEvent","ConnectionId":"0HMQL1J5MT4T7"}}
{"@timestamp":"2023-05-15T09:53:29.5108830+03:30","level":"Information","messageTemplate":"Executed DbCommand ({elapsed}ms) [Parameters=[{parameters}], CommandType='{commandType}', CommandTimeout='{commandTimeout}']{newLine}{commandText}","message":"Executed DbCommand (\"1\"ms) [Parameters=[\"@p0='?' (DbType = DateTime2), @p1='?' (Size = 4000), @p2='?' (Size = 4000), @p3='?' (DbType = DateTime2)\"], CommandType='Text', CommandTimeout='30']\"\r\n\"\"SET IMPLICIT_TRANSACTIONS OFF;\r\nSET NOCOUNT ON;\r\nINSERT INTO [OutboxMessages] ([EventDate], [EventPayload], [EventType], [ExpireDate])\r\nOUTPUT INSERTED.[Id]\r\nVALUES (@p0, @p1, @p2, @p3);\"","fields":{"elapsed":"1","parameters":"@p0='?' (DbType = DateTime2), @p1='?' (Size = 4000), @p2='?' (Size = 4000), @p3='?' (DbType = DateTime2)","commandType":"Text","commandTimeout":30,"newLine":"\r\n","commandText":"SET IMPLICIT_TRANSACTIONS OFF;\r\nSET NOCOUNT ON;\r\nINSERT INTO [OutboxMessages] ([EventDate], [EventPayload], [EventType], [ExpireDate])\r\nOUTPUT INSERTED.[Id]\r\nVALUES (@p0, @p1, @p2, @p3);","EventId":{"Id":20101,"Name":"Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted"},"SourceContext":"Microsoft.EntityFrameworkCore.Database.Command","ActionId":"49350fce-e933-4b94-9b76-933995a110b0","ActionName":"RabbitMqSample.Publisher.Controllers.EventController.FireEvent (RabbitMqSample.Publisher)","RequestId":"0HMQL1J5MT4T7:00000011","RequestPath":"/Event/FireEvent","ConnectionId":"0HMQL1J5MT4T7"}}
{"@timestamp":"2023-05-15T09:53:29.5112594+03:30","level":"Information","messageTemplate":"Event published successfully","message":"Event published successfully","fields":{"SourceContext":"RabbitMqSample.Publisher.Controllers.EventController","ActionId":"49350fce-e933-4b94-9b76-933995a110b0","ActionName":"RabbitMqSample.Publisher.Controllers.EventController.FireEvent (RabbitMqSample.Publisher)","RequestId":"0HMQL1J5MT4T7:00000011","RequestPath":"/Event/FireEvent","ConnectionId":"0HMQL1J5MT4T7"}}
{"@timestamp":"2023-05-15T09:53:29.5113160+03:30","level":"Information","messageTemplate":"Executed action method {ActionName}, returned result {ActionResult} in {ElapsedMilliseconds}ms.","message":"Executed action method \"RabbitMqSample.Publisher.Controllers.EventController.FireEvent (RabbitMqSample.Publisher)\", returned result \"Microsoft.AspNetCore.Mvc.OkResult\" in 2.8597ms.","fields":{"ActionName":"RabbitMqSample.Publisher.Controllers.EventController.FireEvent (RabbitMqSample.Publisher)","ActionResult":"Microsoft.AspNetCore.Mvc.OkResult","ElapsedMilliseconds":2.8597,"EventId":{"Id":103,"Name":"ActionMethodExecuted"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker","ActionId":"49350fce-e933-4b94-9b76-933995a110b0","RequestId":"0HMQL1J5MT4T7:00000011","RequestPath":"/Event/FireEvent","ConnectionId":"0HMQL1J5MT4T7"}}
{"@timestamp":"2023-05-15T09:53:29.5113824+03:30","level":"Information","messageTemplate":"Executing StatusCodeResult, setting HTTP status code {StatusCode}","message":"Executing StatusCodeResult, setting HTTP status code 200","fields":{"StatusCode":200,"EventId":{"Id":1,"Name":"HttpStatusCodeResultExecuting"},"SourceContext":"Microsoft.AspNetCore.Mvc.StatusCodeResult","ActionId":"49350fce-e933-4b94-9b76-933995a110b0","ActionName":"RabbitMqSample.Publisher.Controllers.EventController.FireEvent (RabbitMqSample.Publisher)","RequestId":"0HMQL1J5MT4T7:00000011","RequestPath":"/Event/FireEvent","ConnectionId":"0HMQL1J5MT4T7"}}
{"@timestamp":"2023-05-15T09:53:29.5114180+03:30","level":"Information","messageTemplate":"Executed action {ActionName} in {ElapsedMilliseconds}ms","message":"Executed action \"RabbitMqSample.Publisher.Controllers.EventController.FireEvent (RabbitMqSample.Publisher)\" in 16.0381ms","fields":{"ActionName":"RabbitMqSample.Publisher.Controllers.EventController.FireEvent (RabbitMqSample.Publisher)","ElapsedMilliseconds":16.0381,"EventId":{"Id":105,"Name":"ActionExecuted"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker","RequestId":"0HMQL1J5MT4T7:00000011","RequestPath":"/Event/FireEvent","ConnectionId":"0HMQL1J5MT4T7"}}
{"@timestamp":"2023-05-15T09:53:29.5115885+03:30","level":"Information","messageTemplate":"Executed endpoint '{EndpointName}'","message":"Executed endpoint '\"RabbitMqSample.Publisher.Controllers.EventController.FireEvent (RabbitMqSample.Publisher)\"'","fields":{"EndpointName":"RabbitMqSample.Publisher.Controllers.EventController.FireEvent (RabbitMqSample.Publisher)","EventId":{"Id":1,"Name":"ExecutedEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HMQL1J5MT4T7:00000011","RequestPath":"/Event/FireEvent","ConnectionId":"0HMQL1J5MT4T7"}}
{"@timestamp":"2023-05-15T09:53:29.5116995+03:30","level":"Information","messageTemplate":"{HostingRequestFinishedLog:l}","message":"Request finished HTTP/2 GET https://localhost:7211/Event/FireEvent - - - 200 0 - 16.8571ms","fields":{"ElapsedMilliseconds":16.8571,"StatusCode":200,"ContentType":null,"ContentLength":0,"Protocol":"HTTP/2","Method":"GET","Scheme":"https","Host":"localhost:7211","PathBase":"","Path":"/Event/FireEvent","QueryString":"","HostingRequestFinishedLog":"Request finished HTTP/2 GET https://localhost:7211/Event/FireEvent - - - 200 0 - 16.8571ms","EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HMQL1J5MT4T7:00000011","RequestPath":"/Event/FireEvent","ConnectionId":"0HMQL1J5MT4T7"},"renderings":{"HostingRequestFinishedLog":[{"Format":"l","Rendering":"Request finished HTTP/2 GET https://localhost:7211/Event/FireEvent - - - 200 0 - 16.8571ms"}]}}
{"@timestamp":"2023-05-15T09:53:29.6546906+03:30","level":"Information","messageTemplate":"{HostingRequestStartingLog:l}","message":"Request starting HTTP/2 GET https://localhost:7211/Event/FireEvent - -","fields":{"Protocol":"HTTP/2","Method":"GET","ContentType":null,"ContentLength":null,"Scheme":"https","Host":"localhost:7211","PathBase":"","Path":"/Event/FireEvent","QueryString":"","HostingRequestStartingLog":"Request starting HTTP/2 GET https://localhost:7211/Event/FireEvent - -","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HMQL1J5MT4T7:00000013","RequestPath":"/Event/FireEvent","ConnectionId":"0HMQL1J5MT4T7"},"renderings":{"HostingRequestStartingLog":[{"Format":"l","Rendering":"Request starting HTTP/2 GET https://localhost:7211/Event/FireEvent - -"}]}}
{"@timestamp":"2023-05-15T09:53:29.6549447+03:30","level":"Information","messageTemplate":"Executing endpoint '{EndpointName}'","message":"Executing endpoint '\"RabbitMqSample.Publisher.Controllers.EventController.FireEvent (RabbitMqSample.Publisher)\"'","fields":{"EndpointName":"RabbitMqSample.Publisher.Controllers.EventController.FireEvent (RabbitMqSample.Publisher)","EventId":{"Name":"ExecutingEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HMQL1J5MT4T7:00000013","RequestPath":"/Event/FireEvent","ConnectionId":"0HMQL1J5MT4T7"}}
{"@timestamp":"2023-05-15T09:53:29.6550325+03:30","level":"Information","messageTemplate":"Route matched with {RouteData}. Executing controller action with signature {MethodInfo} on controller {Controller} ({AssemblyName}).","message":"Route matched with \"{action = \\\"FireEvent\\\", controller = \\\"Event\\\"}\". Executing controller action with signature \"System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] FireEvent()\" on controller \"RabbitMqSample.Publisher.Controllers.EventController\" (\"RabbitMqSample.Publisher\").","fields":{"RouteData":"{action = \"FireEvent\", controller = \"Event\"}","MethodInfo":"System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] FireEvent()","Controller":"RabbitMqSample.Publisher.Controllers.EventController","AssemblyName":"RabbitMqSample.Publisher","EventId":{"Id":102,"Name":"ControllerActionExecuting"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker","ActionId":"49350fce-e933-4b94-9b76-933995a110b0","ActionName":"RabbitMqSample.Publisher.Controllers.EventController.FireEvent (RabbitMqSample.Publisher)","RequestId":"0HMQL1J5MT4T7:00000013","RequestPath":"/Event/FireEvent","ConnectionId":"0HMQL1J5MT4T7"}}
{"@timestamp":"2023-05-15T09:53:29.6667869+03:30","level":"Information","messageTemplate":"Executing action method {ActionName} - Validation state: {ValidationState}","message":"Executing action method \"RabbitMqSample.Publisher.Controllers.EventController.FireEvent (RabbitMqSample.Publisher)\" - Validation state: Valid","fields":{"ActionName":"RabbitMqSample.Publisher.Controllers.EventController.FireEvent (RabbitMqSample.Publisher)","ValidationState":"Valid","EventId":{"Id":101,"Name":"ActionMethodExecuting"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker","ActionId":"49350fce-e933-4b94-9b76-933995a110b0","RequestId":"0HMQL1J5MT4T7:00000013","RequestPath":"/Event/FireEvent","ConnectionId":"0HMQL1J5MT4T7"}}
{"@timestamp":"2023-05-15T09:53:29.6713796+03:30","level":"Information","messageTemplate":"Executed DbCommand ({elapsed}ms) [Parameters=[{parameters}], CommandType='{commandType}', CommandTimeout='{commandTimeout}']{newLine}{commandText}","message":"Executed DbCommand (\"3\"ms) [Parameters=[\"@p0='?' (DbType = DateTime2), @p1='?' (Size = 4000), @p2='?' (Size = 4000), @p3='?' (DbType = DateTime2)\"], CommandType='Text', CommandTimeout='30']\"\r\n\"\"SET IMPLICIT_TRANSACTIONS OFF;\r\nSET NOCOUNT ON;\r\nINSERT INTO [OutboxMessages] ([EventDate], [EventPayload], [EventType], [ExpireDate])\r\nOUTPUT INSERTED.[Id]\r\nVALUES (@p0, @p1, @p2, @p3);\"","fields":{"elapsed":"3","parameters":"@p0='?' (DbType = DateTime2), @p1='?' (Size = 4000), @p2='?' (Size = 4000), @p3='?' (DbType = DateTime2)","commandType":"Text","commandTimeout":30,"newLine":"\r\n","commandText":"SET IMPLICIT_TRANSACTIONS OFF;\r\nSET NOCOUNT ON;\r\nINSERT INTO [OutboxMessages] ([EventDate], [EventPayload], [EventType], [ExpireDate])\r\nOUTPUT INSERTED.[Id]\r\nVALUES (@p0, @p1, @p2, @p3);","EventId":{"Id":20101,"Name":"Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted"},"SourceContext":"Microsoft.EntityFrameworkCore.Database.Command","ActionId":"49350fce-e933-4b94-9b76-933995a110b0","ActionName":"RabbitMqSample.Publisher.Controllers.EventController.FireEvent (RabbitMqSample.Publisher)","RequestId":"0HMQL1J5MT4T7:00000013","RequestPath":"/Event/FireEvent","ConnectionId":"0HMQL1J5MT4T7"}}
{"@timestamp":"2023-05-15T09:53:29.6716572+03:30","level":"Information","messageTemplate":"Event published successfully","message":"Event published successfully","fields":{"SourceContext":"RabbitMqSample.Publisher.Controllers.EventController","ActionId":"49350fce-e933-4b94-9b76-933995a110b0","ActionName":"RabbitMqSample.Publisher.Controllers.EventController.FireEvent (RabbitMqSample.Publisher)","RequestId":"0HMQL1J5MT4T7:00000013","RequestPath":"/Event/FireEvent","ConnectionId":"0HMQL1J5MT4T7"}}
{"@timestamp":"2023-05-15T09:53:29.6717044+03:30","level":"Information","messageTemplate":"Executed action method {ActionName}, returned result {ActionResult} in {ElapsedMilliseconds}ms.","message":"Executed action method \"RabbitMqSample.Publisher.Controllers.EventController.FireEvent (RabbitMqSample.Publisher)\", returned result \"Microsoft.AspNetCore.Mvc.OkResult\" in 4.7497ms.","fields":{"ActionName":"RabbitMqSample.Publisher.Controllers.EventController.FireEvent (RabbitMqSample.Publisher)","ActionResult":"Microsoft.AspNetCore.Mvc.OkResult","ElapsedMilliseconds":4.7497,"EventId":{"Id":103,"Name":"ActionMethodExecuted"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker","ActionId":"49350fce-e933-4b94-9b76-933995a110b0","RequestId":"0HMQL1J5MT4T7:00000013","RequestPath":"/Event/FireEvent","ConnectionId":"0HMQL1J5MT4T7"}}
{"@timestamp":"2023-05-15T09:53:29.6717864+03:30","level":"Information","messageTemplate":"Executing StatusCodeResult, setting HTTP status code {StatusCode}","message":"Executing StatusCodeResult, setting HTTP status code 200","fields":{"StatusCode":200,"EventId":{"Id":1,"Name":"HttpStatusCodeResultExecuting"},"SourceContext":"Microsoft.AspNetCore.Mvc.StatusCodeResult","ActionId":"49350fce-e933-4b94-9b76-933995a110b0","ActionName":"RabbitMqSample.Publisher.Controllers.EventController.FireEvent (RabbitMqSample.Publisher)","RequestId":"0HMQL1J5MT4T7:00000013","RequestPath":"/Event/FireEvent","ConnectionId":"0HMQL1J5MT4T7"}}
{"@timestamp":"2023-05-15T09:53:29.6718251+03:30","level":"Information","messageTemplate":"Executed action {ActionName} in {ElapsedMilliseconds}ms","message":"Executed action \"RabbitMqSample.Publisher.Controllers.EventController.FireEvent (RabbitMqSample.Publisher)\" in 16.7597ms","fields":{"ActionName":"RabbitMqSample.Publisher.Controllers.EventController.FireEvent (RabbitMqSample.Publisher)","ElapsedMilliseconds":16.7597,"EventId":{"Id":105,"Name":"ActionExecuted"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker","RequestId":"0HMQL1J5MT4T7:00000013","RequestPath":"/Event/FireEvent","ConnectionId":"0HMQL1J5MT4T7"}}
{"@timestamp":"2023-05-15T09:53:29.6718532+03:30","level":"Information","messageTemplate":"Executed endpoint '{EndpointName}'","message":"Executed endpoint '\"RabbitMqSample.Publisher.Controllers.EventController.FireEvent (RabbitMqSample.Publisher)\"'","fields":{"EndpointName":"RabbitMqSample.Publisher.Controllers.EventController.FireEvent (RabbitMqSample.Publisher)","EventId":{"Id":1,"Name":"ExecutedEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HMQL1J5MT4T7:00000013","RequestPath":"/Event/FireEvent","ConnectionId":"0HMQL1J5MT4T7"}}
{"@timestamp":"2023-05-15T09:53:29.6719930+03:30","level":"Information","messageTemplate":"{HostingRequestFinishedLog:l}","message":"Request finished HTTP/2 GET https://localhost:7211/Event/FireEvent - - - 200 0 - 17.2869ms","fields":{"ElapsedMilliseconds":17.2869,"StatusCode":200,"ContentType":null,"ContentLength":0,"Protocol":"HTTP/2","Method":"GET","Scheme":"https","Host":"localhost:7211","PathBase":"","Path":"/Event/FireEvent","QueryString":"","HostingRequestFinishedLog":"Request finished HTTP/2 GET https://localhost:7211/Event/FireEvent - - - 200 0 - 17.2869ms","EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HMQL1J5MT4T7:00000013","RequestPath":"/Event/FireEvent","ConnectionId":"0HMQL1J5MT4T7"},"renderings":{"HostingRequestFinishedLog":[{"Format":"l","Rendering":"Request finished HTTP/2 GET https://localhost:7211/Event/FireEvent - - - 200 0 - 17.2869ms"}]}}
{"@timestamp":"2023-05-15T09:53:29.8042791+03:30","level":"Information","messageTemplate":"{HostingRequestStartingLog:l}","message":"Request starting HTTP/2 GET https://localhost:7211/Event/FireEvent - -","fields":{"Protocol":"HTTP/2","Method":"GET","ContentType":null,"ContentLength":null,"Scheme":"https","Host":"localhost:7211","PathBase":"","Path":"/Event/FireEvent","QueryString":"","HostingRequestStartingLog":"Request starting HTTP/2 GET https://localhost:7211/Event/FireEvent - -","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HMQL1J5MT4T7:00000015","RequestPath":"/Event/FireEvent","ConnectionId":"0HMQL1J5MT4T7"},"renderings":{"HostingRequestStartingLog":[{"Format":"l","Rendering":"Request starting HTTP/2 GET https://localhost:7211/Event/FireEvent - -"}]}}
{"@timestamp":"2023-05-15T09:53:29.8046954+03:30","level":"Information","messageTemplate":"Executing endpoint '{EndpointName}'","message":"Executing endpoint '\"RabbitMqSample.Publisher.Controllers.EventController.FireEvent (RabbitMqSample.Publisher)\"'","fields":{"EndpointName":"RabbitMqSample.Publisher.Controllers.EventController.FireEvent (RabbitMqSample.Publisher)","EventId":{"Name":"ExecutingEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HMQL1J5MT4T7:00000015","RequestPath":"/Event/FireEvent","ConnectionId":"0HMQL1J5MT4T7"}}
{"@timestamp":"2023-05-15T09:53:29.8048035+03:30","level":"Information","messageTemplate":"Route matched with {RouteData}. Executing controller action with signature {MethodInfo} on controller {Controller} ({AssemblyName}).","message":"Route matched with \"{action = \\\"FireEvent\\\", controller = \\\"Event\\\"}\". Executing controller action with signature \"System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] FireEvent()\" on controller \"RabbitMqSample.Publisher.Controllers.EventController\" (\"RabbitMqSample.Publisher\").","fields":{"RouteData":"{action = \"FireEvent\", controller = \"Event\"}","MethodInfo":"System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] FireEvent()","Controller":"RabbitMqSample.Publisher.Controllers.EventController","AssemblyName":"RabbitMqSample.Publisher","EventId":{"Id":102,"Name":"ControllerActionExecuting"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker","ActionId":"49350fce-e933-4b94-9b76-933995a110b0","ActionName":"RabbitMqSample.Publisher.Controllers.EventController.FireEvent (RabbitMqSample.Publisher)","RequestId":"0HMQL1J5MT4T7:00000015","RequestPath":"/Event/FireEvent","ConnectionId":"0HMQL1J5MT4T7"}}
{"@timestamp":"2023-05-15T09:53:29.8168683+03:30","level":"Information","messageTemplate":"Executing action method {ActionName} - Validation state: {ValidationState}","message":"Executing action method \"RabbitMqSample.Publisher.Controllers.EventController.FireEvent (RabbitMqSample.Publisher)\" - Validation state: Valid","fields":{"ActionName":"RabbitMqSample.Publisher.Controllers.EventController.FireEvent (RabbitMqSample.Publisher)","ValidationState":"Valid","EventId":{"Id":101,"Name":"ActionMethodExecuting"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker","ActionId":"49350fce-e933-4b94-9b76-933995a110b0","RequestId":"0HMQL1J5MT4T7:00000015","RequestPath":"/Event/FireEvent","ConnectionId":"0HMQL1J5MT4T7"}}
{"@timestamp":"2023-05-15T09:53:29.8201366+03:30","level":"Information","messageTemplate":"Executed DbCommand ({elapsed}ms) [Parameters=[{parameters}], CommandType='{commandType}', CommandTimeout='{commandTimeout}']{newLine}{commandText}","message":"Executed DbCommand (\"2\"ms) [Parameters=[\"@p0='?' (DbType = DateTime2), @p1='?' (Size = 4000), @p2='?' (Size = 4000), @p3='?' (DbType = DateTime2)\"], CommandType='Text', CommandTimeout='30']\"\r\n\"\"SET IMPLICIT_TRANSACTIONS OFF;\r\nSET NOCOUNT ON;\r\nINSERT INTO [OutboxMessages] ([EventDate], [EventPayload], [EventType], [ExpireDate])\r\nOUTPUT INSERTED.[Id]\r\nVALUES (@p0, @p1, @p2, @p3);\"","fields":{"elapsed":"2","parameters":"@p0='?' (DbType = DateTime2), @p1='?' (Size = 4000), @p2='?' (Size = 4000), @p3='?' (DbType = DateTime2)","commandType":"Text","commandTimeout":30,"newLine":"\r\n","commandText":"SET IMPLICIT_TRANSACTIONS OFF;\r\nSET NOCOUNT ON;\r\nINSERT INTO [OutboxMessages] ([EventDate], [EventPayload], [EventType], [ExpireDate])\r\nOUTPUT INSERTED.[Id]\r\nVALUES (@p0, @p1, @p2, @p3);","EventId":{"Id":20101,"Name":"Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted"},"SourceContext":"Microsoft.EntityFrameworkCore.Database.Command","ActionId":"49350fce-e933-4b94-9b76-933995a110b0","ActionName":"RabbitMqSample.Publisher.Controllers.EventController.FireEvent (RabbitMqSample.Publisher)","RequestId":"0HMQL1J5MT4T7:00000015","RequestPath":"/Event/FireEvent","ConnectionId":"0HMQL1J5MT4T7"}}
{"@timestamp":"2023-05-15T09:53:29.8204345+03:30","level":"Information","messageTemplate":"Event published successfully","message":"Event published successfully","fields":{"SourceContext":"RabbitMqSample.Publisher.Controllers.EventController","ActionId":"49350fce-e933-4b94-9b76-933995a110b0","ActionName":"RabbitMqSample.Publisher.Controllers.EventController.FireEvent (RabbitMqSample.Publisher)","RequestId":"0HMQL1J5MT4T7:00000015","RequestPath":"/Event/FireEvent","ConnectionId":"0HMQL1J5MT4T7"}}
{"@timestamp":"2023-05-15T09:53:29.8204839+03:30","level":"Information","messageTemplate":"Executed action method {ActionName}, returned result {ActionResult} in {ElapsedMilliseconds}ms.","message":"Executed action method \"RabbitMqSample.Publisher.Controllers.EventController.FireEvent (RabbitMqSample.Publisher)\", returned result \"Microsoft.AspNetCore.Mvc.OkResult\" in 3.5194ms.","fields":{"ActionName":"RabbitMqSample.Publisher.Controllers.EventController.FireEvent (RabbitMqSample.Publisher)","ActionResult":"Microsoft.AspNetCore.Mvc.OkResult","ElapsedMilliseconds":3.5194,"EventId":{"Id":103,"Name":"ActionMethodExecuted"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker","ActionId":"49350fce-e933-4b94-9b76-933995a110b0","RequestId":"0HMQL1J5MT4T7:00000015","RequestPath":"/Event/FireEvent","ConnectionId":"0HMQL1J5MT4T7"}}
{"@timestamp":"2023-05-15T09:53:29.8205508+03:30","level":"Information","messageTemplate":"Executing StatusCodeResult, setting HTTP status code {StatusCode}","message":"Executing StatusCodeResult, setting HTTP status code 200","fields":{"StatusCode":200,"EventId":{"Id":1,"Name":"HttpStatusCodeResultExecuting"},"SourceContext":"Microsoft.AspNetCore.Mvc.StatusCodeResult","ActionId":"49350fce-e933-4b94-9b76-933995a110b0","ActionName":"RabbitMqSample.Publisher.Controllers.EventController.FireEvent (RabbitMqSample.Publisher)","RequestId":"0HMQL1J5MT4T7:00000015","RequestPath":"/Event/FireEvent","ConnectionId":"0HMQL1J5MT4T7"}}
{"@timestamp":"2023-05-15T09:53:29.8205861+03:30","level":"Information","messageTemplate":"Executed action {ActionName} in {ElapsedMilliseconds}ms","message":"Executed action \"RabbitMqSample.Publisher.Controllers.EventController.FireEvent (RabbitMqSample.Publisher)\" in 15.7482ms","fields":{"ActionName":"RabbitMqSample.Publisher.Controllers.EventController.FireEvent (RabbitMqSample.Publisher)","ElapsedMilliseconds":15.7482,"EventId":{"Id":105,"Name":"ActionExecuted"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker","RequestId":"0HMQL1J5MT4T7:00000015","RequestPath":"/Event/FireEvent","ConnectionId":"0HMQL1J5MT4T7"}}
{"@timestamp":"2023-05-15T09:53:29.8206268+03:30","level":"Information","messageTemplate":"Executed endpoint '{EndpointName}'","message":"Executed endpoint '\"RabbitMqSample.Publisher.Controllers.EventController.FireEvent (RabbitMqSample.Publisher)\"'","fields":{"EndpointName":"RabbitMqSample.Publisher.Controllers.EventController.FireEvent (RabbitMqSample.Publisher)","EventId":{"Id":1,"Name":"ExecutedEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HMQL1J5MT4T7:00000015","RequestPath":"/Event/FireEvent","ConnectionId":"0HMQL1J5MT4T7"}}
{"@timestamp":"2023-05-15T09:53:29.8207309+03:30","level":"Information","messageTemplate":"{HostingRequestFinishedLog:l}","message":"Request finished HTTP/2 GET https://localhost:7211/Event/FireEvent - - - 200 0 - 16.4674ms","fields":{"ElapsedMilliseconds":16.4674,"StatusCode":200,"ContentType":null,"ContentLength":0,"Protocol":"HTTP/2","Method":"GET","Scheme":"https","Host":"localhost:7211","PathBase":"","Path":"/Event/FireEvent","QueryString":"","HostingRequestFinishedLog":"Request finished HTTP/2 GET https://localhost:7211/Event/FireEvent - - - 200 0 - 16.4674ms","EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HMQL1J5MT4T7:00000015","RequestPath":"/Event/FireEvent","ConnectionId":"0HMQL1J5MT4T7"},"renderings":{"HostingRequestFinishedLog":[{"Format":"l","Rendering":"Request finished HTTP/2 GET https://localhost:7211/Event/FireEvent - - - 200 0 - 16.4674ms"}]}}
{"@timestamp":"2023-05-15T09:53:34.1732172+03:30","level":"Information","messageTemplate":"Executed DbCommand ({elapsed}ms) [Parameters=[{parameters}], CommandType='{commandType}', CommandTimeout='{commandTimeout}']{newLine}{commandText}","message":"Executed DbCommand (\"0\"ms) [Parameters=[\"\"], CommandType='Text', CommandTimeout='30']\"\r\n\"\"SELECT [o].[Id], [o].[EventDate], [o].[EventPayload], [o].[EventType], [o].[ExpireDate]\r\nFROM [OutboxMessages] AS [o]\r\nWHERE ([o].[ExpireDate] IS NULL) OR [o].[ExpireDate] >= GETDATE()\"","fields":{"elapsed":"0","parameters":"","commandType":"Text","commandTimeout":30,"newLine":"\r\n","commandText":"SELECT [o].[Id], [o].[EventDate], [o].[EventPayload], [o].[EventType], [o].[ExpireDate]\r\nFROM [OutboxMessages] AS [o]\r\nWHERE ([o].[ExpireDate] IS NULL) OR [o].[ExpireDate] >= GETDATE()","EventId":{"Id":20101,"Name":"Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted"},"SourceContext":"Microsoft.EntityFrameworkCore.Database.Command"}}
{"@timestamp":"2023-05-15T09:53:34.2113080+03:30","level":"Information","messageTemplate":"Executed DbCommand ({elapsed}ms) [Parameters=[{parameters}], CommandType='{commandType}', CommandTimeout='{commandTimeout}']{newLine}{commandText}","message":"Executed DbCommand (\"1\"ms) [Parameters=[\"@p0='?' (DbType = Int32)\"], CommandType='Text', CommandTimeout='30']\"\r\n\"\"SET IMPLICIT_TRANSACTIONS OFF;\r\nSET NOCOUNT ON;\r\nDELETE FROM [OutboxMessages]\r\nOUTPUT 1\r\nWHERE [Id] = @p0;\"","fields":{"elapsed":"1","parameters":"@p0='?' (DbType = Int32)","commandType":"Text","commandTimeout":30,"newLine":"\r\n","commandText":"SET IMPLICIT_TRANSACTIONS OFF;\r\nSET NOCOUNT ON;\r\nDELETE FROM [OutboxMessages]\r\nOUTPUT 1\r\nWHERE [Id] = @p0;","EventId":{"Id":20101,"Name":"Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted"},"SourceContext":"Microsoft.EntityFrameworkCore.Database.Command"}}
{"@timestamp":"2023-05-15T09:53:34.2391723+03:30","level":"Information","messageTemplate":"Executed DbCommand ({elapsed}ms) [Parameters=[{parameters}], CommandType='{commandType}', CommandTimeout='{commandTimeout}']{newLine}{commandText}","message":"Executed DbCommand (\"1\"ms) [Parameters=[\"@p0='?' (DbType = Int32)\"], CommandType='Text', CommandTimeout='30']\"\r\n\"\"SET IMPLICIT_TRANSACTIONS OFF;\r\nSET NOCOUNT ON;\r\nDELETE FROM [OutboxMessages]\r\nOUTPUT 1\r\nWHERE [Id] = @p0;\"","fields":{"elapsed":"1","parameters":"@p0='?' (DbType = Int32)","commandType":"Text","commandTimeout":30,"newLine":"\r\n","commandText":"SET IMPLICIT_TRANSACTIONS OFF;\r\nSET NOCOUNT ON;\r\nDELETE FROM [OutboxMessages]\r\nOUTPUT 1\r\nWHERE [Id] = @p0;","EventId":{"Id":20101,"Name":"Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted"},"SourceContext":"Microsoft.EntityFrameworkCore.Database.Command"}}
{"@timestamp":"2023-05-15T09:53:34.2688087+03:30","level":"Information","messageTemplate":"Executed DbCommand ({elapsed}ms) [Parameters=[{parameters}], CommandType='{commandType}', CommandTimeout='{commandTimeout}']{newLine}{commandText}","message":"Executed DbCommand (\"1\"ms) [Parameters=[\"@p0='?' (DbType = Int32)\"], CommandType='Text', CommandTimeout='30']\"\r\n\"\"SET IMPLICIT_TRANSACTIONS OFF;\r\nSET NOCOUNT ON;\r\nDELETE FROM [OutboxMessages]\r\nOUTPUT 1\r\nWHERE [Id] = @p0;\"","fields":{"elapsed":"1","parameters":"@p0='?' (DbType = Int32)","commandType":"Text","commandTimeout":30,"newLine":"\r\n","commandText":"SET IMPLICIT_TRANSACTIONS OFF;\r\nSET NOCOUNT ON;\r\nDELETE FROM [OutboxMessages]\r\nOUTPUT 1\r\nWHERE [Id] = @p0;","EventId":{"Id":20101,"Name":"Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted"},"SourceContext":"Microsoft.EntityFrameworkCore.Database.Command"}}
{"@timestamp":"2023-05-15T09:53:34.2885887+03:30","level":"Information","messageTemplate":"Executed DbCommand ({elapsed}ms) [Parameters=[{parameters}], CommandType='{commandType}', CommandTimeout='{commandTimeout}']{newLine}{commandText}","message":"Executed DbCommand (\"1\"ms) [Parameters=[\"@p0='?' (DbType = Int32)\"], CommandType='Text', CommandTimeout='30']\"\r\n\"\"SET IMPLICIT_TRANSACTIONS OFF;\r\nSET NOCOUNT ON;\r\nDELETE FROM [OutboxMessages]\r\nOUTPUT 1\r\nWHERE [Id] = @p0;\"","fields":{"elapsed":"1","parameters":"@p0='?' (DbType = Int32)","commandType":"Text","commandTimeout":30,"newLine":"\r\n","commandText":"SET IMPLICIT_TRANSACTIONS OFF;\r\nSET NOCOUNT ON;\r\nDELETE FROM [OutboxMessages]\r\nOUTPUT 1\r\nWHERE [Id] = @p0;","EventId":{"Id":20101,"Name":"Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted"},"SourceContext":"Microsoft.EntityFrameworkCore.Database.Command"}}
{"@timestamp":"2023-05-15T09:53:34.3148682+03:30","level":"Information","messageTemplate":"Executed DbCommand ({elapsed}ms) [Parameters=[{parameters}], CommandType='{commandType}', CommandTimeout='{commandTimeout}']{newLine}{commandText}","message":"Executed DbCommand (\"1\"ms) [Parameters=[\"@p0='?' (DbType = Int32)\"], CommandType='Text', CommandTimeout='30']\"\r\n\"\"SET IMPLICIT_TRANSACTIONS OFF;\r\nSET NOCOUNT ON;\r\nDELETE FROM [OutboxMessages]\r\nOUTPUT 1\r\nWHERE [Id] = @p0;\"","fields":{"elapsed":"1","parameters":"@p0='?' (DbType = Int32)","commandType":"Text","commandTimeout":30,"newLine":"\r\n","commandText":"SET IMPLICIT_TRANSACTIONS OFF;\r\nSET NOCOUNT ON;\r\nDELETE FROM [OutboxMessages]\r\nOUTPUT 1\r\nWHERE [Id] = @p0;","EventId":{"Id":20101,"Name":"Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted"},"SourceContext":"Microsoft.EntityFrameworkCore.Database.Command"}}
{"@timestamp":"2023-05-15T09:53:34.3452495+03:30","level":"Information","messageTemplate":"Executed DbCommand ({elapsed}ms) [Parameters=[{parameters}], CommandType='{commandType}', CommandTimeout='{commandTimeout}']{newLine}{commandText}","message":"Executed DbCommand (\"1\"ms) [Parameters=[\"@p0='?' (DbType = Int32)\"], CommandType='Text', CommandTimeout='30']\"\r\n\"\"SET IMPLICIT_TRANSACTIONS OFF;\r\nSET NOCOUNT ON;\r\nDELETE FROM [OutboxMessages]\r\nOUTPUT 1\r\nWHERE [Id] = @p0;\"","fields":{"elapsed":"1","parameters":"@p0='?' (DbType = Int32)","commandType":"Text","commandTimeout":30,"newLine":"\r\n","commandText":"SET IMPLICIT_TRANSACTIONS OFF;\r\nSET NOCOUNT ON;\r\nDELETE FROM [OutboxMessages]\r\nOUTPUT 1\r\nWHERE [Id] = @p0;","EventId":{"Id":20101,"Name":"Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted"},"SourceContext":"Microsoft.EntityFrameworkCore.Database.Command"}}
{"@timestamp":"2023-05-15T09:53:39.3481362+03:30","level":"Information","messageTemplate":"Executed DbCommand ({elapsed}ms) [Parameters=[{parameters}], CommandType='{commandType}', CommandTimeout='{commandTimeout}']{newLine}{commandText}","message":"Executed DbCommand (\"1\"ms) [Parameters=[\"\"], CommandType='Text', CommandTimeout='30']\"\r\n\"\"SELECT [o].[Id], [o].[EventDate], [o].[EventPayload], [o].[EventType], [o].[ExpireDate]\r\nFROM [OutboxMessages] AS [o]\r\nWHERE ([o].[ExpireDate] IS NULL) OR [o].[ExpireDate] >= GETDATE()\"","fields":{"elapsed":"1","parameters":"","commandType":"Text","commandTimeout":30,"newLine":"\r\n","commandText":"SELECT [o].[Id], [o].[EventDate], [o].[EventPayload], [o].[EventType], [o].[ExpireDate]\r\nFROM [OutboxMessages] AS [o]\r\nWHERE ([o].[ExpireDate] IS NULL) OR [o].[ExpireDate] >= GETDATE()","EventId":{"Id":20101,"Name":"Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted"},"SourceContext":"Microsoft.EntityFrameworkCore.Database.Command"}}
{"@timestamp":"2023-05-15T09:53:44.3502423+03:30","level":"Information","messageTemplate":"Executed DbCommand ({elapsed}ms) [Parameters=[{parameters}], CommandType='{commandType}', CommandTimeout='{commandTimeout}']{newLine}{commandText}","message":"Executed DbCommand (\"0\"ms) [Parameters=[\"\"], CommandType='Text', CommandTimeout='30']\"\r\n\"\"SELECT [o].[Id], [o].[EventDate], [o].[EventPayload], [o].[EventType], [o].[ExpireDate]\r\nFROM [OutboxMessages] AS [o]\r\nWHERE ([o].[ExpireDate] IS NULL) OR [o].[ExpireDate] >= GETDATE()\"","fields":{"elapsed":"0","parameters":"","commandType":"Text","commandTimeout":30,"newLine":"\r\n","commandText":"SELECT [o].[Id], [o].[EventDate], [o].[EventPayload], [o].[EventType], [o].[ExpireDate]\r\nFROM [OutboxMessages] AS [o]\r\nWHERE ([o].[ExpireDate] IS NULL) OR [o].[ExpireDate] >= GETDATE()","EventId":{"Id":20101,"Name":"Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted"},"SourceContext":"Microsoft.EntityFrameworkCore.Database.Command"}}
{"@timestamp":"2023-05-15T09:53:49.3528660+03:30","level":"Information","messageTemplate":"Executed DbCommand ({elapsed}ms) [Parameters=[{parameters}], CommandType='{commandType}', CommandTimeout='{commandTimeout}']{newLine}{commandText}","message":"Executed DbCommand (\"1\"ms) [Parameters=[\"\"], CommandType='Text', CommandTimeout='30']\"\r\n\"\"SELECT [o].[Id], [o].[EventDate], [o].[EventPayload], [o].[EventType], [o].[ExpireDate]\r\nFROM [OutboxMessages] AS [o]\r\nWHERE ([o].[ExpireDate] IS NULL) OR [o].[ExpireDate] >= GETDATE()\"","fields":{"elapsed":"1","parameters":"","commandType":"Text","commandTimeout":30,"newLine":"\r\n","commandText":"SELECT [o].[Id], [o].[EventDate], [o].[EventPayload], [o].[EventType], [o].[ExpireDate]\r\nFROM [OutboxMessages] AS [o]\r\nWHERE ([o].[ExpireDate] IS NULL) OR [o].[ExpireDate] >= GETDATE()","EventId":{"Id":20101,"Name":"Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted"},"SourceContext":"Microsoft.EntityFrameworkCore.Database.Command"}}
{"@timestamp":"2023-05-15T09:53:54.3561495+03:30","level":"Information","messageTemplate":"Executed DbCommand ({elapsed}ms) [Parameters=[{parameters}], CommandType='{commandType}', CommandTimeout='{commandTimeout}']{newLine}{commandText}","message":"Executed DbCommand (\"0\"ms) [Parameters=[\"\"], CommandType='Text', CommandTimeout='30']\"\r\n\"\"SELECT [o].[Id], [o].[EventDate], [o].[EventPayload], [o].[EventType], [o].[ExpireDate]\r\nFROM [OutboxMessages] AS [o]\r\nWHERE ([o].[ExpireDate] IS NULL) OR [o].[ExpireDate] >= GETDATE()\"","fields":{"elapsed":"0","parameters":"","commandType":"Text","commandTimeout":30,"newLine":"\r\n","commandText":"SELECT [o].[Id], [o].[EventDate], [o].[EventPayload], [o].[EventType], [o].[ExpireDate]\r\nFROM [OutboxMessages] AS [o]\r\nWHERE ([o].[ExpireDate] IS NULL) OR [o].[ExpireDate] >= GETDATE()","EventId":{"Id":20101,"Name":"Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted"},"SourceContext":"Microsoft.EntityFrameworkCore.Database.Command"}}
{"@timestamp":"2023-05-15T09:53:59.3601465+03:30","level":"Information","messageTemplate":"Executed DbCommand ({elapsed}ms) [Parameters=[{parameters}], CommandType='{commandType}', CommandTimeout='{commandTimeout}']{newLine}{commandText}","message":"Executed DbCommand (\"1\"ms) [Parameters=[\"\"], CommandType='Text', CommandTimeout='30']\"\r\n\"\"SELECT [o].[Id], [o].[EventDate], [o].[EventPayload], [o].[EventType], [o].[ExpireDate]\r\nFROM [OutboxMessages] AS [o]\r\nWHERE ([o].[ExpireDate] IS NULL) OR [o].[ExpireDate] >= GETDATE()\"","fields":{"elapsed":"1","parameters":"","commandType":"Text","commandTimeout":30,"newLine":"\r\n","commandText":"SELECT [o].[Id], [o].[EventDate], [o].[EventPayload], [o].[EventType], [o].[ExpireDate]\r\nFROM [OutboxMessages] AS [o]\r\nWHERE ([o].[ExpireDate] IS NULL) OR [o].[ExpireDate] >= GETDATE()","EventId":{"Id":20101,"Name":"Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted"},"SourceContext":"Microsoft.EntityFrameworkCore.Database.Command"}}
{"@timestamp":"2023-05-15T09:54:04.3674259+03:30","level":"Information","messageTemplate":"Executed DbCommand ({elapsed}ms) [Parameters=[{parameters}], CommandType='{commandType}', CommandTimeout='{commandTimeout}']{newLine}{commandText}","message":"Executed DbCommand (\"1\"ms) [Parameters=[\"\"], CommandType='Text', CommandTimeout='30']\"\r\n\"\"SELECT [o].[Id], [o].[EventDate], [o].[EventPayload], [o].[EventType], [o].[ExpireDate]\r\nFROM [OutboxMessages] AS [o]\r\nWHERE ([o].[ExpireDate] IS NULL) OR [o].[ExpireDate] >= GETDATE()\"","fields":{"elapsed":"1","parameters":"","commandType":"Text","commandTimeout":30,"newLine":"\r\n","commandText":"SELECT [o].[Id], [o].[EventDate], [o].[EventPayload], [o].[EventType], [o].[ExpireDate]\r\nFROM [OutboxMessages] AS [o]\r\nWHERE ([o].[ExpireDate] IS NULL) OR [o].[ExpireDate] >= GETDATE()","EventId":{"Id":20101,"Name":"Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted"},"SourceContext":"Microsoft.EntityFrameworkCore.Database.Command"}}
{"@timestamp":"2023-05-15T09:54:09.3759760+03:30","level":"Information","messageTemplate":"Executed DbCommand ({elapsed}ms) [Parameters=[{parameters}], CommandType='{commandType}', CommandTimeout='{commandTimeout}']{newLine}{commandText}","message":"Executed DbCommand (\"0\"ms) [Parameters=[\"\"], CommandType='Text', CommandTimeout='30']\"\r\n\"\"SELECT [o].[Id], [o].[EventDate], [o].[EventPayload], [o].[EventType], [o].[ExpireDate]\r\nFROM [OutboxMessages] AS [o]\r\nWHERE ([o].[ExpireDate] IS NULL) OR [o].[ExpireDate] >= GETDATE()\"","fields":{"elapsed":"0","parameters":"","commandType":"Text","commandTimeout":30,"newLine":"\r\n","commandText":"SELECT [o].[Id], [o].[EventDate], [o].[EventPayload], [o].[EventType], [o].[ExpireDate]\r\nFROM [OutboxMessages] AS [o]\r\nWHERE ([o].[ExpireDate] IS NULL) OR [o].[ExpireDate] >= GETDATE()","EventId":{"Id":20101,"Name":"Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted"},"SourceContext":"Microsoft.EntityFrameworkCore.Database.Command"}}
{"@timestamp":"2023-05-15T09:54:14.3989927+03:30","level":"Information","messageTemplate":"Executed DbCommand ({elapsed}ms) [Parameters=[{parameters}], CommandType='{commandType}', CommandTimeout='{commandTimeout}']{newLine}{commandText}","message":"Executed DbCommand (\"1\"ms) [Parameters=[\"\"], CommandType='Text', CommandTimeout='30']\"\r\n\"\"SELECT [o].[Id], [o].[EventDate], [o].[EventPayload], [o].[EventType], [o].[ExpireDate]\r\nFROM [OutboxMessages] AS [o]\r\nWHERE ([o].[ExpireDate] IS NULL) OR [o].[ExpireDate] >= GETDATE()\"","fields":{"elapsed":"1","parameters":"","commandType":"Text","commandTimeout":30,"newLine":"\r\n","commandText":"SELECT [o].[Id], [o].[EventDate], [o].[EventPayload], [o].[EventType], [o].[ExpireDate]\r\nFROM [OutboxMessages] AS [o]\r\nWHERE ([o].[ExpireDate] IS NULL) OR [o].[ExpireDate] >= GETDATE()","EventId":{"Id":20101,"Name":"Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted"},"SourceContext":"Microsoft.EntityFrameworkCore.Database.Command"}}
{"@timestamp":"2023-05-15T09:54:19.4068815+03:30","level":"Information","messageTemplate":"Executed DbCommand ({elapsed}ms) [Parameters=[{parameters}], CommandType='{commandType}', CommandTimeout='{commandTimeout}']{newLine}{commandText}","message":"Executed DbCommand (\"1\"ms) [Parameters=[\"\"], CommandType='Text', CommandTimeout='30']\"\r\n\"\"SELECT [o].[Id], [o].[EventDate], [o].[EventPayload], [o].[EventType], [o].[ExpireDate]\r\nFROM [OutboxMessages] AS [o]\r\nWHERE ([o].[ExpireDate] IS NULL) OR [o].[ExpireDate] >= GETDATE()\"","fields":{"elapsed":"1","parameters":"","commandType":"Text","commandTimeout":30,"newLine":"\r\n","commandText":"SELECT [o].[Id], [o].[EventDate], [o].[EventPayload], [o].[EventType], [o].[ExpireDate]\r\nFROM [OutboxMessages] AS [o]\r\nWHERE ([o].[ExpireDate] IS NULL) OR [o].[ExpireDate] >= GETDATE()","EventId":{"Id":20101,"Name":"Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted"},"SourceContext":"Microsoft.EntityFrameworkCore.Database.Command"}}
{"@timestamp":"2023-05-15T09:54:24.4114927+03:30","level":"Information","messageTemplate":"Executed DbCommand ({elapsed}ms) [Parameters=[{parameters}], CommandType='{commandType}', CommandTimeout='{commandTimeout}']{newLine}{commandText}","message":"Executed DbCommand (\"0\"ms) [Parameters=[\"\"], CommandType='Text', CommandTimeout='30']\"\r\n\"\"SELECT [o].[Id], [o].[EventDate], [o].[EventPayload], [o].[EventType], [o].[ExpireDate]\r\nFROM [OutboxMessages] AS [o]\r\nWHERE ([o].[ExpireDate] IS NULL) OR [o].[ExpireDate] >= GETDATE()\"","fields":{"elapsed":"0","parameters":"","commandType":"Text","commandTimeout":30,"newLine":"\r\n","commandText":"SELECT [o].[Id], [o].[EventDate], [o].[EventPayload], [o].[EventType], [o].[ExpireDate]\r\nFROM [OutboxMessages] AS [o]\r\nWHERE ([o].[ExpireDate] IS NULL) OR [o].[ExpireDate] >= GETDATE()","EventId":{"Id":20101,"Name":"Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted"},"SourceContext":"Microsoft.EntityFrameworkCore.Database.Command"}}
{"@timestamp":"2023-05-15T09:54:29.4249375+03:30","level":"Information","messageTemplate":"Executed DbCommand ({elapsed}ms) [Parameters=[{parameters}], CommandType='{commandType}', CommandTimeout='{commandTimeout}']{newLine}{commandText}","message":"Executed DbCommand (\"0\"ms) [Parameters=[\"\"], CommandType='Text', CommandTimeout='30']\"\r\n\"\"SELECT [o].[Id], [o].[EventDate], [o].[EventPayload], [o].[EventType], [o].[ExpireDate]\r\nFROM [OutboxMessages] AS [o]\r\nWHERE ([o].[ExpireDate] IS NULL) OR [o].[ExpireDate] >= GETDATE()\"","fields":{"elapsed":"0","parameters":"","commandType":"Text","commandTimeout":30,"newLine":"\r\n","commandText":"SELECT [o].[Id], [o].[EventDate], [o].[EventPayload], [o].[EventType], [o].[ExpireDate]\r\nFROM [OutboxMessages] AS [o]\r\nWHERE ([o].[ExpireDate] IS NULL) OR [o].[ExpireDate] >= GETDATE()","EventId":{"Id":20101,"Name":"Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted"},"SourceContext":"Microsoft.EntityFrameworkCore.Database.Command"}}
{"@timestamp":"2023-05-15T09:54:34.4292768+03:30","level":"Information","messageTemplate":"Executed DbCommand ({elapsed}ms) [Parameters=[{parameters}], CommandType='{commandType}', CommandTimeout='{commandTimeout}']{newLine}{commandText}","message":"Executed DbCommand (\"0\"ms) [Parameters=[\"\"], CommandType='Text', CommandTimeout='30']\"\r\n\"\"SELECT [o].[Id], [o].[EventDate], [o].[EventPayload], [o].[EventType], [o].[ExpireDate]\r\nFROM [OutboxMessages] AS [o]\r\nWHERE ([o].[ExpireDate] IS NULL) OR [o].[ExpireDate] >= GETDATE()\"","fields":{"elapsed":"0","parameters":"","commandType":"Text","commandTimeout":30,"newLine":"\r\n","commandText":"SELECT [o].[Id], [o].[EventDate], [o].[EventPayload], [o].[EventType], [o].[ExpireDate]\r\nFROM [OutboxMessages] AS [o]\r\nWHERE ([o].[ExpireDate] IS NULL) OR [o].[ExpireDate] >= GETDATE()","EventId":{"Id":20101,"Name":"Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted"},"SourceContext":"Microsoft.EntityFrameworkCore.Database.Command"}}
{"@timestamp":"2023-05-15T09:54:39.4431451+03:30","level":"Information","messageTemplate":"Executed DbCommand ({elapsed}ms) [Parameters=[{parameters}], CommandType='{commandType}', CommandTimeout='{commandTimeout}']{newLine}{commandText}","message":"Executed DbCommand (\"0\"ms) [Parameters=[\"\"], CommandType='Text', CommandTimeout='30']\"\r\n\"\"SELECT [o].[Id], [o].[EventDate], [o].[EventPayload], [o].[EventType], [o].[ExpireDate]\r\nFROM [OutboxMessages] AS [o]\r\nWHERE ([o].[ExpireDate] IS NULL) OR [o].[ExpireDate] >= GETDATE()\"","fields":{"elapsed":"0","parameters":"","commandType":"Text","commandTimeout":30,"newLine":"\r\n","commandText":"SELECT [o].[Id], [o].[EventDate], [o].[EventPayload], [o].[EventType], [o].[ExpireDate]\r\nFROM [OutboxMessages] AS [o]\r\nWHERE ([o].[ExpireDate] IS NULL) OR [o].[ExpireDate] >= GETDATE()","EventId":{"Id":20101,"Name":"Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted"},"SourceContext":"Microsoft.EntityFrameworkCore.Database.Command"}}
{"@timestamp":"2023-05-15T09:54:44.4451650+03:30","level":"Information","messageTemplate":"Executed DbCommand ({elapsed}ms) [Parameters=[{parameters}], CommandType='{commandType}', CommandTimeout='{commandTimeout}']{newLine}{commandText}","message":"Executed DbCommand (\"0\"ms) [Parameters=[\"\"], CommandType='Text', CommandTimeout='30']\"\r\n\"\"SELECT [o].[Id], [o].[EventDate], [o].[EventPayload], [o].[EventType], [o].[ExpireDate]\r\nFROM [OutboxMessages] AS [o]\r\nWHERE ([o].[ExpireDate] IS NULL) OR [o].[ExpireDate] >= GETDATE()\"","fields":{"elapsed":"0","parameters":"","commandType":"Text","commandTimeout":30,"newLine":"\r\n","commandText":"SELECT [o].[Id], [o].[EventDate], [o].[EventPayload], [o].[EventType], [o].[ExpireDate]\r\nFROM [OutboxMessages] AS [o]\r\nWHERE ([o].[ExpireDate] IS NULL) OR [o].[ExpireDate] >= GETDATE()","EventId":{"Id":20101,"Name":"Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted"},"SourceContext":"Microsoft.EntityFrameworkCore.Database.Command"}}
{"@timestamp":"2023-05-15T09:54:49.4497045+03:30","level":"Information","messageTemplate":"Executed DbCommand ({elapsed}ms) [Parameters=[{parameters}], CommandType='{commandType}', CommandTimeout='{commandTimeout}']{newLine}{commandText}","message":"Executed DbCommand (\"0\"ms) [Parameters=[\"\"], CommandType='Text', CommandTimeout='30']\"\r\n\"\"SELECT [o].[Id], [o].[EventDate], [o].[EventPayload], [o].[EventType], [o].[ExpireDate]\r\nFROM [OutboxMessages] AS [o]\r\nWHERE ([o].[ExpireDate] IS NULL) OR [o].[ExpireDate] >= GETDATE()\"","fields":{"elapsed":"0","parameters":"","commandType":"Text","commandTimeout":30,"newLine":"\r\n","commandText":"SELECT [o].[Id], [o].[EventDate], [o].[EventPayload], [o].[EventType], [o].[ExpireDate]\r\nFROM [OutboxMessages] AS [o]\r\nWHERE ([o].[ExpireDate] IS NULL) OR [o].[ExpireDate] >= GETDATE()","EventId":{"Id":20101,"Name":"Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted"},"SourceContext":"Microsoft.EntityFrameworkCore.Database.Command"}}
{"@timestamp":"2023-05-15T09:54:54.4605385+03:30","level":"Information","messageTemplate":"Executed DbCommand ({elapsed}ms) [Parameters=[{parameters}], CommandType='{commandType}', CommandTimeout='{commandTimeout}']{newLine}{commandText}","message":"Executed DbCommand (\"0\"ms) [Parameters=[\"\"], CommandType='Text', CommandTimeout='30']\"\r\n\"\"SELECT [o].[Id], [o].[EventDate], [o].[EventPayload], [o].[EventType], [o].[ExpireDate]\r\nFROM [OutboxMessages] AS [o]\r\nWHERE ([o].[ExpireDate] IS NULL) OR [o].[ExpireDate] >= GETDATE()\"","fields":{"elapsed":"0","parameters":"","commandType":"Text","commandTimeout":30,"newLine":"\r\n","commandText":"SELECT [o].[Id], [o].[EventDate], [o].[EventPayload], [o].[EventType], [o].[ExpireDate]\r\nFROM [OutboxMessages] AS [o]\r\nWHERE ([o].[ExpireDate] IS NULL) OR [o].[ExpireDate] >= GETDATE()","EventId":{"Id":20101,"Name":"Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted"},"SourceContext":"Microsoft.EntityFrameworkCore.Database.Command"}}
{"@timestamp":"2023-05-15T09:54:59.4638972+03:30","level":"Information","messageTemplate":"Executed DbCommand ({elapsed}ms) [Parameters=[{parameters}], CommandType='{commandType}', CommandTimeout='{commandTimeout}']{newLine}{commandText}","message":"Executed DbCommand (\"0\"ms) [Parameters=[\"\"], CommandType='Text', CommandTimeout='30']\"\r\n\"\"SELECT [o].[Id], [o].[EventDate], [o].[EventPayload], [o].[EventType], [o].[ExpireDate]\r\nFROM [OutboxMessages] AS [o]\r\nWHERE ([o].[ExpireDate] IS NULL) OR [o].[ExpireDate] >= GETDATE()\"","fields":{"elapsed":"0","parameters":"","commandType":"Text","commandTimeout":30,"newLine":"\r\n","commandText":"SELECT [o].[Id], [o].[EventDate], [o].[EventPayload], [o].[EventType], [o].[ExpireDate]\r\nFROM [OutboxMessages] AS [o]\r\nWHERE ([o].[ExpireDate] IS NULL) OR [o].[ExpireDate] >= GETDATE()","EventId":{"Id":20101,"Name":"Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted"},"SourceContext":"Microsoft.EntityFrameworkCore.Database.Command"}}
{"@timestamp":"2023-05-15T09:55:04.4674924+03:30","level":"Information","messageTemplate":"Executed DbCommand ({elapsed}ms) [Parameters=[{parameters}], CommandType='{commandType}', CommandTimeout='{commandTimeout}']{newLine}{commandText}","message":"Executed DbCommand (\"1\"ms) [Parameters=[\"\"], CommandType='Text', CommandTimeout='30']\"\r\n\"\"SELECT [o].[Id], [o].[EventDate], [o].[EventPayload], [o].[EventType], [o].[ExpireDate]\r\nFROM [OutboxMessages] AS [o]\r\nWHERE ([o].[ExpireDate] IS NULL) OR [o].[ExpireDate] >= GETDATE()\"","fields":{"elapsed":"1","parameters":"","commandType":"Text","commandTimeout":30,"newLine":"\r\n","commandText":"SELECT [o].[Id], [o].[EventDate], [o].[EventPayload], [o].[EventType], [o].[ExpireDate]\r\nFROM [OutboxMessages] AS [o]\r\nWHERE ([o].[ExpireDate] IS NULL) OR [o].[ExpireDate] >= GETDATE()","EventId":{"Id":20101,"Name":"Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted"},"SourceContext":"Microsoft.EntityFrameworkCore.Database.Command"}}
{"@timestamp":"2023-05-15T09:55:09.4754284+03:30","level":"Information","messageTemplate":"Executed DbCommand ({elapsed}ms) [Parameters=[{parameters}], CommandType='{commandType}', CommandTimeout='{commandTimeout}']{newLine}{commandText}","message":"Executed DbCommand (\"1\"ms) [Parameters=[\"\"], CommandType='Text', CommandTimeout='30']\"\r\n\"\"SELECT [o].[Id], [o].[EventDate], [o].[EventPayload], [o].[EventType], [o].[ExpireDate]\r\nFROM [OutboxMessages] AS [o]\r\nWHERE ([o].[ExpireDate] IS NULL) OR [o].[ExpireDate] >= GETDATE()\"","fields":{"elapsed":"1","parameters":"","commandType":"Text","commandTimeout":30,"newLine":"\r\n","commandText":"SELECT [o].[Id], [o].[EventDate], [o].[EventPayload], [o].[EventType], [o].[ExpireDate]\r\nFROM [OutboxMessages] AS [o]\r\nWHERE ([o].[ExpireDate] IS NULL) OR [o].[ExpireDate] >= GETDATE()","EventId":{"Id":20101,"Name":"Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted"},"SourceContext":"Microsoft.EntityFrameworkCore.Database.Command"}}
{"@timestamp":"2023-05-15T09:55:14.4888281+03:30","level":"Information","messageTemplate":"Executed DbCommand ({elapsed}ms) [Parameters=[{parameters}], CommandType='{commandType}', CommandTimeout='{commandTimeout}']{newLine}{commandText}","message":"Executed DbCommand (\"0\"ms) [Parameters=[\"\"], CommandType='Text', CommandTimeout='30']\"\r\n\"\"SELECT [o].[Id], [o].[EventDate], [o].[EventPayload], [o].[EventType], [o].[ExpireDate]\r\nFROM [OutboxMessages] AS [o]\r\nWHERE ([o].[ExpireDate] IS NULL) OR [o].[ExpireDate] >= GETDATE()\"","fields":{"elapsed":"0","parameters":"","commandType":"Text","commandTimeout":30,"newLine":"\r\n","commandText":"SELECT [o].[Id], [o].[EventDate], [o].[EventPayload], [o].[EventType], [o].[ExpireDate]\r\nFROM [OutboxMessages] AS [o]\r\nWHERE ([o].[ExpireDate] IS NULL) OR [o].[ExpireDate] >= GETDATE()","EventId":{"Id":20101,"Name":"Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted"},"SourceContext":"Microsoft.EntityFrameworkCore.Database.Command"}}
{"@timestamp":"2023-05-15T09:55:19.4992175+03:30","level":"Information","messageTemplate":"Executed DbCommand ({elapsed}ms) [Parameters=[{parameters}], CommandType='{commandType}', CommandTimeout='{commandTimeout}']{newLine}{commandText}","message":"Executed DbCommand (\"0\"ms) [Parameters=[\"\"], CommandType='Text', CommandTimeout='30']\"\r\n\"\"SELECT [o].[Id], [o].[EventDate], [o].[EventPayload], [o].[EventType], [o].[ExpireDate]\r\nFROM [OutboxMessages] AS [o]\r\nWHERE ([o].[ExpireDate] IS NULL) OR [o].[ExpireDate] >= GETDATE()\"","fields":{"elapsed":"0","parameters":"","commandType":"Text","commandTimeout":30,"newLine":"\r\n","commandText":"SELECT [o].[Id], [o].[EventDate], [o].[EventPayload], [o].[EventType], [o].[ExpireDate]\r\nFROM [OutboxMessages] AS [o]\r\nWHERE ([o].[ExpireDate] IS NULL) OR [o].[ExpireDate] >= GETDATE()","EventId":{"Id":20101,"Name":"Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted"},"SourceContext":"Microsoft.EntityFrameworkCore.Database.Command"}}
{"@timestamp":"2023-05-15T09:55:24.5146186+03:30","level":"Information","messageTemplate":"Executed DbCommand ({elapsed}ms) [Parameters=[{parameters}], CommandType='{commandType}', CommandTimeout='{commandTimeout}']{newLine}{commandText}","message":"Executed DbCommand (\"0\"ms) [Parameters=[\"\"], CommandType='Text', CommandTimeout='30']\"\r\n\"\"SELECT [o].[Id], [o].[EventDate], [o].[EventPayload], [o].[EventType], [o].[ExpireDate]\r\nFROM [OutboxMessages] AS [o]\r\nWHERE ([o].[ExpireDate] IS NULL) OR [o].[ExpireDate] >= GETDATE()\"","fields":{"elapsed":"0","parameters":"","commandType":"Text","commandTimeout":30,"newLine":"\r\n","commandText":"SELECT [o].[Id], [o].[EventDate], [o].[EventPayload], [o].[EventType], [o].[ExpireDate]\r\nFROM [OutboxMessages] AS [o]\r\nWHERE ([o].[ExpireDate] IS NULL) OR [o].[ExpireDate] >= GETDATE()","EventId":{"Id":20101,"Name":"Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted"},"SourceContext":"Microsoft.EntityFrameworkCore.Database.Command"}}
{"@timestamp":"2023-05-15T09:55:29.5261402+03:30","level":"Information","messageTemplate":"Executed DbCommand ({elapsed}ms) [Parameters=[{parameters}], CommandType='{commandType}', CommandTimeout='{commandTimeout}']{newLine}{commandText}","message":"Executed DbCommand (\"0\"ms) [Parameters=[\"\"], CommandType='Text', CommandTimeout='30']\"\r\n\"\"SELECT [o].[Id], [o].[EventDate], [o].[EventPayload], [o].[EventType], [o].[ExpireDate]\r\nFROM [OutboxMessages] AS [o]\r\nWHERE ([o].[ExpireDate] IS NULL) OR [o].[ExpireDate] >= GETDATE()\"","fields":{"elapsed":"0","parameters":"","commandType":"Text","commandTimeout":30,"newLine":"\r\n","commandText":"SELECT [o].[Id], [o].[EventDate], [o].[EventPayload], [o].[EventType], [o].[ExpireDate]\r\nFROM [OutboxMessages] AS [o]\r\nWHERE ([o].[ExpireDate] IS NULL) OR [o].[ExpireDate] >= GETDATE()","EventId":{"Id":20101,"Name":"Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted"},"SourceContext":"Microsoft.EntityFrameworkCore.Database.Command"}}
{"@timestamp":"2023-05-15T09:55:34.5333465+03:30","level":"Information","messageTemplate":"Executed DbCommand ({elapsed}ms) [Parameters=[{parameters}], CommandType='{commandType}', CommandTimeout='{commandTimeout}']{newLine}{commandText}","message":"Executed DbCommand (\"0\"ms) [Parameters=[\"\"], CommandType='Text', CommandTimeout='30']\"\r\n\"\"SELECT [o].[Id], [o].[EventDate], [o].[EventPayload], [o].[EventType], [o].[ExpireDate]\r\nFROM [OutboxMessages] AS [o]\r\nWHERE ([o].[ExpireDate] IS NULL) OR [o].[ExpireDate] >= GETDATE()\"","fields":{"elapsed":"0","parameters":"","commandType":"Text","commandTimeout":30,"newLine":"\r\n","commandText":"SELECT [o].[Id], [o].[EventDate], [o].[EventPayload], [o].[EventType], [o].[ExpireDate]\r\nFROM [OutboxMessages] AS [o]\r\nWHERE ([o].[ExpireDate] IS NULL) OR [o].[ExpireDate] >= GETDATE()","EventId":{"Id":20101,"Name":"Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted"},"SourceContext":"Microsoft.EntityFrameworkCore.Database.Command"}}
{"@timestamp":"2023-05-15T09:55:39.5434707+03:30","level":"Information","messageTemplate":"Executed DbCommand ({elapsed}ms) [Parameters=[{parameters}], CommandType='{commandType}', CommandTimeout='{commandTimeout}']{newLine}{commandText}","message":"Executed DbCommand (\"0\"ms) [Parameters=[\"\"], CommandType='Text', CommandTimeout='30']\"\r\n\"\"SELECT [o].[Id], [o].[EventDate], [o].[EventPayload], [o].[EventType], [o].[ExpireDate]\r\nFROM [OutboxMessages] AS [o]\r\nWHERE ([o].[ExpireDate] IS NULL) OR [o].[ExpireDate] >= GETDATE()\"","fields":{"elapsed":"0","parameters":"","commandType":"Text","commandTimeout":30,"newLine":"\r\n","commandText":"SELECT [o].[Id], [o].[EventDate], [o].[EventPayload], [o].[EventType], [o].[ExpireDate]\r\nFROM [OutboxMessages] AS [o]\r\nWHERE ([o].[ExpireDate] IS NULL) OR [o].[ExpireDate] >= GETDATE()","EventId":{"Id":20101,"Name":"Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted"},"SourceContext":"Microsoft.EntityFrameworkCore.Database.Command"}}
{"@timestamp":"2023-05-15T09:55:44.5566591+03:30","level":"Information","messageTemplate":"Executed DbCommand ({elapsed}ms) [Parameters=[{parameters}], CommandType='{commandType}', CommandTimeout='{commandTimeout}']{newLine}{commandText}","message":"Executed DbCommand (\"0\"ms) [Parameters=[\"\"], CommandType='Text', CommandTimeout='30']\"\r\n\"\"SELECT [o].[Id], [o].[EventDate], [o].[EventPayload], [o].[EventType], [o].[ExpireDate]\r\nFROM [OutboxMessages] AS [o]\r\nWHERE ([o].[ExpireDate] IS NULL) OR [o].[ExpireDate] >= GETDATE()\"","fields":{"elapsed":"0","parameters":"","commandType":"Text","commandTimeout":30,"newLine":"\r\n","commandText":"SELECT [o].[Id], [o].[EventDate], [o].[EventPayload], [o].[EventType], [o].[ExpireDate]\r\nFROM [OutboxMessages] AS [o]\r\nWHERE ([o].[ExpireDate] IS NULL) OR [o].[ExpireDate] >= GETDATE()","EventId":{"Id":20101,"Name":"Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted"},"SourceContext":"Microsoft.EntityFrameworkCore.Database.Command"}}
{"@timestamp":"2023-05-15T09:55:49.5704233+03:30","level":"Information","messageTemplate":"Executed DbCommand ({elapsed}ms) [Parameters=[{parameters}], CommandType='{commandType}', CommandTimeout='{commandTimeout}']{newLine}{commandText}","message":"Executed DbCommand (\"0\"ms) [Parameters=[\"\"], CommandType='Text', CommandTimeout='30']\"\r\n\"\"SELECT [o].[Id], [o].[EventDate], [o].[EventPayload], [o].[EventType], [o].[ExpireDate]\r\nFROM [OutboxMessages] AS [o]\r\nWHERE ([o].[ExpireDate] IS NULL) OR [o].[ExpireDate] >= GETDATE()\"","fields":{"elapsed":"0","parameters":"","commandType":"Text","commandTimeout":30,"newLine":"\r\n","commandText":"SELECT [o].[Id], [o].[EventDate], [o].[EventPayload], [o].[EventType], [o].[ExpireDate]\r\nFROM [OutboxMessages] AS [o]\r\nWHERE ([o].[ExpireDate] IS NULL) OR [o].[ExpireDate] >= GETDATE()","EventId":{"Id":20101,"Name":"Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted"},"SourceContext":"Microsoft.EntityFrameworkCore.Database.Command"}}
{"@timestamp":"2023-05-15T09:55:54.5748178+03:30","level":"Information","messageTemplate":"Executed DbCommand ({elapsed}ms) [Parameters=[{parameters}], CommandType='{commandType}', CommandTimeout='{commandTimeout}']{newLine}{commandText}","message":"Executed DbCommand (\"0\"ms) [Parameters=[\"\"], CommandType='Text', CommandTimeout='30']\"\r\n\"\"SELECT [o].[Id], [o].[EventDate], [o].[EventPayload], [o].[EventType], [o].[ExpireDate]\r\nFROM [OutboxMessages] AS [o]\r\nWHERE ([o].[ExpireDate] IS NULL) OR [o].[ExpireDate] >= GETDATE()\"","fields":{"elapsed":"0","parameters":"","commandType":"Text","commandTimeout":30,"newLine":"\r\n","commandText":"SELECT [o].[Id], [o].[EventDate], [o].[EventPayload], [o].[EventType], [o].[ExpireDate]\r\nFROM [OutboxMessages] AS [o]\r\nWHERE ([o].[ExpireDate] IS NULL) OR [o].[ExpireDate] >= GETDATE()","EventId":{"Id":20101,"Name":"Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted"},"SourceContext":"Microsoft.EntityFrameworkCore.Database.Command"}}
{"@timestamp":"2023-05-15T09:55:59.5874158+03:30","level":"Information","messageTemplate":"Executed DbCommand ({elapsed}ms) [Parameters=[{parameters}], CommandType='{commandType}', CommandTimeout='{commandTimeout}']{newLine}{commandText}","message":"Executed DbCommand (\"0\"ms) [Parameters=[\"\"], CommandType='Text', CommandTimeout='30']\"\r\n\"\"SELECT [o].[Id], [o].[EventDate], [o].[EventPayload], [o].[EventType], [o].[ExpireDate]\r\nFROM [OutboxMessages] AS [o]\r\nWHERE ([o].[ExpireDate] IS NULL) OR [o].[ExpireDate] >= GETDATE()\"","fields":{"elapsed":"0","parameters":"","commandType":"Text","commandTimeout":30,"newLine":"\r\n","commandText":"SELECT [o].[Id], [o].[EventDate], [o].[EventPayload], [o].[EventType], [o].[ExpireDate]\r\nFROM [OutboxMessages] AS [o]\r\nWHERE ([o].[ExpireDate] IS NULL) OR [o].[ExpireDate] >= GETDATE()","EventId":{"Id":20101,"Name":"Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted"},"SourceContext":"Microsoft.EntityFrameworkCore.Database.Command"}}
{"@timestamp":"2023-05-15T09:56:04.6032561+03:30","level":"Information","messageTemplate":"Executed DbCommand ({elapsed}ms) [Parameters=[{parameters}], CommandType='{commandType}', CommandTimeout='{commandTimeout}']{newLine}{commandText}","message":"Executed DbCommand (\"0\"ms) [Parameters=[\"\"], CommandType='Text', CommandTimeout='30']\"\r\n\"\"SELECT [o].[Id], [o].[EventDate], [o].[EventPayload], [o].[EventType], [o].[ExpireDate]\r\nFROM [OutboxMessages] AS [o]\r\nWHERE ([o].[ExpireDate] IS NULL) OR [o].[ExpireDate] >= GETDATE()\"","fields":{"elapsed":"0","parameters":"","commandType":"Text","commandTimeout":30,"newLine":"\r\n","commandText":"SELECT [o].[Id], [o].[EventDate], [o].[EventPayload], [o].[EventType], [o].[ExpireDate]\r\nFROM [OutboxMessages] AS [o]\r\nWHERE ([o].[ExpireDate] IS NULL) OR [o].[ExpireDate] >= GETDATE()","EventId":{"Id":20101,"Name":"Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted"},"SourceContext":"Microsoft.EntityFrameworkCore.Database.Command"}}
{"@timestamp":"2023-05-15T09:56:09.6151203+03:30","level":"Information","messageTemplate":"Executed DbCommand ({elapsed}ms) [Parameters=[{parameters}], CommandType='{commandType}', CommandTimeout='{commandTimeout}']{newLine}{commandText}","message":"Executed DbCommand (\"1\"ms) [Parameters=[\"\"], CommandType='Text', CommandTimeout='30']\"\r\n\"\"SELECT [o].[Id], [o].[EventDate], [o].[EventPayload], [o].[EventType], [o].[ExpireDate]\r\nFROM [OutboxMessages] AS [o]\r\nWHERE ([o].[ExpireDate] IS NULL) OR [o].[ExpireDate] >= GETDATE()\"","fields":{"elapsed":"1","parameters":"","commandType":"Text","commandTimeout":30,"newLine":"\r\n","commandText":"SELECT [o].[Id], [o].[EventDate], [o].[EventPayload], [o].[EventType], [o].[ExpireDate]\r\nFROM [OutboxMessages] AS [o]\r\nWHERE ([o].[ExpireDate] IS NULL) OR [o].[ExpireDate] >= GETDATE()","EventId":{"Id":20101,"Name":"Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted"},"SourceContext":"Microsoft.EntityFrameworkCore.Database.Command"}}
{"@timestamp":"2023-05-15T09:56:14.6171414+03:30","level":"Information","messageTemplate":"Executed DbCommand ({elapsed}ms) [Parameters=[{parameters}], CommandType='{commandType}', CommandTimeout='{commandTimeout}']{newLine}{commandText}","message":"Executed DbCommand (\"1\"ms) [Parameters=[\"\"], CommandType='Text', CommandTimeout='30']\"\r\n\"\"SELECT [o].[Id], [o].[EventDate], [o].[EventPayload], [o].[EventType], [o].[ExpireDate]\r\nFROM [OutboxMessages] AS [o]\r\nWHERE ([o].[ExpireDate] IS NULL) OR [o].[ExpireDate] >= GETDATE()\"","fields":{"elapsed":"1","parameters":"","commandType":"Text","commandTimeout":30,"newLine":"\r\n","commandText":"SELECT [o].[Id], [o].[EventDate], [o].[EventPayload], [o].[EventType], [o].[ExpireDate]\r\nFROM [OutboxMessages] AS [o]\r\nWHERE ([o].[ExpireDate] IS NULL) OR [o].[ExpireDate] >= GETDATE()","EventId":{"Id":20101,"Name":"Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted"},"SourceContext":"Microsoft.EntityFrameworkCore.Database.Command"}}
{"@timestamp":"2023-05-15T09:56:19.6224273+03:30","level":"Information","messageTemplate":"Executed DbCommand ({elapsed}ms) [Parameters=[{parameters}], CommandType='{commandType}', CommandTimeout='{commandTimeout}']{newLine}{commandText}","message":"Executed DbCommand (\"0\"ms) [Parameters=[\"\"], CommandType='Text', CommandTimeout='30']\"\r\n\"\"SELECT [o].[Id], [o].[EventDate], [o].[EventPayload], [o].[EventType], [o].[ExpireDate]\r\nFROM [OutboxMessages] AS [o]\r\nWHERE ([o].[ExpireDate] IS NULL) OR [o].[ExpireDate] >= GETDATE()\"","fields":{"elapsed":"0","parameters":"","commandType":"Text","commandTimeout":30,"newLine":"\r\n","commandText":"SELECT [o].[Id], [o].[EventDate], [o].[EventPayload], [o].[EventType], [o].[ExpireDate]\r\nFROM [OutboxMessages] AS [o]\r\nWHERE ([o].[ExpireDate] IS NULL) OR [o].[ExpireDate] >= GETDATE()","EventId":{"Id":20101,"Name":"Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted"},"SourceContext":"Microsoft.EntityFrameworkCore.Database.Command"}}
{"@timestamp":"2023-05-15T09:56:24.6399509+03:30","level":"Information","messageTemplate":"Executed DbCommand ({elapsed}ms) [Parameters=[{parameters}], CommandType='{commandType}', CommandTimeout='{commandTimeout}']{newLine}{commandText}","message":"Executed DbCommand (\"0\"ms) [Parameters=[\"\"], CommandType='Text', CommandTimeout='30']\"\r\n\"\"SELECT [o].[Id], [o].[EventDate], [o].[EventPayload], [o].[EventType], [o].[ExpireDate]\r\nFROM [OutboxMessages] AS [o]\r\nWHERE ([o].[ExpireDate] IS NULL) OR [o].[ExpireDate] >= GETDATE()\"","fields":{"elapsed":"0","parameters":"","commandType":"Text","commandTimeout":30,"newLine":"\r\n","commandText":"SELECT [o].[Id], [o].[EventDate], [o].[EventPayload], [o].[EventType], [o].[ExpireDate]\r\nFROM [OutboxMessages] AS [o]\r\nWHERE ([o].[ExpireDate] IS NULL) OR [o].[ExpireDate] >= GETDATE()","EventId":{"Id":20101,"Name":"Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted"},"SourceContext":"Microsoft.EntityFrameworkCore.Database.Command"}}
{"@timestamp":"2023-05-15T09:56:29.6472661+03:30","level":"Information","messageTemplate":"Executed DbCommand ({elapsed}ms) [Parameters=[{parameters}], CommandType='{commandType}', CommandTimeout='{commandTimeout}']{newLine}{commandText}","message":"Executed DbCommand (\"1\"ms) [Parameters=[\"\"], CommandType='Text', CommandTimeout='30']\"\r\n\"\"SELECT [o].[Id], [o].[EventDate], [o].[EventPayload], [o].[EventType], [o].[ExpireDate]\r\nFROM [OutboxMessages] AS [o]\r\nWHERE ([o].[ExpireDate] IS NULL) OR [o].[ExpireDate] >= GETDATE()\"","fields":{"elapsed":"1","parameters":"","commandType":"Text","commandTimeout":30,"newLine":"\r\n","commandText":"SELECT [o].[Id], [o].[EventDate], [o].[EventPayload], [o].[EventType], [o].[ExpireDate]\r\nFROM [OutboxMessages] AS [o]\r\nWHERE ([o].[ExpireDate] IS NULL) OR [o].[ExpireDate] >= GETDATE()","EventId":{"Id":20101,"Name":"Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted"},"SourceContext":"Microsoft.EntityFrameworkCore.Database.Command"}}
{"@timestamp":"2023-05-15T09:56:34.6583751+03:30","level":"Information","messageTemplate":"Executed DbCommand ({elapsed}ms) [Parameters=[{parameters}], CommandType='{commandType}', CommandTimeout='{commandTimeout}']{newLine}{commandText}","message":"Executed DbCommand (\"0\"ms) [Parameters=[\"\"], CommandType='Text', CommandTimeout='30']\"\r\n\"\"SELECT [o].[Id], [o].[EventDate], [o].[EventPayload], [o].[EventType], [o].[ExpireDate]\r\nFROM [OutboxMessages] AS [o]\r\nWHERE ([o].[ExpireDate] IS NULL) OR [o].[ExpireDate] >= GETDATE()\"","fields":{"elapsed":"0","parameters":"","commandType":"Text","commandTimeout":30,"newLine":"\r\n","commandText":"SELECT [o].[Id], [o].[EventDate], [o].[EventPayload], [o].[EventType], [o].[ExpireDate]\r\nFROM [OutboxMessages] AS [o]\r\nWHERE ([o].[ExpireDate] IS NULL) OR [o].[ExpireDate] >= GETDATE()","EventId":{"Id":20101,"Name":"Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted"},"SourceContext":"Microsoft.EntityFrameworkCore.Database.Command"}}
{"@timestamp":"2023-05-15T09:56:35.7682284+03:30","level":"Information","messageTemplate":"{HostingRequestStartingLog:l}","message":"Request starting HTTP/2 GET https://localhost:7211/Event/FireEvent - -","fields":{"Protocol":"HTTP/2","Method":"GET","ContentType":null,"ContentLength":null,"Scheme":"https","Host":"localhost:7211","PathBase":"","Path":"/Event/FireEvent","QueryString":"","HostingRequestStartingLog":"Request starting HTTP/2 GET https://localhost:7211/Event/FireEvent - -","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HMQL1J5MT4T7:00000017","RequestPath":"/Event/FireEvent","ConnectionId":"0HMQL1J5MT4T7"},"renderings":{"HostingRequestStartingLog":[{"Format":"l","Rendering":"Request starting HTTP/2 GET https://localhost:7211/Event/FireEvent - -"}]}}
{"@timestamp":"2023-05-15T09:56:35.7686900+03:30","level":"Information","messageTemplate":"Executing endpoint '{EndpointName}'","message":"Executing endpoint '\"RabbitMqSample.Publisher.Controllers.EventController.FireEvent (RabbitMqSample.Publisher)\"'","fields":{"EndpointName":"RabbitMqSample.Publisher.Controllers.EventController.FireEvent (RabbitMqSample.Publisher)","EventId":{"Name":"ExecutingEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HMQL1J5MT4T7:00000017","RequestPath":"/Event/FireEvent","ConnectionId":"0HMQL1J5MT4T7"}}
{"@timestamp":"2023-05-15T09:56:35.7687952+03:30","level":"Information","messageTemplate":"Route matched with {RouteData}. Executing controller action with signature {MethodInfo} on controller {Controller} ({AssemblyName}).","message":"Route matched with \"{action = \\\"FireEvent\\\", controller = \\\"Event\\\"}\". Executing controller action with signature \"System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] FireEvent()\" on controller \"RabbitMqSample.Publisher.Controllers.EventController\" (\"RabbitMqSample.Publisher\").","fields":{"RouteData":"{action = \"FireEvent\", controller = \"Event\"}","MethodInfo":"System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] FireEvent()","Controller":"RabbitMqSample.Publisher.Controllers.EventController","AssemblyName":"RabbitMqSample.Publisher","EventId":{"Id":102,"Name":"ControllerActionExecuting"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker","ActionId":"49350fce-e933-4b94-9b76-933995a110b0","ActionName":"RabbitMqSample.Publisher.Controllers.EventController.FireEvent (RabbitMqSample.Publisher)","RequestId":"0HMQL1J5MT4T7:00000017","RequestPath":"/Event/FireEvent","ConnectionId":"0HMQL1J5MT4T7"}}
{"@timestamp":"2023-05-15T09:56:35.7816551+03:30","level":"Information","messageTemplate":"Executing action method {ActionName} - Validation state: {ValidationState}","message":"Executing action method \"RabbitMqSample.Publisher.Controllers.EventController.FireEvent (RabbitMqSample.Publisher)\" - Validation state: Valid","fields":{"ActionName":"RabbitMqSample.Publisher.Controllers.EventController.FireEvent (RabbitMqSample.Publisher)","ValidationState":"Valid","EventId":{"Id":101,"Name":"ActionMethodExecuting"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker","ActionId":"49350fce-e933-4b94-9b76-933995a110b0","RequestId":"0HMQL1J5MT4T7:00000017","RequestPath":"/Event/FireEvent","ConnectionId":"0HMQL1J5MT4T7"}}
{"@timestamp":"2023-05-15T09:56:35.7855996+03:30","level":"Information","messageTemplate":"Executed DbCommand ({elapsed}ms) [Parameters=[{parameters}], CommandType='{commandType}', CommandTimeout='{commandTimeout}']{newLine}{commandText}","message":"Executed DbCommand (\"3\"ms) [Parameters=[\"@p0='?' (DbType = DateTime2), @p1='?' (Size = 4000), @p2='?' (Size = 4000), @p3='?' (DbType = DateTime2)\"], CommandType='Text', CommandTimeout='30']\"\r\n\"\"SET IMPLICIT_TRANSACTIONS OFF;\r\nSET NOCOUNT ON;\r\nINSERT INTO [OutboxMessages] ([EventDate], [EventPayload], [EventType], [ExpireDate])\r\nOUTPUT INSERTED.[Id]\r\nVALUES (@p0, @p1, @p2, @p3);\"","fields":{"elapsed":"3","parameters":"@p0='?' (DbType = DateTime2), @p1='?' (Size = 4000), @p2='?' (Size = 4000), @p3='?' (DbType = DateTime2)","commandType":"Text","commandTimeout":30,"newLine":"\r\n","commandText":"SET IMPLICIT_TRANSACTIONS OFF;\r\nSET NOCOUNT ON;\r\nINSERT INTO [OutboxMessages] ([EventDate], [EventPayload], [EventType], [ExpireDate])\r\nOUTPUT INSERTED.[Id]\r\nVALUES (@p0, @p1, @p2, @p3);","EventId":{"Id":20101,"Name":"Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted"},"SourceContext":"Microsoft.EntityFrameworkCore.Database.Command","ActionId":"49350fce-e933-4b94-9b76-933995a110b0","ActionName":"RabbitMqSample.Publisher.Controllers.EventController.FireEvent (RabbitMqSample.Publisher)","RequestId":"0HMQL1J5MT4T7:00000017","RequestPath":"/Event/FireEvent","ConnectionId":"0HMQL1J5MT4T7"}}
{"@timestamp":"2023-05-15T09:56:35.7858567+03:30","level":"Information","messageTemplate":"Event published successfully","message":"Event published successfully","fields":{"SourceContext":"RabbitMqSample.Publisher.Controllers.EventController","ActionId":"49350fce-e933-4b94-9b76-933995a110b0","ActionName":"RabbitMqSample.Publisher.Controllers.EventController.FireEvent (RabbitMqSample.Publisher)","RequestId":"0HMQL1J5MT4T7:00000017","RequestPath":"/Event/FireEvent","ConnectionId":"0HMQL1J5MT4T7"}}
{"@timestamp":"2023-05-15T09:56:35.7859027+03:30","level":"Information","messageTemplate":"Executed action method {ActionName}, returned result {ActionResult} in {ElapsedMilliseconds}ms.","message":"Executed action method \"RabbitMqSample.Publisher.Controllers.EventController.FireEvent (RabbitMqSample.Publisher)\", returned result \"Microsoft.AspNetCore.Mvc.OkResult\" in 4.1347ms.","fields":{"ActionName":"RabbitMqSample.Publisher.Controllers.EventController.FireEvent (RabbitMqSample.Publisher)","ActionResult":"Microsoft.AspNetCore.Mvc.OkResult","ElapsedMilliseconds":4.1347,"EventId":{"Id":103,"Name":"ActionMethodExecuted"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker","ActionId":"49350fce-e933-4b94-9b76-933995a110b0","RequestId":"0HMQL1J5MT4T7:00000017","RequestPath":"/Event/FireEvent","ConnectionId":"0HMQL1J5MT4T7"}}
{"@timestamp":"2023-05-15T09:56:35.7859656+03:30","level":"Information","messageTemplate":"Executing StatusCodeResult, setting HTTP status code {StatusCode}","message":"Executing StatusCodeResult, setting HTTP status code 200","fields":{"StatusCode":200,"EventId":{"Id":1,"Name":"HttpStatusCodeResultExecuting"},"SourceContext":"Microsoft.AspNetCore.Mvc.StatusCodeResult","ActionId":"49350fce-e933-4b94-9b76-933995a110b0","ActionName":"RabbitMqSample.Publisher.Controllers.EventController.FireEvent (RabbitMqSample.Publisher)","RequestId":"0HMQL1J5MT4T7:00000017","RequestPath":"/Event/FireEvent","ConnectionId":"0HMQL1J5MT4T7"}}
{"@timestamp":"2023-05-15T09:56:35.7859988+03:30","level":"Information","messageTemplate":"Executed action {ActionName} in {ElapsedMilliseconds}ms","message":"Executed action \"RabbitMqSample.Publisher.Controllers.EventController.FireEvent (RabbitMqSample.Publisher)\" in 17.1562ms","fields":{"ActionName":"RabbitMqSample.Publisher.Controllers.EventController.FireEvent (RabbitMqSample.Publisher)","ElapsedMilliseconds":17.1562,"EventId":{"Id":105,"Name":"ActionExecuted"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker","RequestId":"0HMQL1J5MT4T7:00000017","RequestPath":"/Event/FireEvent","ConnectionId":"0HMQL1J5MT4T7"}}
{"@timestamp":"2023-05-15T09:56:35.7860574+03:30","level":"Information","messageTemplate":"Executed endpoint '{EndpointName}'","message":"Executed endpoint '\"RabbitMqSample.Publisher.Controllers.EventController.FireEvent (RabbitMqSample.Publisher)\"'","fields":{"EndpointName":"RabbitMqSample.Publisher.Controllers.EventController.FireEvent (RabbitMqSample.Publisher)","EventId":{"Id":1,"Name":"ExecutedEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HMQL1J5MT4T7:00000017","RequestPath":"/Event/FireEvent","ConnectionId":"0HMQL1J5MT4T7"}}
{"@timestamp":"2023-05-15T09:56:35.7861963+03:30","level":"Information","messageTemplate":"{HostingRequestFinishedLog:l}","message":"Request finished HTTP/2 GET https://localhost:7211/Event/FireEvent - - - 200 0 - 18.6350ms","fields":{"ElapsedMilliseconds":18.635,"StatusCode":200,"ContentType":null,"ContentLength":0,"Protocol":"HTTP/2","Method":"GET","Scheme":"https","Host":"localhost:7211","PathBase":"","Path":"/Event/FireEvent","QueryString":"","HostingRequestFinishedLog":"Request finished HTTP/2 GET https://localhost:7211/Event/FireEvent - - - 200 0 - 18.6350ms","EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HMQL1J5MT4T7:00000017","RequestPath":"/Event/FireEvent","ConnectionId":"0HMQL1J5MT4T7"},"renderings":{"HostingRequestFinishedLog":[{"Format":"l","Rendering":"Request finished HTTP/2 GET https://localhost:7211/Event/FireEvent - - - 200 0 - 18.6350ms"}]}}
{"@timestamp":"2023-05-15T09:56:39.6634445+03:30","level":"Information","messageTemplate":"Executed DbCommand ({elapsed}ms) [Parameters=[{parameters}], CommandType='{commandType}', CommandTimeout='{commandTimeout}']{newLine}{commandText}","message":"Executed DbCommand (\"1\"ms) [Parameters=[\"\"], CommandType='Text', CommandTimeout='30']\"\r\n\"\"SELECT [o].[Id], [o].[EventDate], [o].[EventPayload], [o].[EventType], [o].[ExpireDate]\r\nFROM [OutboxMessages] AS [o]\r\nWHERE ([o].[ExpireDate] IS NULL) OR [o].[ExpireDate] >= GETDATE()\"","fields":{"elapsed":"1","parameters":"","commandType":"Text","commandTimeout":30,"newLine":"\r\n","commandText":"SELECT [o].[Id], [o].[EventDate], [o].[EventPayload], [o].[EventType], [o].[ExpireDate]\r\nFROM [OutboxMessages] AS [o]\r\nWHERE ([o].[ExpireDate] IS NULL) OR [o].[ExpireDate] >= GETDATE()","EventId":{"Id":20101,"Name":"Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted"},"SourceContext":"Microsoft.EntityFrameworkCore.Database.Command"}}
{"@timestamp":"2023-05-15T09:56:39.7127513+03:30","level":"Information","messageTemplate":"Executed DbCommand ({elapsed}ms) [Parameters=[{parameters}], CommandType='{commandType}', CommandTimeout='{commandTimeout}']{newLine}{commandText}","message":"Executed DbCommand (\"2\"ms) [Parameters=[\"@p0='?' (DbType = Int32)\"], CommandType='Text', CommandTimeout='30']\"\r\n\"\"SET IMPLICIT_TRANSACTIONS OFF;\r\nSET NOCOUNT ON;\r\nDELETE FROM [OutboxMessages]\r\nOUTPUT 1\r\nWHERE [Id] = @p0;\"","fields":{"elapsed":"2","parameters":"@p0='?' (DbType = Int32)","commandType":"Text","commandTimeout":30,"newLine":"\r\n","commandText":"SET IMPLICIT_TRANSACTIONS OFF;\r\nSET NOCOUNT ON;\r\nDELETE FROM [OutboxMessages]\r\nOUTPUT 1\r\nWHERE [Id] = @p0;","EventId":{"Id":20101,"Name":"Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted"},"SourceContext":"Microsoft.EntityFrameworkCore.Database.Command"}}
{"@timestamp":"2023-05-15T09:56:44.7155701+03:30","level":"Information","messageTemplate":"Executed DbCommand ({elapsed}ms) [Parameters=[{parameters}], CommandType='{commandType}', CommandTimeout='{commandTimeout}']{newLine}{commandText}","message":"Executed DbCommand (\"0\"ms) [Parameters=[\"\"], CommandType='Text', CommandTimeout='30']\"\r\n\"\"SELECT [o].[Id], [o].[EventDate], [o].[EventPayload], [o].[EventType], [o].[ExpireDate]\r\nFROM [OutboxMessages] AS [o]\r\nWHERE ([o].[ExpireDate] IS NULL) OR [o].[ExpireDate] >= GETDATE()\"","fields":{"elapsed":"0","parameters":"","commandType":"Text","commandTimeout":30,"newLine":"\r\n","commandText":"SELECT [o].[Id], [o].[EventDate], [o].[EventPayload], [o].[EventType], [o].[ExpireDate]\r\nFROM [OutboxMessages] AS [o]\r\nWHERE ([o].[ExpireDate] IS NULL) OR [o].[ExpireDate] >= GETDATE()","EventId":{"Id":20101,"Name":"Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted"},"SourceContext":"Microsoft.EntityFrameworkCore.Database.Command"}}
{"@timestamp":"2023-05-15T09:56:49.7169080+03:30","level":"Information","messageTemplate":"Executed DbCommand ({elapsed}ms) [Parameters=[{parameters}], CommandType='{commandType}', CommandTimeout='{commandTimeout}']{newLine}{commandText}","message":"Executed DbCommand (\"0\"ms) [Parameters=[\"\"], CommandType='Text', CommandTimeout='30']\"\r\n\"\"SELECT [o].[Id], [o].[EventDate], [o].[EventPayload], [o].[EventType], [o].[ExpireDate]\r\nFROM [OutboxMessages] AS [o]\r\nWHERE ([o].[ExpireDate] IS NULL) OR [o].[ExpireDate] >= GETDATE()\"","fields":{"elapsed":"0","parameters":"","commandType":"Text","commandTimeout":30,"newLine":"\r\n","commandText":"SELECT [o].[Id], [o].[EventDate], [o].[EventPayload], [o].[EventType], [o].[ExpireDate]\r\nFROM [OutboxMessages] AS [o]\r\nWHERE ([o].[ExpireDate] IS NULL) OR [o].[ExpireDate] >= GETDATE()","EventId":{"Id":20101,"Name":"Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted"},"SourceContext":"Microsoft.EntityFrameworkCore.Database.Command"}}
{"@timestamp":"2023-05-15T09:56:54.7245528+03:30","level":"Information","messageTemplate":"Executed DbCommand ({elapsed}ms) [Parameters=[{parameters}], CommandType='{commandType}', CommandTimeout='{commandTimeout}']{newLine}{commandText}","message":"Executed DbCommand (\"0\"ms) [Parameters=[\"\"], CommandType='Text', CommandTimeout='30']\"\r\n\"\"SELECT [o].[Id], [o].[EventDate], [o].[EventPayload], [o].[EventType], [o].[ExpireDate]\r\nFROM [OutboxMessages] AS [o]\r\nWHERE ([o].[ExpireDate] IS NULL) OR [o].[ExpireDate] >= GETDATE()\"","fields":{"elapsed":"0","parameters":"","commandType":"Text","commandTimeout":30,"newLine":"\r\n","commandText":"SELECT [o].[Id], [o].[EventDate], [o].[EventPayload], [o].[EventType], [o].[ExpireDate]\r\nFROM [OutboxMessages] AS [o]\r\nWHERE ([o].[ExpireDate] IS NULL) OR [o].[ExpireDate] >= GETDATE()","EventId":{"Id":20101,"Name":"Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted"},"SourceContext":"Microsoft.EntityFrameworkCore.Database.Command"}}
{"@timestamp":"2023-05-15T09:56:59.7365518+03:30","level":"Information","messageTemplate":"Executed DbCommand ({elapsed}ms) [Parameters=[{parameters}], CommandType='{commandType}', CommandTimeout='{commandTimeout}']{newLine}{commandText}","message":"Executed DbCommand (\"0\"ms) [Parameters=[\"\"], CommandType='Text', CommandTimeout='30']\"\r\n\"\"SELECT [o].[Id], [o].[EventDate], [o].[EventPayload], [o].[EventType], [o].[ExpireDate]\r\nFROM [OutboxMessages] AS [o]\r\nWHERE ([o].[ExpireDate] IS NULL) OR [o].[ExpireDate] >= GETDATE()\"","fields":{"elapsed":"0","parameters":"","commandType":"Text","commandTimeout":30,"newLine":"\r\n","commandText":"SELECT [o].[Id], [o].[EventDate], [o].[EventPayload], [o].[EventType], [o].[ExpireDate]\r\nFROM [OutboxMessages] AS [o]\r\nWHERE ([o].[ExpireDate] IS NULL) OR [o].[ExpireDate] >= GETDATE()","EventId":{"Id":20101,"Name":"Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted"},"SourceContext":"Microsoft.EntityFrameworkCore.Database.Command"}}
{"@timestamp":"2023-05-15T09:57:04.7509584+03:30","level":"Information","messageTemplate":"Executed DbCommand ({elapsed}ms) [Parameters=[{parameters}], CommandType='{commandType}', CommandTimeout='{commandTimeout}']{newLine}{commandText}","message":"Executed DbCommand (\"0\"ms) [Parameters=[\"\"], CommandType='Text', CommandTimeout='30']\"\r\n\"\"SELECT [o].[Id], [o].[EventDate], [o].[EventPayload], [o].[EventType], [o].[ExpireDate]\r\nFROM [OutboxMessages] AS [o]\r\nWHERE ([o].[ExpireDate] IS NULL) OR [o].[ExpireDate] >= GETDATE()\"","fields":{"elapsed":"0","parameters":"","commandType":"Text","commandTimeout":30,"newLine":"\r\n","commandText":"SELECT [o].[Id], [o].[EventDate], [o].[EventPayload], [o].[EventType], [o].[ExpireDate]\r\nFROM [OutboxMessages] AS [o]\r\nWHERE ([o].[ExpireDate] IS NULL) OR [o].[ExpireDate] >= GETDATE()","EventId":{"Id":20101,"Name":"Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted"},"SourceContext":"Microsoft.EntityFrameworkCore.Database.Command"}}
{"@timestamp":"2023-05-15T09:57:09.7624474+03:30","level":"Information","messageTemplate":"Executed DbCommand ({elapsed}ms) [Parameters=[{parameters}], CommandType='{commandType}', CommandTimeout='{commandTimeout}']{newLine}{commandText}","message":"Executed DbCommand (\"0\"ms) [Parameters=[\"\"], CommandType='Text', CommandTimeout='30']\"\r\n\"\"SELECT [o].[Id], [o].[EventDate], [o].[EventPayload], [o].[EventType], [o].[ExpireDate]\r\nFROM [OutboxMessages] AS [o]\r\nWHERE ([o].[ExpireDate] IS NULL) OR [o].[ExpireDate] >= GETDATE()\"","fields":{"elapsed":"0","parameters":"","commandType":"Text","commandTimeout":30,"newLine":"\r\n","commandText":"SELECT [o].[Id], [o].[EventDate], [o].[EventPayload], [o].[EventType], [o].[ExpireDate]\r\nFROM [OutboxMessages] AS [o]\r\nWHERE ([o].[ExpireDate] IS NULL) OR [o].[ExpireDate] >= GETDATE()","EventId":{"Id":20101,"Name":"Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted"},"SourceContext":"Microsoft.EntityFrameworkCore.Database.Command"}}
{"@timestamp":"2023-05-15T09:57:14.7776229+03:30","level":"Information","messageTemplate":"Executed DbCommand ({elapsed}ms) [Parameters=[{parameters}], CommandType='{commandType}', CommandTimeout='{commandTimeout}']{newLine}{commandText}","message":"Executed DbCommand (\"3\"ms) [Parameters=[\"\"], CommandType='Text', CommandTimeout='30']\"\r\n\"\"SELECT [o].[Id], [o].[EventDate], [o].[EventPayload], [o].[EventType], [o].[ExpireDate]\r\nFROM [OutboxMessages] AS [o]\r\nWHERE ([o].[ExpireDate] IS NULL) OR [o].[ExpireDate] >= GETDATE()\"","fields":{"elapsed":"3","parameters":"","commandType":"Text","commandTimeout":30,"newLine":"\r\n","commandText":"SELECT [o].[Id], [o].[EventDate], [o].[EventPayload], [o].[EventType], [o].[ExpireDate]\r\nFROM [OutboxMessages] AS [o]\r\nWHERE ([o].[ExpireDate] IS NULL) OR [o].[ExpireDate] >= GETDATE()","EventId":{"Id":20101,"Name":"Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted"},"SourceContext":"Microsoft.EntityFrameworkCore.Database.Command"}}
{"@timestamp":"2023-05-15T09:57:19.7855402+03:30","level":"Information","messageTemplate":"Executed DbCommand ({elapsed}ms) [Parameters=[{parameters}], CommandType='{commandType}', CommandTimeout='{commandTimeout}']{newLine}{commandText}","message":"Executed DbCommand (\"1\"ms) [Parameters=[\"\"], CommandType='Text', CommandTimeout='30']\"\r\n\"\"SELECT [o].[Id], [o].[EventDate], [o].[EventPayload], [o].[EventType], [o].[ExpireDate]\r\nFROM [OutboxMessages] AS [o]\r\nWHERE ([o].[ExpireDate] IS NULL) OR [o].[ExpireDate] >= GETDATE()\"","fields":{"elapsed":"1","parameters":"","commandType":"Text","commandTimeout":30,"newLine":"\r\n","commandText":"SELECT [o].[Id], [o].[EventDate], [o].[EventPayload], [o].[EventType], [o].[ExpireDate]\r\nFROM [OutboxMessages] AS [o]\r\nWHERE ([o].[ExpireDate] IS NULL) OR [o].[ExpireDate] >= GETDATE()","EventId":{"Id":20101,"Name":"Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted"},"SourceContext":"Microsoft.EntityFrameworkCore.Database.Command"}}
{"@timestamp":"2023-05-15T09:57:24.7965221+03:30","level":"Information","messageTemplate":"Executed DbCommand ({elapsed}ms) [Parameters=[{parameters}], CommandType='{commandType}', CommandTimeout='{commandTimeout}']{newLine}{commandText}","message":"Executed DbCommand (\"0\"ms) [Parameters=[\"\"], CommandType='Text', CommandTimeout='30']\"\r\n\"\"SELECT [o].[Id], [o].[EventDate], [o].[EventPayload], [o].[EventType], [o].[ExpireDate]\r\nFROM [OutboxMessages] AS [o]\r\nWHERE ([o].[ExpireDate] IS NULL) OR [o].[ExpireDate] >= GETDATE()\"","fields":{"elapsed":"0","parameters":"","commandType":"Text","commandTimeout":30,"newLine":"\r\n","commandText":"SELECT [o].[Id], [o].[EventDate], [o].[EventPayload], [o].[EventType], [o].[ExpireDate]\r\nFROM [OutboxMessages] AS [o]\r\nWHERE ([o].[ExpireDate] IS NULL) OR [o].[ExpireDate] >= GETDATE()","EventId":{"Id":20101,"Name":"Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted"},"SourceContext":"Microsoft.EntityFrameworkCore.Database.Command"}}
{"@timestamp":"2023-05-15T09:57:29.8006325+03:30","level":"Information","messageTemplate":"Executed DbCommand ({elapsed}ms) [Parameters=[{parameters}], CommandType='{commandType}', CommandTimeout='{commandTimeout}']{newLine}{commandText}","message":"Executed DbCommand (\"0\"ms) [Parameters=[\"\"], CommandType='Text', CommandTimeout='30']\"\r\n\"\"SELECT [o].[Id], [o].[EventDate], [o].[EventPayload], [o].[EventType], [o].[ExpireDate]\r\nFROM [OutboxMessages] AS [o]\r\nWHERE ([o].[ExpireDate] IS NULL) OR [o].[ExpireDate] >= GETDATE()\"","fields":{"elapsed":"0","parameters":"","commandType":"Text","commandTimeout":30,"newLine":"\r\n","commandText":"SELECT [o].[Id], [o].[EventDate], [o].[EventPayload], [o].[EventType], [o].[ExpireDate]\r\nFROM [OutboxMessages] AS [o]\r\nWHERE ([o].[ExpireDate] IS NULL) OR [o].[ExpireDate] >= GETDATE()","EventId":{"Id":20101,"Name":"Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted"},"SourceContext":"Microsoft.EntityFrameworkCore.Database.Command"}}
{"@timestamp":"2023-05-15T09:57:34.8171643+03:30","level":"Information","messageTemplate":"Executed DbCommand ({elapsed}ms) [Parameters=[{parameters}], CommandType='{commandType}', CommandTimeout='{commandTimeout}']{newLine}{commandText}","message":"Executed DbCommand (\"0\"ms) [Parameters=[\"\"], CommandType='Text', CommandTimeout='30']\"\r\n\"\"SELECT [o].[Id], [o].[EventDate], [o].[EventPayload], [o].[EventType], [o].[ExpireDate]\r\nFROM [OutboxMessages] AS [o]\r\nWHERE ([o].[ExpireDate] IS NULL) OR [o].[ExpireDate] >= GETDATE()\"","fields":{"elapsed":"0","parameters":"","commandType":"Text","commandTimeout":30,"newLine":"\r\n","commandText":"SELECT [o].[Id], [o].[EventDate], [o].[EventPayload], [o].[EventType], [o].[ExpireDate]\r\nFROM [OutboxMessages] AS [o]\r\nWHERE ([o].[ExpireDate] IS NULL) OR [o].[ExpireDate] >= GETDATE()","EventId":{"Id":20101,"Name":"Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted"},"SourceContext":"Microsoft.EntityFrameworkCore.Database.Command"}}
{"@timestamp":"2023-05-15T09:57:39.8285754+03:30","level":"Information","messageTemplate":"Executed DbCommand ({elapsed}ms) [Parameters=[{parameters}], CommandType='{commandType}', CommandTimeout='{commandTimeout}']{newLine}{commandText}","message":"Executed DbCommand (\"0\"ms) [Parameters=[\"\"], CommandType='Text', CommandTimeout='30']\"\r\n\"\"SELECT [o].[Id], [o].[EventDate], [o].[EventPayload], [o].[EventType], [o].[ExpireDate]\r\nFROM [OutboxMessages] AS [o]\r\nWHERE ([o].[ExpireDate] IS NULL) OR [o].[ExpireDate] >= GETDATE()\"","fields":{"elapsed":"0","parameters":"","commandType":"Text","commandTimeout":30,"newLine":"\r\n","commandText":"SELECT [o].[Id], [o].[EventDate], [o].[EventPayload], [o].[EventType], [o].[ExpireDate]\r\nFROM [OutboxMessages] AS [o]\r\nWHERE ([o].[ExpireDate] IS NULL) OR [o].[ExpireDate] >= GETDATE()","EventId":{"Id":20101,"Name":"Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted"},"SourceContext":"Microsoft.EntityFrameworkCore.Database.Command"}}
{"@timestamp":"2023-05-15T09:57:44.8380745+03:30","level":"Information","messageTemplate":"Executed DbCommand ({elapsed}ms) [Parameters=[{parameters}], CommandType='{commandType}', CommandTimeout='{commandTimeout}']{newLine}{commandText}","message":"Executed DbCommand (\"0\"ms) [Parameters=[\"\"], CommandType='Text', CommandTimeout='30']\"\r\n\"\"SELECT [o].[Id], [o].[EventDate], [o].[EventPayload], [o].[EventType], [o].[ExpireDate]\r\nFROM [OutboxMessages] AS [o]\r\nWHERE ([o].[ExpireDate] IS NULL) OR [o].[ExpireDate] >= GETDATE()\"","fields":{"elapsed":"0","parameters":"","commandType":"Text","commandTimeout":30,"newLine":"\r\n","commandText":"SELECT [o].[Id], [o].[EventDate], [o].[EventPayload], [o].[EventType], [o].[ExpireDate]\r\nFROM [OutboxMessages] AS [o]\r\nWHERE ([o].[ExpireDate] IS NULL) OR [o].[ExpireDate] >= GETDATE()","EventId":{"Id":20101,"Name":"Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted"},"SourceContext":"Microsoft.EntityFrameworkCore.Database.Command"}}
{"@timestamp":"2023-05-15T09:57:49.8428428+03:30","level":"Information","messageTemplate":"Executed DbCommand ({elapsed}ms) [Parameters=[{parameters}], CommandType='{commandType}', CommandTimeout='{commandTimeout}']{newLine}{commandText}","message":"Executed DbCommand (\"0\"ms) [Parameters=[\"\"], CommandType='Text', CommandTimeout='30']\"\r\n\"\"SELECT [o].[Id], [o].[EventDate], [o].[EventPayload], [o].[EventType], [o].[ExpireDate]\r\nFROM [OutboxMessages] AS [o]\r\nWHERE ([o].[ExpireDate] IS NULL) OR [o].[ExpireDate] >= GETDATE()\"","fields":{"elapsed":"0","parameters":"","commandType":"Text","commandTimeout":30,"newLine":"\r\n","commandText":"SELECT [o].[Id], [o].[EventDate], [o].[EventPayload], [o].[EventType], [o].[ExpireDate]\r\nFROM [OutboxMessages] AS [o]\r\nWHERE ([o].[ExpireDate] IS NULL) OR [o].[ExpireDate] >= GETDATE()","EventId":{"Id":20101,"Name":"Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted"},"SourceContext":"Microsoft.EntityFrameworkCore.Database.Command"}}
{"@timestamp":"2023-05-15T09:57:54.8463349+03:30","level":"Information","messageTemplate":"Executed DbCommand ({elapsed}ms) [Parameters=[{parameters}], CommandType='{commandType}', CommandTimeout='{commandTimeout}']{newLine}{commandText}","message":"Executed DbCommand (\"0\"ms) [Parameters=[\"\"], CommandType='Text', CommandTimeout='30']\"\r\n\"\"SELECT [o].[Id], [o].[EventDate], [o].[EventPayload], [o].[EventType], [o].[ExpireDate]\r\nFROM [OutboxMessages] AS [o]\r\nWHERE ([o].[ExpireDate] IS NULL) OR [o].[ExpireDate] >= GETDATE()\"","fields":{"elapsed":"0","parameters":"","commandType":"Text","commandTimeout":30,"newLine":"\r\n","commandText":"SELECT [o].[Id], [o].[EventDate], [o].[EventPayload], [o].[EventType], [o].[ExpireDate]\r\nFROM [OutboxMessages] AS [o]\r\nWHERE ([o].[ExpireDate] IS NULL) OR [o].[ExpireDate] >= GETDATE()","EventId":{"Id":20101,"Name":"Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted"},"SourceContext":"Microsoft.EntityFrameworkCore.Database.Command"}}
{"@timestamp":"2023-05-15T09:57:59.8558884+03:30","level":"Information","messageTemplate":"Executed DbCommand ({elapsed}ms) [Parameters=[{parameters}], CommandType='{commandType}', CommandTimeout='{commandTimeout}']{newLine}{commandText}","message":"Executed DbCommand (\"0\"ms) [Parameters=[\"\"], CommandType='Text', CommandTimeout='30']\"\r\n\"\"SELECT [o].[Id], [o].[EventDate], [o].[EventPayload], [o].[EventType], [o].[ExpireDate]\r\nFROM [OutboxMessages] AS [o]\r\nWHERE ([o].[ExpireDate] IS NULL) OR [o].[ExpireDate] >= GETDATE()\"","fields":{"elapsed":"0","parameters":"","commandType":"Text","commandTimeout":30,"newLine":"\r\n","commandText":"SELECT [o].[Id], [o].[EventDate], [o].[EventPayload], [o].[EventType], [o].[ExpireDate]\r\nFROM [OutboxMessages] AS [o]\r\nWHERE ([o].[ExpireDate] IS NULL) OR [o].[ExpireDate] >= GETDATE()","EventId":{"Id":20101,"Name":"Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted"},"SourceContext":"Microsoft.EntityFrameworkCore.Database.Command"}}
{"@timestamp":"2023-05-15T09:58:04.8620763+03:30","level":"Information","messageTemplate":"Executed DbCommand ({elapsed}ms) [Parameters=[{parameters}], CommandType='{commandType}', CommandTimeout='{commandTimeout}']{newLine}{commandText}","message":"Executed DbCommand (\"0\"ms) [Parameters=[\"\"], CommandType='Text', CommandTimeout='30']\"\r\n\"\"SELECT [o].[Id], [o].[EventDate], [o].[EventPayload], [o].[EventType], [o].[ExpireDate]\r\nFROM [OutboxMessages] AS [o]\r\nWHERE ([o].[ExpireDate] IS NULL) OR [o].[ExpireDate] >= GETDATE()\"","fields":{"elapsed":"0","parameters":"","commandType":"Text","commandTimeout":30,"newLine":"\r\n","commandText":"SELECT [o].[Id], [o].[EventDate], [o].[EventPayload], [o].[EventType], [o].[ExpireDate]\r\nFROM [OutboxMessages] AS [o]\r\nWHERE ([o].[ExpireDate] IS NULL) OR [o].[ExpireDate] >= GETDATE()","EventId":{"Id":20101,"Name":"Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted"},"SourceContext":"Microsoft.EntityFrameworkCore.Database.Command"}}
{"@timestamp":"2023-05-15T09:58:09.8764618+03:30","level":"Information","messageTemplate":"Executed DbCommand ({elapsed}ms) [Parameters=[{parameters}], CommandType='{commandType}', CommandTimeout='{commandTimeout}']{newLine}{commandText}","message":"Executed DbCommand (\"0\"ms) [Parameters=[\"\"], CommandType='Text', CommandTimeout='30']\"\r\n\"\"SELECT [o].[Id], [o].[EventDate], [o].[EventPayload], [o].[EventType], [o].[ExpireDate]\r\nFROM [OutboxMessages] AS [o]\r\nWHERE ([o].[ExpireDate] IS NULL) OR [o].[ExpireDate] >= GETDATE()\"","fields":{"elapsed":"0","parameters":"","commandType":"Text","commandTimeout":30,"newLine":"\r\n","commandText":"SELECT [o].[Id], [o].[EventDate], [o].[EventPayload], [o].[EventType], [o].[ExpireDate]\r\nFROM [OutboxMessages] AS [o]\r\nWHERE ([o].[ExpireDate] IS NULL) OR [o].[ExpireDate] >= GETDATE()","EventId":{"Id":20101,"Name":"Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted"},"SourceContext":"Microsoft.EntityFrameworkCore.Database.Command"}}
{"@timestamp":"2023-05-15T09:58:14.8915876+03:30","level":"Information","messageTemplate":"Executed DbCommand ({elapsed}ms) [Parameters=[{parameters}], CommandType='{commandType}', CommandTimeout='{commandTimeout}']{newLine}{commandText}","message":"Executed DbCommand (\"0\"ms) [Parameters=[\"\"], CommandType='Text', CommandTimeout='30']\"\r\n\"\"SELECT [o].[Id], [o].[EventDate], [o].[EventPayload], [o].[EventType], [o].[ExpireDate]\r\nFROM [OutboxMessages] AS [o]\r\nWHERE ([o].[ExpireDate] IS NULL) OR [o].[ExpireDate] >= GETDATE()\"","fields":{"elapsed":"0","parameters":"","commandType":"Text","commandTimeout":30,"newLine":"\r\n","commandText":"SELECT [o].[Id], [o].[EventDate], [o].[EventPayload], [o].[EventType], [o].[ExpireDate]\r\nFROM [OutboxMessages] AS [o]\r\nWHERE ([o].[ExpireDate] IS NULL) OR [o].[ExpireDate] >= GETDATE()","EventId":{"Id":20101,"Name":"Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted"},"SourceContext":"Microsoft.EntityFrameworkCore.Database.Command"}}
{"@timestamp":"2023-05-15T09:58:19.9049818+03:30","level":"Information","messageTemplate":"Executed DbCommand ({elapsed}ms) [Parameters=[{parameters}], CommandType='{commandType}', CommandTimeout='{commandTimeout}']{newLine}{commandText}","message":"Executed DbCommand (\"1\"ms) [Parameters=[\"\"], CommandType='Text', CommandTimeout='30']\"\r\n\"\"SELECT [o].[Id], [o].[EventDate], [o].[EventPayload], [o].[EventType], [o].[ExpireDate]\r\nFROM [OutboxMessages] AS [o]\r\nWHERE ([o].[ExpireDate] IS NULL) OR [o].[ExpireDate] >= GETDATE()\"","fields":{"elapsed":"1","parameters":"","commandType":"Text","commandTimeout":30,"newLine":"\r\n","commandText":"SELECT [o].[Id], [o].[EventDate], [o].[EventPayload], [o].[EventType], [o].[ExpireDate]\r\nFROM [OutboxMessages] AS [o]\r\nWHERE ([o].[ExpireDate] IS NULL) OR [o].[ExpireDate] >= GETDATE()","EventId":{"Id":20101,"Name":"Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted"},"SourceContext":"Microsoft.EntityFrameworkCore.Database.Command"}}
{"@timestamp":"2023-05-15T09:58:24.9237889+03:30","level":"Information","messageTemplate":"Executed DbCommand ({elapsed}ms) [Parameters=[{parameters}], CommandType='{commandType}', CommandTimeout='{commandTimeout}']{newLine}{commandText}","message":"Executed DbCommand (\"4\"ms) [Parameters=[\"\"], CommandType='Text', CommandTimeout='30']\"\r\n\"\"SELECT [o].[Id], [o].[EventDate], [o].[EventPayload], [o].[EventType], [o].[ExpireDate]\r\nFROM [OutboxMessages] AS [o]\r\nWHERE ([o].[ExpireDate] IS NULL) OR [o].[ExpireDate] >= GETDATE()\"","fields":{"elapsed":"4","parameters":"","commandType":"Text","commandTimeout":30,"newLine":"\r\n","commandText":"SELECT [o].[Id], [o].[EventDate], [o].[EventPayload], [o].[EventType], [o].[ExpireDate]\r\nFROM [OutboxMessages] AS [o]\r\nWHERE ([o].[ExpireDate] IS NULL) OR [o].[ExpireDate] >= GETDATE()","EventId":{"Id":20101,"Name":"Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted"},"SourceContext":"Microsoft.EntityFrameworkCore.Database.Command"}}
{"@timestamp":"2023-05-15T09:58:29.9292412+03:30","level":"Information","messageTemplate":"Executed DbCommand ({elapsed}ms) [Parameters=[{parameters}], CommandType='{commandType}', CommandTimeout='{commandTimeout}']{newLine}{commandText}","message":"Executed DbCommand (\"0\"ms) [Parameters=[\"\"], CommandType='Text', CommandTimeout='30']\"\r\n\"\"SELECT [o].[Id], [o].[EventDate], [o].[EventPayload], [o].[EventType], [o].[ExpireDate]\r\nFROM [OutboxMessages] AS [o]\r\nWHERE ([o].[ExpireDate] IS NULL) OR [o].[ExpireDate] >= GETDATE()\"","fields":{"elapsed":"0","parameters":"","commandType":"Text","commandTimeout":30,"newLine":"\r\n","commandText":"SELECT [o].[Id], [o].[EventDate], [o].[EventPayload], [o].[EventType], [o].[ExpireDate]\r\nFROM [OutboxMessages] AS [o]\r\nWHERE ([o].[ExpireDate] IS NULL) OR [o].[ExpireDate] >= GETDATE()","EventId":{"Id":20101,"Name":"Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted"},"SourceContext":"Microsoft.EntityFrameworkCore.Database.Command"}}
{"@timestamp":"2023-05-15T09:58:34.9304762+03:30","level":"Information","messageTemplate":"Executed DbCommand ({elapsed}ms) [Parameters=[{parameters}], CommandType='{commandType}', CommandTimeout='{commandTimeout}']{newLine}{commandText}","message":"Executed DbCommand (\"0\"ms) [Parameters=[\"\"], CommandType='Text', CommandTimeout='30']\"\r\n\"\"SELECT [o].[Id], [o].[EventDate], [o].[EventPayload], [o].[EventType], [o].[ExpireDate]\r\nFROM [OutboxMessages] AS [o]\r\nWHERE ([o].[ExpireDate] IS NULL) OR [o].[ExpireDate] >= GETDATE()\"","fields":{"elapsed":"0","parameters":"","commandType":"Text","commandTimeout":30,"newLine":"\r\n","commandText":"SELECT [o].[Id], [o].[EventDate], [o].[EventPayload], [o].[EventType], [o].[ExpireDate]\r\nFROM [OutboxMessages] AS [o]\r\nWHERE ([o].[ExpireDate] IS NULL) OR [o].[ExpireDate] >= GETDATE()","EventId":{"Id":20101,"Name":"Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted"},"SourceContext":"Microsoft.EntityFrameworkCore.Database.Command"}}
{"@timestamp":"2023-05-15T09:58:39.9460045+03:30","level":"Information","messageTemplate":"Executed DbCommand ({elapsed}ms) [Parameters=[{parameters}], CommandType='{commandType}', CommandTimeout='{commandTimeout}']{newLine}{commandText}","message":"Executed DbCommand (\"0\"ms) [Parameters=[\"\"], CommandType='Text', CommandTimeout='30']\"\r\n\"\"SELECT [o].[Id], [o].[EventDate], [o].[EventPayload], [o].[EventType], [o].[ExpireDate]\r\nFROM [OutboxMessages] AS [o]\r\nWHERE ([o].[ExpireDate] IS NULL) OR [o].[ExpireDate] >= GETDATE()\"","fields":{"elapsed":"0","parameters":"","commandType":"Text","commandTimeout":30,"newLine":"\r\n","commandText":"SELECT [o].[Id], [o].[EventDate], [o].[EventPayload], [o].[EventType], [o].[ExpireDate]\r\nFROM [OutboxMessages] AS [o]\r\nWHERE ([o].[ExpireDate] IS NULL) OR [o].[ExpireDate] >= GETDATE()","EventId":{"Id":20101,"Name":"Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted"},"SourceContext":"Microsoft.EntityFrameworkCore.Database.Command"}}
{"@timestamp":"2023-05-15T09:58:44.9537198+03:30","level":"Information","messageTemplate":"Executed DbCommand ({elapsed}ms) [Parameters=[{parameters}], CommandType='{commandType}', CommandTimeout='{commandTimeout}']{newLine}{commandText}","message":"Executed DbCommand (\"0\"ms) [Parameters=[\"\"], CommandType='Text', CommandTimeout='30']\"\r\n\"\"SELECT [o].[Id], [o].[EventDate], [o].[EventPayload], [o].[EventType], [o].[ExpireDate]\r\nFROM [OutboxMessages] AS [o]\r\nWHERE ([o].[ExpireDate] IS NULL) OR [o].[ExpireDate] >= GETDATE()\"","fields":{"elapsed":"0","parameters":"","commandType":"Text","commandTimeout":30,"newLine":"\r\n","commandText":"SELECT [o].[Id], [o].[EventDate], [o].[EventPayload], [o].[EventType], [o].[ExpireDate]\r\nFROM [OutboxMessages] AS [o]\r\nWHERE ([o].[ExpireDate] IS NULL) OR [o].[ExpireDate] >= GETDATE()","EventId":{"Id":20101,"Name":"Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted"},"SourceContext":"Microsoft.EntityFrameworkCore.Database.Command"}}
{"@timestamp":"2023-05-15T09:58:49.9703745+03:30","level":"Information","messageTemplate":"Executed DbCommand ({elapsed}ms) [Parameters=[{parameters}], CommandType='{commandType}', CommandTimeout='{commandTimeout}']{newLine}{commandText}","message":"Executed DbCommand (\"0\"ms) [Parameters=[\"\"], CommandType='Text', CommandTimeout='30']\"\r\n\"\"SELECT [o].[Id], [o].[EventDate], [o].[EventPayload], [o].[EventType], [o].[ExpireDate]\r\nFROM [OutboxMessages] AS [o]\r\nWHERE ([o].[ExpireDate] IS NULL) OR [o].[ExpireDate] >= GETDATE()\"","fields":{"elapsed":"0","parameters":"","commandType":"Text","commandTimeout":30,"newLine":"\r\n","commandText":"SELECT [o].[Id], [o].[EventDate], [o].[EventPayload], [o].[EventType], [o].[ExpireDate]\r\nFROM [OutboxMessages] AS [o]\r\nWHERE ([o].[ExpireDate] IS NULL) OR [o].[ExpireDate] >= GETDATE()","EventId":{"Id":20101,"Name":"Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted"},"SourceContext":"Microsoft.EntityFrameworkCore.Database.Command"}}
{"@timestamp":"2023-05-15T09:58:54.9781249+03:30","level":"Information","messageTemplate":"Executed DbCommand ({elapsed}ms) [Parameters=[{parameters}], CommandType='{commandType}', CommandTimeout='{commandTimeout}']{newLine}{commandText}","message":"Executed DbCommand (\"0\"ms) [Parameters=[\"\"], CommandType='Text', CommandTimeout='30']\"\r\n\"\"SELECT [o].[Id], [o].[EventDate], [o].[EventPayload], [o].[EventType], [o].[ExpireDate]\r\nFROM [OutboxMessages] AS [o]\r\nWHERE ([o].[ExpireDate] IS NULL) OR [o].[ExpireDate] >= GETDATE()\"","fields":{"elapsed":"0","parameters":"","commandType":"Text","commandTimeout":30,"newLine":"\r\n","commandText":"SELECT [o].[Id], [o].[EventDate], [o].[EventPayload], [o].[EventType], [o].[ExpireDate]\r\nFROM [OutboxMessages] AS [o]\r\nWHERE ([o].[ExpireDate] IS NULL) OR [o].[ExpireDate] >= GETDATE()","EventId":{"Id":20101,"Name":"Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted"},"SourceContext":"Microsoft.EntityFrameworkCore.Database.Command"}}
{"@timestamp":"2023-05-15T09:58:59.9873461+03:30","level":"Information","messageTemplate":"Executed DbCommand ({elapsed}ms) [Parameters=[{parameters}], CommandType='{commandType}', CommandTimeout='{commandTimeout}']{newLine}{commandText}","message":"Executed DbCommand (\"0\"ms) [Parameters=[\"\"], CommandType='Text', CommandTimeout='30']\"\r\n\"\"SELECT [o].[Id], [o].[EventDate], [o].[EventPayload], [o].[EventType], [o].[ExpireDate]\r\nFROM [OutboxMessages] AS [o]\r\nWHERE ([o].[ExpireDate] IS NULL) OR [o].[ExpireDate] >= GETDATE()\"","fields":{"elapsed":"0","parameters":"","commandType":"Text","commandTimeout":30,"newLine":"\r\n","commandText":"SELECT [o].[Id], [o].[EventDate], [o].[EventPayload], [o].[EventType], [o].[ExpireDate]\r\nFROM [OutboxMessages] AS [o]\r\nWHERE ([o].[ExpireDate] IS NULL) OR [o].[ExpireDate] >= GETDATE()","EventId":{"Id":20101,"Name":"Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted"},"SourceContext":"Microsoft.EntityFrameworkCore.Database.Command"}}
{"@timestamp":"2023-05-15T09:59:05.0015500+03:30","level":"Information","messageTemplate":"Executed DbCommand ({elapsed}ms) [Parameters=[{parameters}], CommandType='{commandType}', CommandTimeout='{commandTimeout}']{newLine}{commandText}","message":"Executed DbCommand (\"0\"ms) [Parameters=[\"\"], CommandType='Text', CommandTimeout='30']\"\r\n\"\"SELECT [o].[Id], [o].[EventDate], [o].[EventPayload], [o].[EventType], [o].[ExpireDate]\r\nFROM [OutboxMessages] AS [o]\r\nWHERE ([o].[ExpireDate] IS NULL) OR [o].[ExpireDate] >= GETDATE()\"","fields":{"elapsed":"0","parameters":"","commandType":"Text","commandTimeout":30,"newLine":"\r\n","commandText":"SELECT [o].[Id], [o].[EventDate], [o].[EventPayload], [o].[EventType], [o].[ExpireDate]\r\nFROM [OutboxMessages] AS [o]\r\nWHERE ([o].[ExpireDate] IS NULL) OR [o].[ExpireDate] >= GETDATE()","EventId":{"Id":20101,"Name":"Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted"},"SourceContext":"Microsoft.EntityFrameworkCore.Database.Command"}}
{"@timestamp":"2023-05-15T09:59:10.0056147+03:30","level":"Information","messageTemplate":"Executed DbCommand ({elapsed}ms) [Parameters=[{parameters}], CommandType='{commandType}', CommandTimeout='{commandTimeout}']{newLine}{commandText}","message":"Executed DbCommand (\"0\"ms) [Parameters=[\"\"], CommandType='Text', CommandTimeout='30']\"\r\n\"\"SELECT [o].[Id], [o].[EventDate], [o].[EventPayload], [o].[EventType], [o].[ExpireDate]\r\nFROM [OutboxMessages] AS [o]\r\nWHERE ([o].[ExpireDate] IS NULL) OR [o].[ExpireDate] >= GETDATE()\"","fields":{"elapsed":"0","parameters":"","commandType":"Text","commandTimeout":30,"newLine":"\r\n","commandText":"SELECT [o].[Id], [o].[EventDate], [o].[EventPayload], [o].[EventType], [o].[ExpireDate]\r\nFROM [OutboxMessages] AS [o]\r\nWHERE ([o].[ExpireDate] IS NULL) OR [o].[ExpireDate] >= GETDATE()","EventId":{"Id":20101,"Name":"Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted"},"SourceContext":"Microsoft.EntityFrameworkCore.Database.Command"}}
{"@timestamp":"2023-05-15T09:59:15.0138798+03:30","level":"Information","messageTemplate":"Executed DbCommand ({elapsed}ms) [Parameters=[{parameters}], CommandType='{commandType}', CommandTimeout='{commandTimeout}']{newLine}{commandText}","message":"Executed DbCommand (\"0\"ms) [Parameters=[\"\"], CommandType='Text', CommandTimeout='30']\"\r\n\"\"SELECT [o].[Id], [o].[EventDate], [o].[EventPayload], [o].[EventType], [o].[ExpireDate]\r\nFROM [OutboxMessages] AS [o]\r\nWHERE ([o].[ExpireDate] IS NULL) OR [o].[ExpireDate] >= GETDATE()\"","fields":{"elapsed":"0","parameters":"","commandType":"Text","commandTimeout":30,"newLine":"\r\n","commandText":"SELECT [o].[Id], [o].[EventDate], [o].[EventPayload], [o].[EventType], [o].[ExpireDate]\r\nFROM [OutboxMessages] AS [o]\r\nWHERE ([o].[ExpireDate] IS NULL) OR [o].[ExpireDate] >= GETDATE()","EventId":{"Id":20101,"Name":"Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted"},"SourceContext":"Microsoft.EntityFrameworkCore.Database.Command"}}
{"@timestamp":"2023-05-15T09:59:20.0210482+03:30","level":"Information","messageTemplate":"Executed DbCommand ({elapsed}ms) [Parameters=[{parameters}], CommandType='{commandType}', CommandTimeout='{commandTimeout}']{newLine}{commandText}","message":"Executed DbCommand (\"0\"ms) [Parameters=[\"\"], CommandType='Text', CommandTimeout='30']\"\r\n\"\"SELECT [o].[Id], [o].[EventDate], [o].[EventPayload], [o].[EventType], [o].[ExpireDate]\r\nFROM [OutboxMessages] AS [o]\r\nWHERE ([o].[ExpireDate] IS NULL) OR [o].[ExpireDate] >= GETDATE()\"","fields":{"elapsed":"0","parameters":"","commandType":"Text","commandTimeout":30,"newLine":"\r\n","commandText":"SELECT [o].[Id], [o].[EventDate], [o].[EventPayload], [o].[EventType], [o].[ExpireDate]\r\nFROM [OutboxMessages] AS [o]\r\nWHERE ([o].[ExpireDate] IS NULL) OR [o].[ExpireDate] >= GETDATE()","EventId":{"Id":20101,"Name":"Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted"},"SourceContext":"Microsoft.EntityFrameworkCore.Database.Command"}}
{"@timestamp":"2023-05-15T09:59:25.0261566+03:30","level":"Information","messageTemplate":"Executed DbCommand ({elapsed}ms) [Parameters=[{parameters}], CommandType='{commandType}', CommandTimeout='{commandTimeout}']{newLine}{commandText}","message":"Executed DbCommand (\"0\"ms) [Parameters=[\"\"], CommandType='Text', CommandTimeout='30']\"\r\n\"\"SELECT [o].[Id], [o].[EventDate], [o].[EventPayload], [o].[EventType], [o].[ExpireDate]\r\nFROM [OutboxMessages] AS [o]\r\nWHERE ([o].[ExpireDate] IS NULL) OR [o].[ExpireDate] >= GETDATE()\"","fields":{"elapsed":"0","parameters":"","commandType":"Text","commandTimeout":30,"newLine":"\r\n","commandText":"SELECT [o].[Id], [o].[EventDate], [o].[EventPayload], [o].[EventType], [o].[ExpireDate]\r\nFROM [OutboxMessages] AS [o]\r\nWHERE ([o].[ExpireDate] IS NULL) OR [o].[ExpireDate] >= GETDATE()","EventId":{"Id":20101,"Name":"Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted"},"SourceContext":"Microsoft.EntityFrameworkCore.Database.Command"}}
{"@timestamp":"2023-05-15T09:59:30.0404287+03:30","level":"Information","messageTemplate":"Executed DbCommand ({elapsed}ms) [Parameters=[{parameters}], CommandType='{commandType}', CommandTimeout='{commandTimeout}']{newLine}{commandText}","message":"Executed DbCommand (\"1\"ms) [Parameters=[\"\"], CommandType='Text', CommandTimeout='30']\"\r\n\"\"SELECT [o].[Id], [o].[EventDate], [o].[EventPayload], [o].[EventType], [o].[ExpireDate]\r\nFROM [OutboxMessages] AS [o]\r\nWHERE ([o].[ExpireDate] IS NULL) OR [o].[ExpireDate] >= GETDATE()\"","fields":{"elapsed":"1","parameters":"","commandType":"Text","commandTimeout":30,"newLine":"\r\n","commandText":"SELECT [o].[Id], [o].[EventDate], [o].[EventPayload], [o].[EventType], [o].[ExpireDate]\r\nFROM [OutboxMessages] AS [o]\r\nWHERE ([o].[ExpireDate] IS NULL) OR [o].[ExpireDate] >= GETDATE()","EventId":{"Id":20101,"Name":"Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted"},"SourceContext":"Microsoft.EntityFrameworkCore.Database.Command"}}
{"@timestamp":"2023-05-15T09:59:35.0562919+03:30","level":"Information","messageTemplate":"Executed DbCommand ({elapsed}ms) [Parameters=[{parameters}], CommandType='{commandType}', CommandTimeout='{commandTimeout}']{newLine}{commandText}","message":"Executed DbCommand (\"1\"ms) [Parameters=[\"\"], CommandType='Text', CommandTimeout='30']\"\r\n\"\"SELECT [o].[Id], [o].[EventDate], [o].[EventPayload], [o].[EventType], [o].[ExpireDate]\r\nFROM [OutboxMessages] AS [o]\r\nWHERE ([o].[ExpireDate] IS NULL) OR [o].[ExpireDate] >= GETDATE()\"","fields":{"elapsed":"1","parameters":"","commandType":"Text","commandTimeout":30,"newLine":"\r\n","commandText":"SELECT [o].[Id], [o].[EventDate], [o].[EventPayload], [o].[EventType], [o].[ExpireDate]\r\nFROM [OutboxMessages] AS [o]\r\nWHERE ([o].[ExpireDate] IS NULL) OR [o].[ExpireDate] >= GETDATE()","EventId":{"Id":20101,"Name":"Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted"},"SourceContext":"Microsoft.EntityFrameworkCore.Database.Command"}}
{"@timestamp":"2023-05-15T09:59:40.0596577+03:30","level":"Information","messageTemplate":"Executed DbCommand ({elapsed}ms) [Parameters=[{parameters}], CommandType='{commandType}', CommandTimeout='{commandTimeout}']{newLine}{commandText}","message":"Executed DbCommand (\"0\"ms) [Parameters=[\"\"], CommandType='Text', CommandTimeout='30']\"\r\n\"\"SELECT [o].[Id], [o].[EventDate], [o].[EventPayload], [o].[EventType], [o].[ExpireDate]\r\nFROM [OutboxMessages] AS [o]\r\nWHERE ([o].[ExpireDate] IS NULL) OR [o].[ExpireDate] >= GETDATE()\"","fields":{"elapsed":"0","parameters":"","commandType":"Text","commandTimeout":30,"newLine":"\r\n","commandText":"SELECT [o].[Id], [o].[EventDate], [o].[EventPayload], [o].[EventType], [o].[ExpireDate]\r\nFROM [OutboxMessages] AS [o]\r\nWHERE ([o].[ExpireDate] IS NULL) OR [o].[ExpireDate] >= GETDATE()","EventId":{"Id":20101,"Name":"Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted"},"SourceContext":"Microsoft.EntityFrameworkCore.Database.Command"}}
{"@timestamp":"2023-05-15T09:59:45.0618194+03:30","level":"Information","messageTemplate":"Executed DbCommand ({elapsed}ms) [Parameters=[{parameters}], CommandType='{commandType}', CommandTimeout='{commandTimeout}']{newLine}{commandText}","message":"Executed DbCommand (\"0\"ms) [Parameters=[\"\"], CommandType='Text', CommandTimeout='30']\"\r\n\"\"SELECT [o].[Id], [o].[EventDate], [o].[EventPayload], [o].[EventType], [o].[ExpireDate]\r\nFROM [OutboxMessages] AS [o]\r\nWHERE ([o].[ExpireDate] IS NULL) OR [o].[ExpireDate] >= GETDATE()\"","fields":{"elapsed":"0","parameters":"","commandType":"Text","commandTimeout":30,"newLine":"\r\n","commandText":"SELECT [o].[Id], [o].[EventDate], [o].[EventPayload], [o].[EventType], [o].[ExpireDate]\r\nFROM [OutboxMessages] AS [o]\r\nWHERE ([o].[ExpireDate] IS NULL) OR [o].[ExpireDate] >= GETDATE()","EventId":{"Id":20101,"Name":"Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted"},"SourceContext":"Microsoft.EntityFrameworkCore.Database.Command"}}
{"@timestamp":"2023-05-15T09:59:50.0799963+03:30","level":"Information","messageTemplate":"Executed DbCommand ({elapsed}ms) [Parameters=[{parameters}], CommandType='{commandType}', CommandTimeout='{commandTimeout}']{newLine}{commandText}","message":"Executed DbCommand (\"3\"ms) [Parameters=[\"\"], CommandType='Text', CommandTimeout='30']\"\r\n\"\"SELECT [o].[Id], [o].[EventDate], [o].[EventPayload], [o].[EventType], [o].[ExpireDate]\r\nFROM [OutboxMessages] AS [o]\r\nWHERE ([o].[ExpireDate] IS NULL) OR [o].[ExpireDate] >= GETDATE()\"","fields":{"elapsed":"3","parameters":"","commandType":"Text","commandTimeout":30,"newLine":"\r\n","commandText":"SELECT [o].[Id], [o].[EventDate], [o].[EventPayload], [o].[EventType], [o].[ExpireDate]\r\nFROM [OutboxMessages] AS [o]\r\nWHERE ([o].[ExpireDate] IS NULL) OR [o].[ExpireDate] >= GETDATE()","EventId":{"Id":20101,"Name":"Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted"},"SourceContext":"Microsoft.EntityFrameworkCore.Database.Command"}}
{"@timestamp":"2023-05-15T09:59:55.0913095+03:30","level":"Information","messageTemplate":"Executed DbCommand ({elapsed}ms) [Parameters=[{parameters}], CommandType='{commandType}', CommandTimeout='{commandTimeout}']{newLine}{commandText}","message":"Executed DbCommand (\"0\"ms) [Parameters=[\"\"], CommandType='Text', CommandTimeout='30']\"\r\n\"\"SELECT [o].[Id], [o].[EventDate], [o].[EventPayload], [o].[EventType], [o].[ExpireDate]\r\nFROM [OutboxMessages] AS [o]\r\nWHERE ([o].[ExpireDate] IS NULL) OR [o].[ExpireDate] >= GETDATE()\"","fields":{"elapsed":"0","parameters":"","commandType":"Text","commandTimeout":30,"newLine":"\r\n","commandText":"SELECT [o].[Id], [o].[EventDate], [o].[EventPayload], [o].[EventType], [o].[ExpireDate]\r\nFROM [OutboxMessages] AS [o]\r\nWHERE ([o].[ExpireDate] IS NULL) OR [o].[ExpireDate] >= GETDATE()","EventId":{"Id":20101,"Name":"Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted"},"SourceContext":"Microsoft.EntityFrameworkCore.Database.Command"}}
{"@timestamp":"2023-05-15T10:00:00.1003658+03:30","level":"Information","messageTemplate":"Executed DbCommand ({elapsed}ms) [Parameters=[{parameters}], CommandType='{commandType}', CommandTimeout='{commandTimeout}']{newLine}{commandText}","message":"Executed DbCommand (\"0\"ms) [Parameters=[\"\"], CommandType='Text', CommandTimeout='30']\"\r\n\"\"SELECT [o].[Id], [o].[EventDate], [o].[EventPayload], [o].[EventType], [o].[ExpireDate]\r\nFROM [OutboxMessages] AS [o]\r\nWHERE ([o].[ExpireDate] IS NULL) OR [o].[ExpireDate] >= GETDATE()\"","fields":{"elapsed":"0","parameters":"","commandType":"Text","commandTimeout":30,"newLine":"\r\n","commandText":"SELECT [o].[Id], [o].[EventDate], [o].[EventPayload], [o].[EventType], [o].[ExpireDate]\r\nFROM [OutboxMessages] AS [o]\r\nWHERE ([o].[ExpireDate] IS NULL) OR [o].[ExpireDate] >= GETDATE()","EventId":{"Id":20101,"Name":"Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted"},"SourceContext":"Microsoft.EntityFrameworkCore.Database.Command"}}
{"@timestamp":"2023-05-15T10:00:05.1075438+03:30","level":"Information","messageTemplate":"Executed DbCommand ({elapsed}ms) [Parameters=[{parameters}], CommandType='{commandType}', CommandTimeout='{commandTimeout}']{newLine}{commandText}","message":"Executed DbCommand (\"0\"ms) [Parameters=[\"\"], CommandType='Text', CommandTimeout='30']\"\r\n\"\"SELECT [o].[Id], [o].[EventDate], [o].[EventPayload], [o].[EventType], [o].[ExpireDate]\r\nFROM [OutboxMessages] AS [o]\r\nWHERE ([o].[ExpireDate] IS NULL) OR [o].[ExpireDate] >= GETDATE()\"","fields":{"elapsed":"0","parameters":"","commandType":"Text","commandTimeout":30,"newLine":"\r\n","commandText":"SELECT [o].[Id], [o].[EventDate], [o].[EventPayload], [o].[EventType], [o].[ExpireDate]\r\nFROM [OutboxMessages] AS [o]\r\nWHERE ([o].[ExpireDate] IS NULL) OR [o].[ExpireDate] >= GETDATE()","EventId":{"Id":20101,"Name":"Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted"},"SourceContext":"Microsoft.EntityFrameworkCore.Database.Command"}}
{"@timestamp":"2023-05-15T10:00:10.1218625+03:30","level":"Information","messageTemplate":"Executed DbCommand ({elapsed}ms) [Parameters=[{parameters}], CommandType='{commandType}', CommandTimeout='{commandTimeout}']{newLine}{commandText}","message":"Executed DbCommand (\"0\"ms) [Parameters=[\"\"], CommandType='Text', CommandTimeout='30']\"\r\n\"\"SELECT [o].[Id], [o].[EventDate], [o].[EventPayload], [o].[EventType], [o].[ExpireDate]\r\nFROM [OutboxMessages] AS [o]\r\nWHERE ([o].[ExpireDate] IS NULL) OR [o].[ExpireDate] >= GETDATE()\"","fields":{"elapsed":"0","parameters":"","commandType":"Text","commandTimeout":30,"newLine":"\r\n","commandText":"SELECT [o].[Id], [o].[EventDate], [o].[EventPayload], [o].[EventType], [o].[ExpireDate]\r\nFROM [OutboxMessages] AS [o]\r\nWHERE ([o].[ExpireDate] IS NULL) OR [o].[ExpireDate] >= GETDATE()","EventId":{"Id":20101,"Name":"Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted"},"SourceContext":"Microsoft.EntityFrameworkCore.Database.Command"}}
{"@timestamp":"2023-05-15T10:00:15.1270830+03:30","level":"Information","messageTemplate":"Executed DbCommand ({elapsed}ms) [Parameters=[{parameters}], CommandType='{commandType}', CommandTimeout='{commandTimeout}']{newLine}{commandText}","message":"Executed DbCommand (\"0\"ms) [Parameters=[\"\"], CommandType='Text', CommandTimeout='30']\"\r\n\"\"SELECT [o].[Id], [o].[EventDate], [o].[EventPayload], [o].[EventType], [o].[ExpireDate]\r\nFROM [OutboxMessages] AS [o]\r\nWHERE ([o].[ExpireDate] IS NULL) OR [o].[ExpireDate] >= GETDATE()\"","fields":{"elapsed":"0","parameters":"","commandType":"Text","commandTimeout":30,"newLine":"\r\n","commandText":"SELECT [o].[Id], [o].[EventDate], [o].[EventPayload], [o].[EventType], [o].[ExpireDate]\r\nFROM [OutboxMessages] AS [o]\r\nWHERE ([o].[ExpireDate] IS NULL) OR [o].[ExpireDate] >= GETDATE()","EventId":{"Id":20101,"Name":"Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted"},"SourceContext":"Microsoft.EntityFrameworkCore.Database.Command"}}
{"@timestamp":"2023-05-15T10:00:20.1307217+03:30","level":"Information","messageTemplate":"Executed DbCommand ({elapsed}ms) [Parameters=[{parameters}], CommandType='{commandType}', CommandTimeout='{commandTimeout}']{newLine}{commandText}","message":"Executed DbCommand (\"0\"ms) [Parameters=[\"\"], CommandType='Text', CommandTimeout='30']\"\r\n\"\"SELECT [o].[Id], [o].[EventDate], [o].[EventPayload], [o].[EventType], [o].[ExpireDate]\r\nFROM [OutboxMessages] AS [o]\r\nWHERE ([o].[ExpireDate] IS NULL) OR [o].[ExpireDate] >= GETDATE()\"","fields":{"elapsed":"0","parameters":"","commandType":"Text","commandTimeout":30,"newLine":"\r\n","commandText":"SELECT [o].[Id], [o].[EventDate], [o].[EventPayload], [o].[EventType], [o].[ExpireDate]\r\nFROM [OutboxMessages] AS [o]\r\nWHERE ([o].[ExpireDate] IS NULL) OR [o].[ExpireDate] >= GETDATE()","EventId":{"Id":20101,"Name":"Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted"},"SourceContext":"Microsoft.EntityFrameworkCore.Database.Command"}}
{"@timestamp":"2023-05-15T10:00:25.1463713+03:30","level":"Information","messageTemplate":"Executed DbCommand ({elapsed}ms) [Parameters=[{parameters}], CommandType='{commandType}', CommandTimeout='{commandTimeout}']{newLine}{commandText}","message":"Executed DbCommand (\"0\"ms) [Parameters=[\"\"], CommandType='Text', CommandTimeout='30']\"\r\n\"\"SELECT [o].[Id], [o].[EventDate], [o].[EventPayload], [o].[EventType], [o].[ExpireDate]\r\nFROM [OutboxMessages] AS [o]\r\nWHERE ([o].[ExpireDate] IS NULL) OR [o].[ExpireDate] >= GETDATE()\"","fields":{"elapsed":"0","parameters":"","commandType":"Text","commandTimeout":30,"newLine":"\r\n","commandText":"SELECT [o].[Id], [o].[EventDate], [o].[EventPayload], [o].[EventType], [o].[ExpireDate]\r\nFROM [OutboxMessages] AS [o]\r\nWHERE ([o].[ExpireDate] IS NULL) OR [o].[ExpireDate] >= GETDATE()","EventId":{"Id":20101,"Name":"Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted"},"SourceContext":"Microsoft.EntityFrameworkCore.Database.Command"}}
{"@timestamp":"2023-05-15T10:00:30.1608610+03:30","level":"Information","messageTemplate":"Executed DbCommand ({elapsed}ms) [Parameters=[{parameters}], CommandType='{commandType}', CommandTimeout='{commandTimeout}']{newLine}{commandText}","message":"Executed DbCommand (\"0\"ms) [Parameters=[\"\"], CommandType='Text', CommandTimeout='30']\"\r\n\"\"SELECT [o].[Id], [o].[EventDate], [o].[EventPayload], [o].[EventType], [o].[ExpireDate]\r\nFROM [OutboxMessages] AS [o]\r\nWHERE ([o].[ExpireDate] IS NULL) OR [o].[ExpireDate] >= GETDATE()\"","fields":{"elapsed":"0","parameters":"","commandType":"Text","commandTimeout":30,"newLine":"\r\n","commandText":"SELECT [o].[Id], [o].[EventDate], [o].[EventPayload], [o].[EventType], [o].[ExpireDate]\r\nFROM [OutboxMessages] AS [o]\r\nWHERE ([o].[ExpireDate] IS NULL) OR [o].[ExpireDate] >= GETDATE()","EventId":{"Id":20101,"Name":"Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted"},"SourceContext":"Microsoft.EntityFrameworkCore.Database.Command"}}
{"@timestamp":"2023-05-15T10:00:35.1683462+03:30","level":"Information","messageTemplate":"Executed DbCommand ({elapsed}ms) [Parameters=[{parameters}], CommandType='{commandType}', CommandTimeout='{commandTimeout}']{newLine}{commandText}","message":"Executed DbCommand (\"1\"ms) [Parameters=[\"\"], CommandType='Text', CommandTimeout='30']\"\r\n\"\"SELECT [o].[Id], [o].[EventDate], [o].[EventPayload], [o].[EventType], [o].[ExpireDate]\r\nFROM [OutboxMessages] AS [o]\r\nWHERE ([o].[ExpireDate] IS NULL) OR [o].[ExpireDate] >= GETDATE()\"","fields":{"elapsed":"1","parameters":"","commandType":"Text","commandTimeout":30,"newLine":"\r\n","commandText":"SELECT [o].[Id], [o].[EventDate], [o].[EventPayload], [o].[EventType], [o].[ExpireDate]\r\nFROM [OutboxMessages] AS [o]\r\nWHERE ([o].[ExpireDate] IS NULL) OR [o].[ExpireDate] >= GETDATE()","EventId":{"Id":20101,"Name":"Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted"},"SourceContext":"Microsoft.EntityFrameworkCore.Database.Command"}}
{"@timestamp":"2023-05-15T10:00:40.1811643+03:30","level":"Information","messageTemplate":"Executed DbCommand ({elapsed}ms) [Parameters=[{parameters}], CommandType='{commandType}', CommandTimeout='{commandTimeout}']{newLine}{commandText}","message":"Executed DbCommand (\"1\"ms) [Parameters=[\"\"], CommandType='Text', CommandTimeout='30']\"\r\n\"\"SELECT [o].[Id], [o].[EventDate], [o].[EventPayload], [o].[EventType], [o].[ExpireDate]\r\nFROM [OutboxMessages] AS [o]\r\nWHERE ([o].[ExpireDate] IS NULL) OR [o].[ExpireDate] >= GETDATE()\"","fields":{"elapsed":"1","parameters":"","commandType":"Text","commandTimeout":30,"newLine":"\r\n","commandText":"SELECT [o].[Id], [o].[EventDate], [o].[EventPayload], [o].[EventType], [o].[ExpireDate]\r\nFROM [OutboxMessages] AS [o]\r\nWHERE ([o].[ExpireDate] IS NULL) OR [o].[ExpireDate] >= GETDATE()","EventId":{"Id":20101,"Name":"Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted"},"SourceContext":"Microsoft.EntityFrameworkCore.Database.Command"}}
{"@timestamp":"2023-05-15T10:00:45.1870814+03:30","level":"Information","messageTemplate":"Executed DbCommand ({elapsed}ms) [Parameters=[{parameters}], CommandType='{commandType}', CommandTimeout='{commandTimeout}']{newLine}{commandText}","message":"Executed DbCommand (\"0\"ms) [Parameters=[\"\"], CommandType='Text', CommandTimeout='30']\"\r\n\"\"SELECT [o].[Id], [o].[EventDate], [o].[EventPayload], [o].[EventType], [o].[ExpireDate]\r\nFROM [OutboxMessages] AS [o]\r\nWHERE ([o].[ExpireDate] IS NULL) OR [o].[ExpireDate] >= GETDATE()\"","fields":{"elapsed":"0","parameters":"","commandType":"Text","commandTimeout":30,"newLine":"\r\n","commandText":"SELECT [o].[Id], [o].[EventDate], [o].[EventPayload], [o].[EventType], [o].[ExpireDate]\r\nFROM [OutboxMessages] AS [o]\r\nWHERE ([o].[ExpireDate] IS NULL) OR [o].[ExpireDate] >= GETDATE()","EventId":{"Id":20101,"Name":"Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted"},"SourceContext":"Microsoft.EntityFrameworkCore.Database.Command"}}
{"@timestamp":"2023-05-15T10:00:50.1883632+03:30","level":"Information","messageTemplate":"Executed DbCommand ({elapsed}ms) [Parameters=[{parameters}], CommandType='{commandType}', CommandTimeout='{commandTimeout}']{newLine}{commandText}","message":"Executed DbCommand (\"0\"ms) [Parameters=[\"\"], CommandType='Text', CommandTimeout='30']\"\r\n\"\"SELECT [o].[Id], [o].[EventDate], [o].[EventPayload], [o].[EventType], [o].[ExpireDate]\r\nFROM [OutboxMessages] AS [o]\r\nWHERE ([o].[ExpireDate] IS NULL) OR [o].[ExpireDate] >= GETDATE()\"","fields":{"elapsed":"0","parameters":"","commandType":"Text","commandTimeout":30,"newLine":"\r\n","commandText":"SELECT [o].[Id], [o].[EventDate], [o].[EventPayload], [o].[EventType], [o].[ExpireDate]\r\nFROM [OutboxMessages] AS [o]\r\nWHERE ([o].[ExpireDate] IS NULL) OR [o].[ExpireDate] >= GETDATE()","EventId":{"Id":20101,"Name":"Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted"},"SourceContext":"Microsoft.EntityFrameworkCore.Database.Command"}}
{"@timestamp":"2023-05-15T10:00:55.2046850+03:30","level":"Information","messageTemplate":"Executed DbCommand ({elapsed}ms) [Parameters=[{parameters}], CommandType='{commandType}', CommandTimeout='{commandTimeout}']{newLine}{commandText}","message":"Executed DbCommand (\"0\"ms) [Parameters=[\"\"], CommandType='Text', CommandTimeout='30']\"\r\n\"\"SELECT [o].[Id], [o].[EventDate], [o].[EventPayload], [o].[EventType], [o].[ExpireDate]\r\nFROM [OutboxMessages] AS [o]\r\nWHERE ([o].[ExpireDate] IS NULL) OR [o].[ExpireDate] >= GETDATE()\"","fields":{"elapsed":"0","parameters":"","commandType":"Text","commandTimeout":30,"newLine":"\r\n","commandText":"SELECT [o].[Id], [o].[EventDate], [o].[EventPayload], [o].[EventType], [o].[ExpireDate]\r\nFROM [OutboxMessages] AS [o]\r\nWHERE ([o].[ExpireDate] IS NULL) OR [o].[ExpireDate] >= GETDATE()","EventId":{"Id":20101,"Name":"Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted"},"SourceContext":"Microsoft.EntityFrameworkCore.Database.Command"}}
{"@timestamp":"2023-05-15T10:01:00.2141632+03:30","level":"Information","messageTemplate":"Executed DbCommand ({elapsed}ms) [Parameters=[{parameters}], CommandType='{commandType}', CommandTimeout='{commandTimeout}']{newLine}{commandText}","message":"Executed DbCommand (\"0\"ms) [Parameters=[\"\"], CommandType='Text', CommandTimeout='30']\"\r\n\"\"SELECT [o].[Id], [o].[EventDate], [o].[EventPayload], [o].[EventType], [o].[ExpireDate]\r\nFROM [OutboxMessages] AS [o]\r\nWHERE ([o].[ExpireDate] IS NULL) OR [o].[ExpireDate] >= GETDATE()\"","fields":{"elapsed":"0","parameters":"","commandType":"Text","commandTimeout":30,"newLine":"\r\n","commandText":"SELECT [o].[Id], [o].[EventDate], [o].[EventPayload], [o].[EventType], [o].[ExpireDate]\r\nFROM [OutboxMessages] AS [o]\r\nWHERE ([o].[ExpireDate] IS NULL) OR [o].[ExpireDate] >= GETDATE()","EventId":{"Id":20101,"Name":"Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted"},"SourceContext":"Microsoft.EntityFrameworkCore.Database.Command"}}
{"@timestamp":"2023-05-15T10:01:05.2254865+03:30","level":"Information","messageTemplate":"Executed DbCommand ({elapsed}ms) [Parameters=[{parameters}], CommandType='{commandType}', CommandTimeout='{commandTimeout}']{newLine}{commandText}","message":"Executed DbCommand (\"0\"ms) [Parameters=[\"\"], CommandType='Text', CommandTimeout='30']\"\r\n\"\"SELECT [o].[Id], [o].[EventDate], [o].[EventPayload], [o].[EventType], [o].[ExpireDate]\r\nFROM [OutboxMessages] AS [o]\r\nWHERE ([o].[ExpireDate] IS NULL) OR [o].[ExpireDate] >= GETDATE()\"","fields":{"elapsed":"0","parameters":"","commandType":"Text","commandTimeout":30,"newLine":"\r\n","commandText":"SELECT [o].[Id], [o].[EventDate], [o].[EventPayload], [o].[EventType], [o].[ExpireDate]\r\nFROM [OutboxMessages] AS [o]\r\nWHERE ([o].[ExpireDate] IS NULL) OR [o].[ExpireDate] >= GETDATE()","EventId":{"Id":20101,"Name":"Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted"},"SourceContext":"Microsoft.EntityFrameworkCore.Database.Command"}}
{"@timestamp":"2023-05-15T10:01:10.2366130+03:30","level":"Information","messageTemplate":"Executed DbCommand ({elapsed}ms) [Parameters=[{parameters}], CommandType='{commandType}', CommandTimeout='{commandTimeout}']{newLine}{commandText}","message":"Executed DbCommand (\"0\"ms) [Parameters=[\"\"], CommandType='Text', CommandTimeout='30']\"\r\n\"\"SELECT [o].[Id], [o].[EventDate], [o].[EventPayload], [o].[EventType], [o].[ExpireDate]\r\nFROM [OutboxMessages] AS [o]\r\nWHERE ([o].[ExpireDate] IS NULL) OR [o].[ExpireDate] >= GETDATE()\"","fields":{"elapsed":"0","parameters":"","commandType":"Text","commandTimeout":30,"newLine":"\r\n","commandText":"SELECT [o].[Id], [o].[EventDate], [o].[EventPayload], [o].[EventType], [o].[ExpireDate]\r\nFROM [OutboxMessages] AS [o]\r\nWHERE ([o].[ExpireDate] IS NULL) OR [o].[ExpireDate] >= GETDATE()","EventId":{"Id":20101,"Name":"Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted"},"SourceContext":"Microsoft.EntityFrameworkCore.Database.Command"}}
{"@timestamp":"2023-05-15T10:01:15.2418807+03:30","level":"Information","messageTemplate":"Executed DbCommand ({elapsed}ms) [Parameters=[{parameters}], CommandType='{commandType}', CommandTimeout='{commandTimeout}']{newLine}{commandText}","message":"Executed DbCommand (\"0\"ms) [Parameters=[\"\"], CommandType='Text', CommandTimeout='30']\"\r\n\"\"SELECT [o].[Id], [o].[EventDate], [o].[EventPayload], [o].[EventType], [o].[ExpireDate]\r\nFROM [OutboxMessages] AS [o]\r\nWHERE ([o].[ExpireDate] IS NULL) OR [o].[ExpireDate] >= GETDATE()\"","fields":{"elapsed":"0","parameters":"","commandType":"Text","commandTimeout":30,"newLine":"\r\n","commandText":"SELECT [o].[Id], [o].[EventDate], [o].[EventPayload], [o].[EventType], [o].[ExpireDate]\r\nFROM [OutboxMessages] AS [o]\r\nWHERE ([o].[ExpireDate] IS NULL) OR [o].[ExpireDate] >= GETDATE()","EventId":{"Id":20101,"Name":"Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted"},"SourceContext":"Microsoft.EntityFrameworkCore.Database.Command"}}
{"@timestamp":"2023-05-15T10:01:20.2472014+03:30","level":"Information","messageTemplate":"Executed DbCommand ({elapsed}ms) [Parameters=[{parameters}], CommandType='{commandType}', CommandTimeout='{commandTimeout}']{newLine}{commandText}","message":"Executed DbCommand (\"0\"ms) [Parameters=[\"\"], CommandType='Text', CommandTimeout='30']\"\r\n\"\"SELECT [o].[Id], [o].[EventDate], [o].[EventPayload], [o].[EventType], [o].[ExpireDate]\r\nFROM [OutboxMessages] AS [o]\r\nWHERE ([o].[ExpireDate] IS NULL) OR [o].[ExpireDate] >= GETDATE()\"","fields":{"elapsed":"0","parameters":"","commandType":"Text","commandTimeout":30,"newLine":"\r\n","commandText":"SELECT [o].[Id], [o].[EventDate], [o].[EventPayload], [o].[EventType], [o].[ExpireDate]\r\nFROM [OutboxMessages] AS [o]\r\nWHERE ([o].[ExpireDate] IS NULL) OR [o].[ExpireDate] >= GETDATE()","EventId":{"Id":20101,"Name":"Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted"},"SourceContext":"Microsoft.EntityFrameworkCore.Database.Command"}}
{"@timestamp":"2023-05-15T10:01:25.2570538+03:30","level":"Information","messageTemplate":"Executed DbCommand ({elapsed}ms) [Parameters=[{parameters}], CommandType='{commandType}', CommandTimeout='{commandTimeout}']{newLine}{commandText}","message":"Executed DbCommand (\"0\"ms) [Parameters=[\"\"], CommandType='Text', CommandTimeout='30']\"\r\n\"\"SELECT [o].[Id], [o].[EventDate], [o].[EventPayload], [o].[EventType], [o].[ExpireDate]\r\nFROM [OutboxMessages] AS [o]\r\nWHERE ([o].[ExpireDate] IS NULL) OR [o].[ExpireDate] >= GETDATE()\"","fields":{"elapsed":"0","parameters":"","commandType":"Text","commandTimeout":30,"newLine":"\r\n","commandText":"SELECT [o].[Id], [o].[EventDate], [o].[EventPayload], [o].[EventType], [o].[ExpireDate]\r\nFROM [OutboxMessages] AS [o]\r\nWHERE ([o].[ExpireDate] IS NULL) OR [o].[ExpireDate] >= GETDATE()","EventId":{"Id":20101,"Name":"Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted"},"SourceContext":"Microsoft.EntityFrameworkCore.Database.Command"}}
{"@timestamp":"2023-05-15T10:01:30.2579082+03:30","level":"Information","messageTemplate":"Executed DbCommand ({elapsed}ms) [Parameters=[{parameters}], CommandType='{commandType}', CommandTimeout='{commandTimeout}']{newLine}{commandText}","message":"Executed DbCommand (\"0\"ms) [Parameters=[\"\"], CommandType='Text', CommandTimeout='30']\"\r\n\"\"SELECT [o].[Id], [o].[EventDate], [o].[EventPayload], [o].[EventType], [o].[ExpireDate]\r\nFROM [OutboxMessages] AS [o]\r\nWHERE ([o].[ExpireDate] IS NULL) OR [o].[ExpireDate] >= GETDATE()\"","fields":{"elapsed":"0","parameters":"","commandType":"Text","commandTimeout":30,"newLine":"\r\n","commandText":"SELECT [o].[Id], [o].[EventDate], [o].[EventPayload], [o].[EventType], [o].[ExpireDate]\r\nFROM [OutboxMessages] AS [o]\r\nWHERE ([o].[ExpireDate] IS NULL) OR [o].[ExpireDate] >= GETDATE()","EventId":{"Id":20101,"Name":"Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted"},"SourceContext":"Microsoft.EntityFrameworkCore.Database.Command"}}
{"@timestamp":"2023-05-15T10:01:35.2665606+03:30","level":"Information","messageTemplate":"Executed DbCommand ({elapsed}ms) [Parameters=[{parameters}], CommandType='{commandType}', CommandTimeout='{commandTimeout}']{newLine}{commandText}","message":"Executed DbCommand (\"0\"ms) [Parameters=[\"\"], CommandType='Text', CommandTimeout='30']\"\r\n\"\"SELECT [o].[Id], [o].[EventDate], [o].[EventPayload], [o].[EventType], [o].[ExpireDate]\r\nFROM [OutboxMessages] AS [o]\r\nWHERE ([o].[ExpireDate] IS NULL) OR [o].[ExpireDate] >= GETDATE()\"","fields":{"elapsed":"0","parameters":"","commandType":"Text","commandTimeout":30,"newLine":"\r\n","commandText":"SELECT [o].[Id], [o].[EventDate], [o].[EventPayload], [o].[EventType], [o].[ExpireDate]\r\nFROM [OutboxMessages] AS [o]\r\nWHERE ([o].[ExpireDate] IS NULL) OR [o].[ExpireDate] >= GETDATE()","EventId":{"Id":20101,"Name":"Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted"},"SourceContext":"Microsoft.EntityFrameworkCore.Database.Command"}}
{"@timestamp":"2023-05-15T10:01:40.2762207+03:30","level":"Information","messageTemplate":"Executed DbCommand ({elapsed}ms) [Parameters=[{parameters}], CommandType='{commandType}', CommandTimeout='{commandTimeout}']{newLine}{commandText}","message":"Executed DbCommand (\"1\"ms) [Parameters=[\"\"], CommandType='Text', CommandTimeout='30']\"\r\n\"\"SELECT [o].[Id], [o].[EventDate], [o].[EventPayload], [o].[EventType], [o].[ExpireDate]\r\nFROM [OutboxMessages] AS [o]\r\nWHERE ([o].[ExpireDate] IS NULL) OR [o].[ExpireDate] >= GETDATE()\"","fields":{"elapsed":"1","parameters":"","commandType":"Text","commandTimeout":30,"newLine":"\r\n","commandText":"SELECT [o].[Id], [o].[EventDate], [o].[EventPayload], [o].[EventType], [o].[ExpireDate]\r\nFROM [OutboxMessages] AS [o]\r\nWHERE ([o].[ExpireDate] IS NULL) OR [o].[ExpireDate] >= GETDATE()","EventId":{"Id":20101,"Name":"Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted"},"SourceContext":"Microsoft.EntityFrameworkCore.Database.Command"}}
{"@timestamp":"2023-05-15T10:01:45.2801555+03:30","level":"Information","messageTemplate":"Executed DbCommand ({elapsed}ms) [Parameters=[{parameters}], CommandType='{commandType}', CommandTimeout='{commandTimeout}']{newLine}{commandText}","message":"Executed DbCommand (\"1\"ms) [Parameters=[\"\"], CommandType='Text', CommandTimeout='30']\"\r\n\"\"SELECT [o].[Id], [o].[EventDate], [o].[EventPayload], [o].[EventType], [o].[ExpireDate]\r\nFROM [OutboxMessages] AS [o]\r\nWHERE ([o].[ExpireDate] IS NULL) OR [o].[ExpireDate] >= GETDATE()\"","fields":{"elapsed":"1","parameters":"","commandType":"Text","commandTimeout":30,"newLine":"\r\n","commandText":"SELECT [o].[Id], [o].[EventDate], [o].[EventPayload], [o].[EventType], [o].[ExpireDate]\r\nFROM [OutboxMessages] AS [o]\r\nWHERE ([o].[ExpireDate] IS NULL) OR [o].[ExpireDate] >= GETDATE()","EventId":{"Id":20101,"Name":"Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted"},"SourceContext":"Microsoft.EntityFrameworkCore.Database.Command"}}
{"@timestamp":"2023-05-15T10:01:50.2824665+03:30","level":"Information","messageTemplate":"Executed DbCommand ({elapsed}ms) [Parameters=[{parameters}], CommandType='{commandType}', CommandTimeout='{commandTimeout}']{newLine}{commandText}","message":"Executed DbCommand (\"0\"ms) [Parameters=[\"\"], CommandType='Text', CommandTimeout='30']\"\r\n\"\"SELECT [o].[Id], [o].[EventDate], [o].[EventPayload], [o].[EventType], [o].[ExpireDate]\r\nFROM [OutboxMessages] AS [o]\r\nWHERE ([o].[ExpireDate] IS NULL) OR [o].[ExpireDate] >= GETDATE()\"","fields":{"elapsed":"0","parameters":"","commandType":"Text","commandTimeout":30,"newLine":"\r\n","commandText":"SELECT [o].[Id], [o].[EventDate], [o].[EventPayload], [o].[EventType], [o].[ExpireDate]\r\nFROM [OutboxMessages] AS [o]\r\nWHERE ([o].[ExpireDate] IS NULL) OR [o].[ExpireDate] >= GETDATE()","EventId":{"Id":20101,"Name":"Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted"},"SourceContext":"Microsoft.EntityFrameworkCore.Database.Command"}}
{"@timestamp":"2023-05-15T10:01:55.2993121+03:30","level":"Information","messageTemplate":"Executed DbCommand ({elapsed}ms) [Parameters=[{parameters}], CommandType='{commandType}', CommandTimeout='{commandTimeout}']{newLine}{commandText}","message":"Executed DbCommand (\"0\"ms) [Parameters=[\"\"], CommandType='Text', CommandTimeout='30']\"\r\n\"\"SELECT [o].[Id], [o].[EventDate], [o].[EventPayload], [o].[EventType], [o].[ExpireDate]\r\nFROM [OutboxMessages] AS [o]\r\nWHERE ([o].[ExpireDate] IS NULL) OR [o].[ExpireDate] >= GETDATE()\"","fields":{"elapsed":"0","parameters":"","commandType":"Text","commandTimeout":30,"newLine":"\r\n","commandText":"SELECT [o].[Id], [o].[EventDate], [o].[EventPayload], [o].[EventType], [o].[ExpireDate]\r\nFROM [OutboxMessages] AS [o]\r\nWHERE ([o].[ExpireDate] IS NULL) OR [o].[ExpireDate] >= GETDATE()","EventId":{"Id":20101,"Name":"Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted"},"SourceContext":"Microsoft.EntityFrameworkCore.Database.Command"}}
{"@timestamp":"2023-05-15T10:02:00.3077117+03:30","level":"Information","messageTemplate":"Executed DbCommand ({elapsed}ms) [Parameters=[{parameters}], CommandType='{commandType}', CommandTimeout='{commandTimeout}']{newLine}{commandText}","message":"Executed DbCommand (\"0\"ms) [Parameters=[\"\"], CommandType='Text', CommandTimeout='30']\"\r\n\"\"SELECT [o].[Id], [o].[EventDate], [o].[EventPayload], [o].[EventType], [o].[ExpireDate]\r\nFROM [OutboxMessages] AS [o]\r\nWHERE ([o].[ExpireDate] IS NULL) OR [o].[ExpireDate] >= GETDATE()\"","fields":{"elapsed":"0","parameters":"","commandType":"Text","commandTimeout":30,"newLine":"\r\n","commandText":"SELECT [o].[Id], [o].[EventDate], [o].[EventPayload], [o].[EventType], [o].[ExpireDate]\r\nFROM [OutboxMessages] AS [o]\r\nWHERE ([o].[ExpireDate] IS NULL) OR [o].[ExpireDate] >= GETDATE()","EventId":{"Id":20101,"Name":"Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted"},"SourceContext":"Microsoft.EntityFrameworkCore.Database.Command"}}
{"@timestamp":"2023-05-15T10:02:05.3185241+03:30","level":"Information","messageTemplate":"Executed DbCommand ({elapsed}ms) [Parameters=[{parameters}], CommandType='{commandType}', CommandTimeout='{commandTimeout}']{newLine}{commandText}","message":"Executed DbCommand (\"0\"ms) [Parameters=[\"\"], CommandType='Text', CommandTimeout='30']\"\r\n\"\"SELECT [o].[Id], [o].[EventDate], [o].[EventPayload], [o].[EventType], [o].[ExpireDate]\r\nFROM [OutboxMessages] AS [o]\r\nWHERE ([o].[ExpireDate] IS NULL) OR [o].[ExpireDate] >= GETDATE()\"","fields":{"elapsed":"0","parameters":"","commandType":"Text","commandTimeout":30,"newLine":"\r\n","commandText":"SELECT [o].[Id], [o].[EventDate], [o].[EventPayload], [o].[EventType], [o].[ExpireDate]\r\nFROM [OutboxMessages] AS [o]\r\nWHERE ([o].[ExpireDate] IS NULL) OR [o].[ExpireDate] >= GETDATE()","EventId":{"Id":20101,"Name":"Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted"},"SourceContext":"Microsoft.EntityFrameworkCore.Database.Command"}}
{"@timestamp":"2023-05-15T10:02:10.3230763+03:30","level":"Information","messageTemplate":"Executed DbCommand ({elapsed}ms) [Parameters=[{parameters}], CommandType='{commandType}', CommandTimeout='{commandTimeout}']{newLine}{commandText}","message":"Executed DbCommand (\"0\"ms) [Parameters=[\"\"], CommandType='Text', CommandTimeout='30']\"\r\n\"\"SELECT [o].[Id], [o].[EventDate], [o].[EventPayload], [o].[EventType], [o].[ExpireDate]\r\nFROM [OutboxMessages] AS [o]\r\nWHERE ([o].[ExpireDate] IS NULL) OR [o].[ExpireDate] >= GETDATE()\"","fields":{"elapsed":"0","parameters":"","commandType":"Text","commandTimeout":30,"newLine":"\r\n","commandText":"SELECT [o].[Id], [o].[EventDate], [o].[EventPayload], [o].[EventType], [o].[ExpireDate]\r\nFROM [OutboxMessages] AS [o]\r\nWHERE ([o].[ExpireDate] IS NULL) OR [o].[ExpireDate] >= GETDATE()","EventId":{"Id":20101,"Name":"Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted"},"SourceContext":"Microsoft.EntityFrameworkCore.Database.Command"}}
{"@timestamp":"2023-05-15T10:02:15.3307251+03:30","level":"Information","messageTemplate":"Executed DbCommand ({elapsed}ms) [Parameters=[{parameters}], CommandType='{commandType}', CommandTimeout='{commandTimeout}']{newLine}{commandText}","message":"Executed DbCommand (\"0\"ms) [Parameters=[\"\"], CommandType='Text', CommandTimeout='30']\"\r\n\"\"SELECT [o].[Id], [o].[EventDate], [o].[EventPayload], [o].[EventType], [o].[ExpireDate]\r\nFROM [OutboxMessages] AS [o]\r\nWHERE ([o].[ExpireDate] IS NULL) OR [o].[ExpireDate] >= GETDATE()\"","fields":{"elapsed":"0","parameters":"","commandType":"Text","commandTimeout":30,"newLine":"\r\n","commandText":"SELECT [o].[Id], [o].[EventDate], [o].[EventPayload], [o].[EventType], [o].[ExpireDate]\r\nFROM [OutboxMessages] AS [o]\r\nWHERE ([o].[ExpireDate] IS NULL) OR [o].[ExpireDate] >= GETDATE()","EventId":{"Id":20101,"Name":"Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted"},"SourceContext":"Microsoft.EntityFrameworkCore.Database.Command"}}
{"@timestamp":"2023-05-15T10:02:20.3322668+03:30","level":"Information","messageTemplate":"Executed DbCommand ({elapsed}ms) [Parameters=[{parameters}], CommandType='{commandType}', CommandTimeout='{commandTimeout}']{newLine}{commandText}","message":"Executed DbCommand (\"0\"ms) [Parameters=[\"\"], CommandType='Text', CommandTimeout='30']\"\r\n\"\"SELECT [o].[Id], [o].[EventDate], [o].[EventPayload], [o].[EventType], [o].[ExpireDate]\r\nFROM [OutboxMessages] AS [o]\r\nWHERE ([o].[ExpireDate] IS NULL) OR [o].[ExpireDate] >= GETDATE()\"","fields":{"elapsed":"0","parameters":"","commandType":"Text","commandTimeout":30,"newLine":"\r\n","commandText":"SELECT [o].[Id], [o].[EventDate], [o].[EventPayload], [o].[EventType], [o].[ExpireDate]\r\nFROM [OutboxMessages] AS [o]\r\nWHERE ([o].[ExpireDate] IS NULL) OR [o].[ExpireDate] >= GETDATE()","EventId":{"Id":20101,"Name":"Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted"},"SourceContext":"Microsoft.EntityFrameworkCore.Database.Command"}}
{"@timestamp":"2023-05-15T10:02:25.3434991+03:30","level":"Information","messageTemplate":"Executed DbCommand ({elapsed}ms) [Parameters=[{parameters}], CommandType='{commandType}', CommandTimeout='{commandTimeout}']{newLine}{commandText}","message":"Executed DbCommand (\"0\"ms) [Parameters=[\"\"], CommandType='Text', CommandTimeout='30']\"\r\n\"\"SELECT [o].[Id], [o].[EventDate], [o].[EventPayload], [o].[EventType], [o].[ExpireDate]\r\nFROM [OutboxMessages] AS [o]\r\nWHERE ([o].[ExpireDate] IS NULL) OR [o].[ExpireDate] >= GETDATE()\"","fields":{"elapsed":"0","parameters":"","commandType":"Text","commandTimeout":30,"newLine":"\r\n","commandText":"SELECT [o].[Id], [o].[EventDate], [o].[EventPayload], [o].[EventType], [o].[ExpireDate]\r\nFROM [OutboxMessages] AS [o]\r\nWHERE ([o].[ExpireDate] IS NULL) OR [o].[ExpireDate] >= GETDATE()","EventId":{"Id":20101,"Name":"Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted"},"SourceContext":"Microsoft.EntityFrameworkCore.Database.Command"}}
{"@timestamp":"2023-05-15T10:02:30.3460306+03:30","level":"Information","messageTemplate":"Executed DbCommand ({elapsed}ms) [Parameters=[{parameters}], CommandType='{commandType}', CommandTimeout='{commandTimeout}']{newLine}{commandText}","message":"Executed DbCommand (\"0\"ms) [Parameters=[\"\"], CommandType='Text', CommandTimeout='30']\"\r\n\"\"SELECT [o].[Id], [o].[EventDate], [o].[EventPayload], [o].[EventType], [o].[ExpireDate]\r\nFROM [OutboxMessages] AS [o]\r\nWHERE ([o].[ExpireDate] IS NULL) OR [o].[ExpireDate] >= GETDATE()\"","fields":{"elapsed":"0","parameters":"","commandType":"Text","commandTimeout":30,"newLine":"\r\n","commandText":"SELECT [o].[Id], [o].[EventDate], [o].[EventPayload], [o].[EventType], [o].[ExpireDate]\r\nFROM [OutboxMessages] AS [o]\r\nWHERE ([o].[ExpireDate] IS NULL) OR [o].[ExpireDate] >= GETDATE()","EventId":{"Id":20101,"Name":"Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted"},"SourceContext":"Microsoft.EntityFrameworkCore.Database.Command"}}
{"@timestamp":"2023-05-15T10:02:35.3571470+03:30","level":"Information","messageTemplate":"Executed DbCommand ({elapsed}ms) [Parameters=[{parameters}], CommandType='{commandType}', CommandTimeout='{commandTimeout}']{newLine}{commandText}","message":"Executed DbCommand (\"0\"ms) [Parameters=[\"\"], CommandType='Text', CommandTimeout='30']\"\r\n\"\"SELECT [o].[Id], [o].[EventDate], [o].[EventPayload], [o].[EventType], [o].[ExpireDate]\r\nFROM [OutboxMessages] AS [o]\r\nWHERE ([o].[ExpireDate] IS NULL) OR [o].[ExpireDate] >= GETDATE()\"","fields":{"elapsed":"0","parameters":"","commandType":"Text","commandTimeout":30,"newLine":"\r\n","commandText":"SELECT [o].[Id], [o].[EventDate], [o].[EventPayload], [o].[EventType], [o].[ExpireDate]\r\nFROM [OutboxMessages] AS [o]\r\nWHERE ([o].[ExpireDate] IS NULL) OR [o].[ExpireDate] >= GETDATE()","EventId":{"Id":20101,"Name":"Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted"},"SourceContext":"Microsoft.EntityFrameworkCore.Database.Command"}}
{"@timestamp":"2023-05-15T10:02:40.3649053+03:30","level":"Information","messageTemplate":"Executed DbCommand ({elapsed}ms) [Parameters=[{parameters}], CommandType='{commandType}', CommandTimeout='{commandTimeout}']{newLine}{commandText}","message":"Executed DbCommand (\"0\"ms) [Parameters=[\"\"], CommandType='Text', CommandTimeout='30']\"\r\n\"\"SELECT [o].[Id], [o].[EventDate], [o].[EventPayload], [o].[EventType], [o].[ExpireDate]\r\nFROM [OutboxMessages] AS [o]\r\nWHERE ([o].[ExpireDate] IS NULL) OR [o].[ExpireDate] >= GETDATE()\"","fields":{"elapsed":"0","parameters":"","commandType":"Text","commandTimeout":30,"newLine":"\r\n","commandText":"SELECT [o].[Id], [o].[EventDate], [o].[EventPayload], [o].[EventType], [o].[ExpireDate]\r\nFROM [OutboxMessages] AS [o]\r\nWHERE ([o].[ExpireDate] IS NULL) OR [o].[ExpireDate] >= GETDATE()","EventId":{"Id":20101,"Name":"Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted"},"SourceContext":"Microsoft.EntityFrameworkCore.Database.Command"}}
{"@timestamp":"2023-05-15T10:02:45.3685366+03:30","level":"Information","messageTemplate":"Executed DbCommand ({elapsed}ms) [Parameters=[{parameters}], CommandType='{commandType}', CommandTimeout='{commandTimeout}']{newLine}{commandText}","message":"Executed DbCommand (\"1\"ms) [Parameters=[\"\"], CommandType='Text', CommandTimeout='30']\"\r\n\"\"SELECT [o].[Id], [o].[EventDate], [o].[EventPayload], [o].[EventType], [o].[ExpireDate]\r\nFROM [OutboxMessages] AS [o]\r\nWHERE ([o].[ExpireDate] IS NULL) OR [o].[ExpireDate] >= GETDATE()\"","fields":{"elapsed":"1","parameters":"","commandType":"Text","commandTimeout":30,"newLine":"\r\n","commandText":"SELECT [o].[Id], [o].[EventDate], [o].[EventPayload], [o].[EventType], [o].[ExpireDate]\r\nFROM [OutboxMessages] AS [o]\r\nWHERE ([o].[ExpireDate] IS NULL) OR [o].[ExpireDate] >= GETDATE()","EventId":{"Id":20101,"Name":"Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted"},"SourceContext":"Microsoft.EntityFrameworkCore.Database.Command"}}
{"@timestamp":"2023-05-15T10:02:50.3806077+03:30","level":"Information","messageTemplate":"Executed DbCommand ({elapsed}ms) [Parameters=[{parameters}], CommandType='{commandType}', CommandTimeout='{commandTimeout}']{newLine}{commandText}","message":"Executed DbCommand (\"1\"ms) [Parameters=[\"\"], CommandType='Text', CommandTimeout='30']\"\r\n\"\"SELECT [o].[Id], [o].[EventDate], [o].[EventPayload], [o].[EventType], [o].[ExpireDate]\r\nFROM [OutboxMessages] AS [o]\r\nWHERE ([o].[ExpireDate] IS NULL) OR [o].[ExpireDate] >= GETDATE()\"","fields":{"elapsed":"1","parameters":"","commandType":"Text","commandTimeout":30,"newLine":"\r\n","commandText":"SELECT [o].[Id], [o].[EventDate], [o].[EventPayload], [o].[EventType], [o].[ExpireDate]\r\nFROM [OutboxMessages] AS [o]\r\nWHERE ([o].[ExpireDate] IS NULL) OR [o].[ExpireDate] >= GETDATE()","EventId":{"Id":20101,"Name":"Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted"},"SourceContext":"Microsoft.EntityFrameworkCore.Database.Command"}}
{"@timestamp":"2023-05-15T10:02:55.3965006+03:30","level":"Information","messageTemplate":"Executed DbCommand ({elapsed}ms) [Parameters=[{parameters}], CommandType='{commandType}', CommandTimeout='{commandTimeout}']{newLine}{commandText}","message":"Executed DbCommand (\"0\"ms) [Parameters=[\"\"], CommandType='Text', CommandTimeout='30']\"\r\n\"\"SELECT [o].[Id], [o].[EventDate], [o].[EventPayload], [o].[EventType], [o].[ExpireDate]\r\nFROM [OutboxMessages] AS [o]\r\nWHERE ([o].[ExpireDate] IS NULL) OR [o].[ExpireDate] >= GETDATE()\"","fields":{"elapsed":"0","parameters":"","commandType":"Text","commandTimeout":30,"newLine":"\r\n","commandText":"SELECT [o].[Id], [o].[EventDate], [o].[EventPayload], [o].[EventType], [o].[ExpireDate]\r\nFROM [OutboxMessages] AS [o]\r\nWHERE ([o].[ExpireDate] IS NULL) OR [o].[ExpireDate] >= GETDATE()","EventId":{"Id":20101,"Name":"Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted"},"SourceContext":"Microsoft.EntityFrameworkCore.Database.Command"}}
{"@timestamp":"2023-05-15T10:03:00.4043046+03:30","level":"Information","messageTemplate":"Executed DbCommand ({elapsed}ms) [Parameters=[{parameters}], CommandType='{commandType}', CommandTimeout='{commandTimeout}']{newLine}{commandText}","message":"Executed DbCommand (\"0\"ms) [Parameters=[\"\"], CommandType='Text', CommandTimeout='30']\"\r\n\"\"SELECT [o].[Id], [o].[EventDate], [o].[EventPayload], [o].[EventType], [o].[ExpireDate]\r\nFROM [OutboxMessages] AS [o]\r\nWHERE ([o].[ExpireDate] IS NULL) OR [o].[ExpireDate] >= GETDATE()\"","fields":{"elapsed":"0","parameters":"","commandType":"Text","commandTimeout":30,"newLine":"\r\n","commandText":"SELECT [o].[Id], [o].[EventDate], [o].[EventPayload], [o].[EventType], [o].[ExpireDate]\r\nFROM [OutboxMessages] AS [o]\r\nWHERE ([o].[ExpireDate] IS NULL) OR [o].[ExpireDate] >= GETDATE()","EventId":{"Id":20101,"Name":"Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted"},"SourceContext":"Microsoft.EntityFrameworkCore.Database.Command"}}
{"@timestamp":"2023-05-15T10:03:05.4163881+03:30","level":"Information","messageTemplate":"Executed DbCommand ({elapsed}ms) [Parameters=[{parameters}], CommandType='{commandType}', CommandTimeout='{commandTimeout}']{newLine}{commandText}","message":"Executed DbCommand (\"0\"ms) [Parameters=[\"\"], CommandType='Text', CommandTimeout='30']\"\r\n\"\"SELECT [o].[Id], [o].[EventDate], [o].[EventPayload], [o].[EventType], [o].[ExpireDate]\r\nFROM [OutboxMessages] AS [o]\r\nWHERE ([o].[ExpireDate] IS NULL) OR [o].[ExpireDate] >= GETDATE()\"","fields":{"elapsed":"0","parameters":"","commandType":"Text","commandTimeout":30,"newLine":"\r\n","commandText":"SELECT [o].[Id], [o].[EventDate], [o].[EventPayload], [o].[EventType], [o].[ExpireDate]\r\nFROM [OutboxMessages] AS [o]\r\nWHERE ([o].[ExpireDate] IS NULL) OR [o].[ExpireDate] >= GETDATE()","EventId":{"Id":20101,"Name":"Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted"},"SourceContext":"Microsoft.EntityFrameworkCore.Database.Command"}}
{"@timestamp":"2023-05-15T10:03:10.4319881+03:30","level":"Information","messageTemplate":"Executed DbCommand ({elapsed}ms) [Parameters=[{parameters}], CommandType='{commandType}', CommandTimeout='{commandTimeout}']{newLine}{commandText}","message":"Executed DbCommand (\"0\"ms) [Parameters=[\"\"], CommandType='Text', CommandTimeout='30']\"\r\n\"\"SELECT [o].[Id], [o].[EventDate], [o].[EventPayload], [o].[EventType], [o].[ExpireDate]\r\nFROM [OutboxMessages] AS [o]\r\nWHERE ([o].[ExpireDate] IS NULL) OR [o].[ExpireDate] >= GETDATE()\"","fields":{"elapsed":"0","parameters":"","commandType":"Text","commandTimeout":30,"newLine":"\r\n","commandText":"SELECT [o].[Id], [o].[EventDate], [o].[EventPayload], [o].[EventType], [o].[ExpireDate]\r\nFROM [OutboxMessages] AS [o]\r\nWHERE ([o].[ExpireDate] IS NULL) OR [o].[ExpireDate] >= GETDATE()","EventId":{"Id":20101,"Name":"Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted"},"SourceContext":"Microsoft.EntityFrameworkCore.Database.Command"}}
{"@timestamp":"2023-05-15T10:03:15.4465895+03:30","level":"Information","messageTemplate":"Executed DbCommand ({elapsed}ms) [Parameters=[{parameters}], CommandType='{commandType}', CommandTimeout='{commandTimeout}']{newLine}{commandText}","message":"Executed DbCommand (\"0\"ms) [Parameters=[\"\"], CommandType='Text', CommandTimeout='30']\"\r\n\"\"SELECT [o].[Id], [o].[EventDate], [o].[EventPayload], [o].[EventType], [o].[ExpireDate]\r\nFROM [OutboxMessages] AS [o]\r\nWHERE ([o].[ExpireDate] IS NULL) OR [o].[ExpireDate] >= GETDATE()\"","fields":{"elapsed":"0","parameters":"","commandType":"Text","commandTimeout":30,"newLine":"\r\n","commandText":"SELECT [o].[Id], [o].[EventDate], [o].[EventPayload], [o].[EventType], [o].[ExpireDate]\r\nFROM [OutboxMessages] AS [o]\r\nWHERE ([o].[ExpireDate] IS NULL) OR [o].[ExpireDate] >= GETDATE()","EventId":{"Id":20101,"Name":"Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted"},"SourceContext":"Microsoft.EntityFrameworkCore.Database.Command"}}
{"@timestamp":"2023-05-15T10:03:20.4553947+03:30","level":"Information","messageTemplate":"Executed DbCommand ({elapsed}ms) [Parameters=[{parameters}], CommandType='{commandType}', CommandTimeout='{commandTimeout}']{newLine}{commandText}","message":"Executed DbCommand (\"0\"ms) [Parameters=[\"\"], CommandType='Text', CommandTimeout='30']\"\r\n\"\"SELECT [o].[Id], [o].[EventDate], [o].[EventPayload], [o].[EventType], [o].[ExpireDate]\r\nFROM [OutboxMessages] AS [o]\r\nWHERE ([o].[ExpireDate] IS NULL) OR [o].[ExpireDate] >= GETDATE()\"","fields":{"elapsed":"0","parameters":"","commandType":"Text","commandTimeout":30,"newLine":"\r\n","commandText":"SELECT [o].[Id], [o].[EventDate], [o].[EventPayload], [o].[EventType], [o].[ExpireDate]\r\nFROM [OutboxMessages] AS [o]\r\nWHERE ([o].[ExpireDate] IS NULL) OR [o].[ExpireDate] >= GETDATE()","EventId":{"Id":20101,"Name":"Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted"},"SourceContext":"Microsoft.EntityFrameworkCore.Database.Command"}}
{"@timestamp":"2023-05-15T10:03:25.4597045+03:30","level":"Information","messageTemplate":"Executed DbCommand ({elapsed}ms) [Parameters=[{parameters}], CommandType='{commandType}', CommandTimeout='{commandTimeout}']{newLine}{commandText}","message":"Executed DbCommand (\"0\"ms) [Parameters=[\"\"], CommandType='Text', CommandTimeout='30']\"\r\n\"\"SELECT [o].[Id], [o].[EventDate], [o].[EventPayload], [o].[EventType], [o].[ExpireDate]\r\nFROM [OutboxMessages] AS [o]\r\nWHERE ([o].[ExpireDate] IS NULL) OR [o].[ExpireDate] >= GETDATE()\"","fields":{"elapsed":"0","parameters":"","commandType":"Text","commandTimeout":30,"newLine":"\r\n","commandText":"SELECT [o].[Id], [o].[EventDate], [o].[EventPayload], [o].[EventType], [o].[ExpireDate]\r\nFROM [OutboxMessages] AS [o]\r\nWHERE ([o].[ExpireDate] IS NULL) OR [o].[ExpireDate] >= GETDATE()","EventId":{"Id":20101,"Name":"Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted"},"SourceContext":"Microsoft.EntityFrameworkCore.Database.Command"}}
{"@timestamp":"2023-05-15T10:03:30.4666313+03:30","level":"Information","messageTemplate":"Executed DbCommand ({elapsed}ms) [Parameters=[{parameters}], CommandType='{commandType}', CommandTimeout='{commandTimeout}']{newLine}{commandText}","message":"Executed DbCommand (\"0\"ms) [Parameters=[\"\"], CommandType='Text', CommandTimeout='30']\"\r\n\"\"SELECT [o].[Id], [o].[EventDate], [o].[EventPayload], [o].[EventType], [o].[ExpireDate]\r\nFROM [OutboxMessages] AS [o]\r\nWHERE ([o].[ExpireDate] IS NULL) OR [o].[ExpireDate] >= GETDATE()\"","fields":{"elapsed":"0","parameters":"","commandType":"Text","commandTimeout":30,"newLine":"\r\n","commandText":"SELECT [o].[Id], [o].[EventDate], [o].[EventPayload], [o].[EventType], [o].[ExpireDate]\r\nFROM [OutboxMessages] AS [o]\r\nWHERE ([o].[ExpireDate] IS NULL) OR [o].[ExpireDate] >= GETDATE()","EventId":{"Id":20101,"Name":"Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted"},"SourceContext":"Microsoft.EntityFrameworkCore.Database.Command"}}
{"@timestamp":"2023-05-15T10:03:35.4691175+03:30","level":"Information","messageTemplate":"Executed DbCommand ({elapsed}ms) [Parameters=[{parameters}], CommandType='{commandType}', CommandTimeout='{commandTimeout}']{newLine}{commandText}","message":"Executed DbCommand (\"0\"ms) [Parameters=[\"\"], CommandType='Text', CommandTimeout='30']\"\r\n\"\"SELECT [o].[Id], [o].[EventDate], [o].[EventPayload], [o].[EventType], [o].[ExpireDate]\r\nFROM [OutboxMessages] AS [o]\r\nWHERE ([o].[ExpireDate] IS NULL) OR [o].[ExpireDate] >= GETDATE()\"","fields":{"elapsed":"0","parameters":"","commandType":"Text","commandTimeout":30,"newLine":"\r\n","commandText":"SELECT [o].[Id], [o].[EventDate], [o].[EventPayload], [o].[EventType], [o].[ExpireDate]\r\nFROM [OutboxMessages] AS [o]\r\nWHERE ([o].[ExpireDate] IS NULL) OR [o].[ExpireDate] >= GETDATE()","EventId":{"Id":20101,"Name":"Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted"},"SourceContext":"Microsoft.EntityFrameworkCore.Database.Command"}}
{"@timestamp":"2023-05-15T10:03:40.4771202+03:30","level":"Information","messageTemplate":"Executed DbCommand ({elapsed}ms) [Parameters=[{parameters}], CommandType='{commandType}', CommandTimeout='{commandTimeout}']{newLine}{commandText}","message":"Executed DbCommand (\"0\"ms) [Parameters=[\"\"], CommandType='Text', CommandTimeout='30']\"\r\n\"\"SELECT [o].[Id], [o].[EventDate], [o].[EventPayload], [o].[EventType], [o].[ExpireDate]\r\nFROM [OutboxMessages] AS [o]\r\nWHERE ([o].[ExpireDate] IS NULL) OR [o].[ExpireDate] >= GETDATE()\"","fields":{"elapsed":"0","parameters":"","commandType":"Text","commandTimeout":30,"newLine":"\r\n","commandText":"SELECT [o].[Id], [o].[EventDate], [o].[EventPayload], [o].[EventType], [o].[ExpireDate]\r\nFROM [OutboxMessages] AS [o]\r\nWHERE ([o].[ExpireDate] IS NULL) OR [o].[ExpireDate] >= GETDATE()","EventId":{"Id":20101,"Name":"Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted"},"SourceContext":"Microsoft.EntityFrameworkCore.Database.Command"}}
{"@timestamp":"2023-05-15T10:03:45.4815092+03:30","level":"Information","messageTemplate":"Executed DbCommand ({elapsed}ms) [Parameters=[{parameters}], CommandType='{commandType}', CommandTimeout='{commandTimeout}']{newLine}{commandText}","message":"Executed DbCommand (\"0\"ms) [Parameters=[\"\"], CommandType='Text', CommandTimeout='30']\"\r\n\"\"SELECT [o].[Id], [o].[EventDate], [o].[EventPayload], [o].[EventType], [o].[ExpireDate]\r\nFROM [OutboxMessages] AS [o]\r\nWHERE ([o].[ExpireDate] IS NULL) OR [o].[ExpireDate] >= GETDATE()\"","fields":{"elapsed":"0","parameters":"","commandType":"Text","commandTimeout":30,"newLine":"\r\n","commandText":"SELECT [o].[Id], [o].[EventDate], [o].[EventPayload], [o].[EventType], [o].[ExpireDate]\r\nFROM [OutboxMessages] AS [o]\r\nWHERE ([o].[ExpireDate] IS NULL) OR [o].[ExpireDate] >= GETDATE()","EventId":{"Id":20101,"Name":"Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted"},"SourceContext":"Microsoft.EntityFrameworkCore.Database.Command"}}
{"@timestamp":"2023-05-15T10:03:50.4957906+03:30","level":"Information","messageTemplate":"Executed DbCommand ({elapsed}ms) [Parameters=[{parameters}], CommandType='{commandType}', CommandTimeout='{commandTimeout}']{newLine}{commandText}","message":"Executed DbCommand (\"1\"ms) [Parameters=[\"\"], CommandType='Text', CommandTimeout='30']\"\r\n\"\"SELECT [o].[Id], [o].[EventDate], [o].[EventPayload], [o].[EventType], [o].[ExpireDate]\r\nFROM [OutboxMessages] AS [o]\r\nWHERE ([o].[ExpireDate] IS NULL) OR [o].[ExpireDate] >= GETDATE()\"","fields":{"elapsed":"1","parameters":"","commandType":"Text","commandTimeout":30,"newLine":"\r\n","commandText":"SELECT [o].[Id], [o].[EventDate], [o].[EventPayload], [o].[EventType], [o].[ExpireDate]\r\nFROM [OutboxMessages] AS [o]\r\nWHERE ([o].[ExpireDate] IS NULL) OR [o].[ExpireDate] >= GETDATE()","EventId":{"Id":20101,"Name":"Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted"},"SourceContext":"Microsoft.EntityFrameworkCore.Database.Command"}}
{"@timestamp":"2023-05-15T10:03:55.5027323+03:30","level":"Information","messageTemplate":"Executed DbCommand ({elapsed}ms) [Parameters=[{parameters}], CommandType='{commandType}', CommandTimeout='{commandTimeout}']{newLine}{commandText}","message":"Executed DbCommand (\"2\"ms) [Parameters=[\"\"], CommandType='Text', CommandTimeout='30']\"\r\n\"\"SELECT [o].[Id], [o].[EventDate], [o].[EventPayload], [o].[EventType], [o].[ExpireDate]\r\nFROM [OutboxMessages] AS [o]\r\nWHERE ([o].[ExpireDate] IS NULL) OR [o].[ExpireDate] >= GETDATE()\"","fields":{"elapsed":"2","parameters":"","commandType":"Text","commandTimeout":30,"newLine":"\r\n","commandText":"SELECT [o].[Id], [o].[EventDate], [o].[EventPayload], [o].[EventType], [o].[ExpireDate]\r\nFROM [OutboxMessages] AS [o]\r\nWHERE ([o].[ExpireDate] IS NULL) OR [o].[ExpireDate] >= GETDATE()","EventId":{"Id":20101,"Name":"Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted"},"SourceContext":"Microsoft.EntityFrameworkCore.Database.Command"}}
{"@timestamp":"2023-05-15T10:04:00.5027246+03:30","level":"Information","messageTemplate":"Executed DbCommand ({elapsed}ms) [Parameters=[{parameters}], CommandType='{commandType}', CommandTimeout='{commandTimeout}']{newLine}{commandText}","message":"Executed DbCommand (\"0\"ms) [Parameters=[\"\"], CommandType='Text', CommandTimeout='30']\"\r\n\"\"SELECT [o].[Id], [o].[EventDate], [o].[EventPayload], [o].[EventType], [o].[ExpireDate]\r\nFROM [OutboxMessages] AS [o]\r\nWHERE ([o].[ExpireDate] IS NULL) OR [o].[ExpireDate] >= GETDATE()\"","fields":{"elapsed":"0","parameters":"","commandType":"Text","commandTimeout":30,"newLine":"\r\n","commandText":"SELECT [o].[Id], [o].[EventDate], [o].[EventPayload], [o].[EventType], [o].[ExpireDate]\r\nFROM [OutboxMessages] AS [o]\r\nWHERE ([o].[ExpireDate] IS NULL) OR [o].[ExpireDate] >= GETDATE()","EventId":{"Id":20101,"Name":"Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted"},"SourceContext":"Microsoft.EntityFrameworkCore.Database.Command"}}
{"@timestamp":"2023-05-15T10:04:05.5059064+03:30","level":"Information","messageTemplate":"Executed DbCommand ({elapsed}ms) [Parameters=[{parameters}], CommandType='{commandType}', CommandTimeout='{commandTimeout}']{newLine}{commandText}","message":"Executed DbCommand (\"0\"ms) [Parameters=[\"\"], CommandType='Text', CommandTimeout='30']\"\r\n\"\"SELECT [o].[Id], [o].[EventDate], [o].[EventPayload], [o].[EventType], [o].[ExpireDate]\r\nFROM [OutboxMessages] AS [o]\r\nWHERE ([o].[ExpireDate] IS NULL) OR [o].[ExpireDate] >= GETDATE()\"","fields":{"elapsed":"0","parameters":"","commandType":"Text","commandTimeout":30,"newLine":"\r\n","commandText":"SELECT [o].[Id], [o].[EventDate], [o].[EventPayload], [o].[EventType], [o].[ExpireDate]\r\nFROM [OutboxMessages] AS [o]\r\nWHERE ([o].[ExpireDate] IS NULL) OR [o].[ExpireDate] >= GETDATE()","EventId":{"Id":20101,"Name":"Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted"},"SourceContext":"Microsoft.EntityFrameworkCore.Database.Command"}}
{"@timestamp":"2023-05-15T10:04:10.5135957+03:30","level":"Information","messageTemplate":"Executed DbCommand ({elapsed}ms) [Parameters=[{parameters}], CommandType='{commandType}', CommandTimeout='{commandTimeout}']{newLine}{commandText}","message":"Executed DbCommand (\"0\"ms) [Parameters=[\"\"], CommandType='Text', CommandTimeout='30']\"\r\n\"\"SELECT [o].[Id], [o].[EventDate], [o].[EventPayload], [o].[EventType], [o].[ExpireDate]\r\nFROM [OutboxMessages] AS [o]\r\nWHERE ([o].[ExpireDate] IS NULL) OR [o].[ExpireDate] >= GETDATE()\"","fields":{"elapsed":"0","parameters":"","commandType":"Text","commandTimeout":30,"newLine":"\r\n","commandText":"SELECT [o].[Id], [o].[EventDate], [o].[EventPayload], [o].[EventType], [o].[ExpireDate]\r\nFROM [OutboxMessages] AS [o]\r\nWHERE ([o].[ExpireDate] IS NULL) OR [o].[ExpireDate] >= GETDATE()","EventId":{"Id":20101,"Name":"Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted"},"SourceContext":"Microsoft.EntityFrameworkCore.Database.Command"}}
{"@timestamp":"2023-05-15T10:04:15.5151622+03:30","level":"Information","messageTemplate":"Executed DbCommand ({elapsed}ms) [Parameters=[{parameters}], CommandType='{commandType}', CommandTimeout='{commandTimeout}']{newLine}{commandText}","message":"Executed DbCommand (\"0\"ms) [Parameters=[\"\"], CommandType='Text', CommandTimeout='30']\"\r\n\"\"SELECT [o].[Id], [o].[EventDate], [o].[EventPayload], [o].[EventType], [o].[ExpireDate]\r\nFROM [OutboxMessages] AS [o]\r\nWHERE ([o].[ExpireDate] IS NULL) OR [o].[ExpireDate] >= GETDATE()\"","fields":{"elapsed":"0","parameters":"","commandType":"Text","commandTimeout":30,"newLine":"\r\n","commandText":"SELECT [o].[Id], [o].[EventDate], [o].[EventPayload], [o].[EventType], [o].[ExpireDate]\r\nFROM [OutboxMessages] AS [o]\r\nWHERE ([o].[ExpireDate] IS NULL) OR [o].[ExpireDate] >= GETDATE()","EventId":{"Id":20101,"Name":"Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted"},"SourceContext":"Microsoft.EntityFrameworkCore.Database.Command"}}
{"@timestamp":"2023-05-15T10:04:20.5262509+03:30","level":"Information","messageTemplate":"Executed DbCommand ({elapsed}ms) [Parameters=[{parameters}], CommandType='{commandType}', CommandTimeout='{commandTimeout}']{newLine}{commandText}","message":"Executed DbCommand (\"0\"ms) [Parameters=[\"\"], CommandType='Text', CommandTimeout='30']\"\r\n\"\"SELECT [o].[Id], [o].[EventDate], [o].[EventPayload], [o].[EventType], [o].[ExpireDate]\r\nFROM [OutboxMessages] AS [o]\r\nWHERE ([o].[ExpireDate] IS NULL) OR [o].[ExpireDate] >= GETDATE()\"","fields":{"elapsed":"0","parameters":"","commandType":"Text","commandTimeout":30,"newLine":"\r\n","commandText":"SELECT [o].[Id], [o].[EventDate], [o].[EventPayload], [o].[EventType], [o].[ExpireDate]\r\nFROM [OutboxMessages] AS [o]\r\nWHERE ([o].[ExpireDate] IS NULL) OR [o].[ExpireDate] >= GETDATE()","EventId":{"Id":20101,"Name":"Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted"},"SourceContext":"Microsoft.EntityFrameworkCore.Database.Command"}}
{"@timestamp":"2023-05-15T10:04:25.5398341+03:30","level":"Information","messageTemplate":"Executed DbCommand ({elapsed}ms) [Parameters=[{parameters}], CommandType='{commandType}', CommandTimeout='{commandTimeout}']{newLine}{commandText}","message":"Executed DbCommand (\"0\"ms) [Parameters=[\"\"], CommandType='Text', CommandTimeout='30']\"\r\n\"\"SELECT [o].[Id], [o].[EventDate], [o].[EventPayload], [o].[EventType], [o].[ExpireDate]\r\nFROM [OutboxMessages] AS [o]\r\nWHERE ([o].[ExpireDate] IS NULL) OR [o].[ExpireDate] >= GETDATE()\"","fields":{"elapsed":"0","parameters":"","commandType":"Text","commandTimeout":30,"newLine":"\r\n","commandText":"SELECT [o].[Id], [o].[EventDate], [o].[EventPayload], [o].[EventType], [o].[ExpireDate]\r\nFROM [OutboxMessages] AS [o]\r\nWHERE ([o].[ExpireDate] IS NULL) OR [o].[ExpireDate] >= GETDATE()","EventId":{"Id":20101,"Name":"Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted"},"SourceContext":"Microsoft.EntityFrameworkCore.Database.Command"}}
{"@timestamp":"2023-05-15T10:04:30.5521554+03:30","level":"Information","messageTemplate":"Executed DbCommand ({elapsed}ms) [Parameters=[{parameters}], CommandType='{commandType}', CommandTimeout='{commandTimeout}']{newLine}{commandText}","message":"Executed DbCommand (\"0\"ms) [Parameters=[\"\"], CommandType='Text', CommandTimeout='30']\"\r\n\"\"SELECT [o].[Id], [o].[EventDate], [o].[EventPayload], [o].[EventType], [o].[ExpireDate]\r\nFROM [OutboxMessages] AS [o]\r\nWHERE ([o].[ExpireDate] IS NULL) OR [o].[ExpireDate] >= GETDATE()\"","fields":{"elapsed":"0","parameters":"","commandType":"Text","commandTimeout":30,"newLine":"\r\n","commandText":"SELECT [o].[Id], [o].[EventDate], [o].[EventPayload], [o].[EventType], [o].[ExpireDate]\r\nFROM [OutboxMessages] AS [o]\r\nWHERE ([o].[ExpireDate] IS NULL) OR [o].[ExpireDate] >= GETDATE()","EventId":{"Id":20101,"Name":"Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted"},"SourceContext":"Microsoft.EntityFrameworkCore.Database.Command"}}
{"@timestamp":"2023-05-15T10:04:35.5546639+03:30","level":"Information","messageTemplate":"Executed DbCommand ({elapsed}ms) [Parameters=[{parameters}], CommandType='{commandType}', CommandTimeout='{commandTimeout}']{newLine}{commandText}","message":"Executed DbCommand (\"0\"ms) [Parameters=[\"\"], CommandType='Text', CommandTimeout='30']\"\r\n\"\"SELECT [o].[Id], [o].[EventDate], [o].[EventPayload], [o].[EventType], [o].[ExpireDate]\r\nFROM [OutboxMessages] AS [o]\r\nWHERE ([o].[ExpireDate] IS NULL) OR [o].[ExpireDate] >= GETDATE()\"","fields":{"elapsed":"0","parameters":"","commandType":"Text","commandTimeout":30,"newLine":"\r\n","commandText":"SELECT [o].[Id], [o].[EventDate], [o].[EventPayload], [o].[EventType], [o].[ExpireDate]\r\nFROM [OutboxMessages] AS [o]\r\nWHERE ([o].[ExpireDate] IS NULL) OR [o].[ExpireDate] >= GETDATE()","EventId":{"Id":20101,"Name":"Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted"},"SourceContext":"Microsoft.EntityFrameworkCore.Database.Command"}}
{"@timestamp":"2023-05-15T10:04:40.5558167+03:30","level":"Information","messageTemplate":"Executed DbCommand ({elapsed}ms) [Parameters=[{parameters}], CommandType='{commandType}', CommandTimeout='{commandTimeout}']{newLine}{commandText}","message":"Executed DbCommand (\"0\"ms) [Parameters=[\"\"], CommandType='Text', CommandTimeout='30']\"\r\n\"\"SELECT [o].[Id], [o].[EventDate], [o].[EventPayload], [o].[EventType], [o].[ExpireDate]\r\nFROM [OutboxMessages] AS [o]\r\nWHERE ([o].[ExpireDate] IS NULL) OR [o].[ExpireDate] >= GETDATE()\"","fields":{"elapsed":"0","parameters":"","commandType":"Text","commandTimeout":30,"newLine":"\r\n","commandText":"SELECT [o].[Id], [o].[EventDate], [o].[EventPayload], [o].[EventType], [o].[ExpireDate]\r\nFROM [OutboxMessages] AS [o]\r\nWHERE ([o].[ExpireDate] IS NULL) OR [o].[ExpireDate] >= GETDATE()","EventId":{"Id":20101,"Name":"Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted"},"SourceContext":"Microsoft.EntityFrameworkCore.Database.Command"}}
{"@timestamp":"2023-05-15T10:04:45.5702060+03:30","level":"Information","messageTemplate":"Executed DbCommand ({elapsed}ms) [Parameters=[{parameters}], CommandType='{commandType}', CommandTimeout='{commandTimeout}']{newLine}{commandText}","message":"Executed DbCommand (\"0\"ms) [Parameters=[\"\"], CommandType='Text', CommandTimeout='30']\"\r\n\"\"SELECT [o].[Id], [o].[EventDate], [o].[EventPayload], [o].[EventType], [o].[ExpireDate]\r\nFROM [OutboxMessages] AS [o]\r\nWHERE ([o].[ExpireDate] IS NULL) OR [o].[ExpireDate] >= GETDATE()\"","fields":{"elapsed":"0","parameters":"","commandType":"Text","commandTimeout":30,"newLine":"\r\n","commandText":"SELECT [o].[Id], [o].[EventDate], [o].[EventPayload], [o].[EventType], [o].[ExpireDate]\r\nFROM [OutboxMessages] AS [o]\r\nWHERE ([o].[ExpireDate] IS NULL) OR [o].[ExpireDate] >= GETDATE()","EventId":{"Id":20101,"Name":"Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted"},"SourceContext":"Microsoft.EntityFrameworkCore.Database.Command"}}
{"@timestamp":"2023-05-15T10:04:50.5812448+03:30","level":"Information","messageTemplate":"Executed DbCommand ({elapsed}ms) [Parameters=[{parameters}], CommandType='{commandType}', CommandTimeout='{commandTimeout}']{newLine}{commandText}","message":"Executed DbCommand (\"0\"ms) [Parameters=[\"\"], CommandType='Text', CommandTimeout='30']\"\r\n\"\"SELECT [o].[Id], [o].[EventDate], [o].[EventPayload], [o].[EventType], [o].[ExpireDate]\r\nFROM [OutboxMessages] AS [o]\r\nWHERE ([o].[ExpireDate] IS NULL) OR [o].[ExpireDate] >= GETDATE()\"","fields":{"elapsed":"0","parameters":"","commandType":"Text","commandTimeout":30,"newLine":"\r\n","commandText":"SELECT [o].[Id], [o].[EventDate], [o].[EventPayload], [o].[EventType], [o].[ExpireDate]\r\nFROM [OutboxMessages] AS [o]\r\nWHERE ([o].[ExpireDate] IS NULL) OR [o].[ExpireDate] >= GETDATE()","EventId":{"Id":20101,"Name":"Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted"},"SourceContext":"Microsoft.EntityFrameworkCore.Database.Command"}}
{"@timestamp":"2023-05-15T10:04:55.5965980+03:30","level":"Information","messageTemplate":"Executed DbCommand ({elapsed}ms) [Parameters=[{parameters}], CommandType='{commandType}', CommandTimeout='{commandTimeout}']{newLine}{commandText}","message":"Executed DbCommand (\"0\"ms) [Parameters=[\"\"], CommandType='Text', CommandTimeout='30']\"\r\n\"\"SELECT [o].[Id], [o].[EventDate], [o].[EventPayload], [o].[EventType], [o].[ExpireDate]\r\nFROM [OutboxMessages] AS [o]\r\nWHERE ([o].[ExpireDate] IS NULL) OR [o].[ExpireDate] >= GETDATE()\"","fields":{"elapsed":"0","parameters":"","commandType":"Text","commandTimeout":30,"newLine":"\r\n","commandText":"SELECT [o].[Id], [o].[EventDate], [o].[EventPayload], [o].[EventType], [o].[ExpireDate]\r\nFROM [OutboxMessages] AS [o]\r\nWHERE ([o].[ExpireDate] IS NULL) OR [o].[ExpireDate] >= GETDATE()","EventId":{"Id":20101,"Name":"Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted"},"SourceContext":"Microsoft.EntityFrameworkCore.Database.Command"}}
{"@timestamp":"2023-05-15T10:05:00.6073317+03:30","level":"Information","messageTemplate":"Executed DbCommand ({elapsed}ms) [Parameters=[{parameters}], CommandType='{commandType}', CommandTimeout='{commandTimeout}']{newLine}{commandText}","message":"Executed DbCommand (\"1\"ms) [Parameters=[\"\"], CommandType='Text', CommandTimeout='30']\"\r\n\"\"SELECT [o].[Id], [o].[EventDate], [o].[EventPayload], [o].[EventType], [o].[ExpireDate]\r\nFROM [OutboxMessages] AS [o]\r\nWHERE ([o].[ExpireDate] IS NULL) OR [o].[ExpireDate] >= GETDATE()\"","fields":{"elapsed":"1","parameters":"","commandType":"Text","commandTimeout":30,"newLine":"\r\n","commandText":"SELECT [o].[Id], [o].[EventDate], [o].[EventPayload], [o].[EventType], [o].[ExpireDate]\r\nFROM [OutboxMessages] AS [o]\r\nWHERE ([o].[ExpireDate] IS NULL) OR [o].[ExpireDate] >= GETDATE()","EventId":{"Id":20101,"Name":"Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted"},"SourceContext":"Microsoft.EntityFrameworkCore.Database.Command"}}
{"@timestamp":"2023-05-15T10:05:05.6169298+03:30","level":"Information","messageTemplate":"Executed DbCommand ({elapsed}ms) [Parameters=[{parameters}], CommandType='{commandType}', CommandTimeout='{commandTimeout}']{newLine}{commandText}","message":"Executed DbCommand (\"1\"ms) [Parameters=[\"\"], CommandType='Text', CommandTimeout='30']\"\r\n\"\"SELECT [o].[Id], [o].[EventDate], [o].[EventPayload], [o].[EventType], [o].[ExpireDate]\r\nFROM [OutboxMessages] AS [o]\r\nWHERE ([o].[ExpireDate] IS NULL) OR [o].[ExpireDate] >= GETDATE()\"","fields":{"elapsed":"1","parameters":"","commandType":"Text","commandTimeout":30,"newLine":"\r\n","commandText":"SELECT [o].[Id], [o].[EventDate], [o].[EventPayload], [o].[EventType], [o].[ExpireDate]\r\nFROM [OutboxMessages] AS [o]\r\nWHERE ([o].[ExpireDate] IS NULL) OR [o].[ExpireDate] >= GETDATE()","EventId":{"Id":20101,"Name":"Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted"},"SourceContext":"Microsoft.EntityFrameworkCore.Database.Command"}}
{"@timestamp":"2023-05-15T10:05:10.6311611+03:30","level":"Information","messageTemplate":"Executed DbCommand ({elapsed}ms) [Parameters=[{parameters}], CommandType='{commandType}', CommandTimeout='{commandTimeout}']{newLine}{commandText}","message":"Executed DbCommand (\"0\"ms) [Parameters=[\"\"], CommandType='Text', CommandTimeout='30']\"\r\n\"\"SELECT [o].[Id], [o].[EventDate], [o].[EventPayload], [o].[EventType], [o].[ExpireDate]\r\nFROM [OutboxMessages] AS [o]\r\nWHERE ([o].[ExpireDate] IS NULL) OR [o].[ExpireDate] >= GETDATE()\"","fields":{"elapsed":"0","parameters":"","commandType":"Text","commandTimeout":30,"newLine":"\r\n","commandText":"SELECT [o].[Id], [o].[EventDate], [o].[EventPayload], [o].[EventType], [o].[ExpireDate]\r\nFROM [OutboxMessages] AS [o]\r\nWHERE ([o].[ExpireDate] IS NULL) OR [o].[ExpireDate] >= GETDATE()","EventId":{"Id":20101,"Name":"Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted"},"SourceContext":"Microsoft.EntityFrameworkCore.Database.Command"}}
{"@timestamp":"2023-05-15T10:05:15.6396290+03:30","level":"Information","messageTemplate":"Executed DbCommand ({elapsed}ms) [Parameters=[{parameters}], CommandType='{commandType}', CommandTimeout='{commandTimeout}']{newLine}{commandText}","message":"Executed DbCommand (\"0\"ms) [Parameters=[\"\"], CommandType='Text', CommandTimeout='30']\"\r\n\"\"SELECT [o].[Id], [o].[EventDate], [o].[EventPayload], [o].[EventType], [o].[ExpireDate]\r\nFROM [OutboxMessages] AS [o]\r\nWHERE ([o].[ExpireDate] IS NULL) OR [o].[ExpireDate] >= GETDATE()\"","fields":{"elapsed":"0","parameters":"","commandType":"Text","commandTimeout":30,"newLine":"\r\n","commandText":"SELECT [o].[Id], [o].[EventDate], [o].[EventPayload], [o].[EventType], [o].[ExpireDate]\r\nFROM [OutboxMessages] AS [o]\r\nWHERE ([o].[ExpireDate] IS NULL) OR [o].[ExpireDate] >= GETDATE()","EventId":{"Id":20101,"Name":"Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted"},"SourceContext":"Microsoft.EntityFrameworkCore.Database.Command"}}
{"@timestamp":"2023-05-15T10:05:20.6457121+03:30","level":"Information","messageTemplate":"Executed DbCommand ({elapsed}ms) [Parameters=[{parameters}], CommandType='{commandType}', CommandTimeout='{commandTimeout}']{newLine}{commandText}","message":"Executed DbCommand (\"0\"ms) [Parameters=[\"\"], CommandType='Text', CommandTimeout='30']\"\r\n\"\"SELECT [o].[Id], [o].[EventDate], [o].[EventPayload], [o].[EventType], [o].[ExpireDate]\r\nFROM [OutboxMessages] AS [o]\r\nWHERE ([o].[ExpireDate] IS NULL) OR [o].[ExpireDate] >= GETDATE()\"","fields":{"elapsed":"0","parameters":"","commandType":"Text","commandTimeout":30,"newLine":"\r\n","commandText":"SELECT [o].[Id], [o].[EventDate], [o].[EventPayload], [o].[EventType], [o].[ExpireDate]\r\nFROM [OutboxMessages] AS [o]\r\nWHERE ([o].[ExpireDate] IS NULL) OR [o].[ExpireDate] >= GETDATE()","EventId":{"Id":20101,"Name":"Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted"},"SourceContext":"Microsoft.EntityFrameworkCore.Database.Command"}}
{"@timestamp":"2023-05-15T10:05:25.6516458+03:30","level":"Information","messageTemplate":"Executed DbCommand ({elapsed}ms) [Parameters=[{parameters}], CommandType='{commandType}', CommandTimeout='{commandTimeout}']{newLine}{commandText}","message":"Executed DbCommand (\"0\"ms) [Parameters=[\"\"], CommandType='Text', CommandTimeout='30']\"\r\n\"\"SELECT [o].[Id], [o].[EventDate], [o].[EventPayload], [o].[EventType], [o].[ExpireDate]\r\nFROM [OutboxMessages] AS [o]\r\nWHERE ([o].[ExpireDate] IS NULL) OR [o].[ExpireDate] >= GETDATE()\"","fields":{"elapsed":"0","parameters":"","commandType":"Text","commandTimeout":30,"newLine":"\r\n","commandText":"SELECT [o].[Id], [o].[EventDate], [o].[EventPayload], [o].[EventType], [o].[ExpireDate]\r\nFROM [OutboxMessages] AS [o]\r\nWHERE ([o].[ExpireDate] IS NULL) OR [o].[ExpireDate] >= GETDATE()","EventId":{"Id":20101,"Name":"Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted"},"SourceContext":"Microsoft.EntityFrameworkCore.Database.Command"}}
{"@timestamp":"2023-05-15T10:05:30.6638566+03:30","level":"Information","messageTemplate":"Executed DbCommand ({elapsed}ms) [Parameters=[{parameters}], CommandType='{commandType}', CommandTimeout='{commandTimeout}']{newLine}{commandText}","message":"Executed DbCommand (\"0\"ms) [Parameters=[\"\"], CommandType='Text', CommandTimeout='30']\"\r\n\"\"SELECT [o].[Id], [o].[EventDate], [o].[EventPayload], [o].[EventType], [o].[ExpireDate]\r\nFROM [OutboxMessages] AS [o]\r\nWHERE ([o].[ExpireDate] IS NULL) OR [o].[ExpireDate] >= GETDATE()\"","fields":{"elapsed":"0","parameters":"","commandType":"Text","commandTimeout":30,"newLine":"\r\n","commandText":"SELECT [o].[Id], [o].[EventDate], [o].[EventPayload], [o].[EventType], [o].[ExpireDate]\r\nFROM [OutboxMessages] AS [o]\r\nWHERE ([o].[ExpireDate] IS NULL) OR [o].[ExpireDate] >= GETDATE()","EventId":{"Id":20101,"Name":"Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted"},"SourceContext":"Microsoft.EntityFrameworkCore.Database.Command"}}
{"@timestamp":"2023-05-15T10:05:35.6788126+03:30","level":"Information","messageTemplate":"Executed DbCommand ({elapsed}ms) [Parameters=[{parameters}], CommandType='{commandType}', CommandTimeout='{commandTimeout}']{newLine}{commandText}","message":"Executed DbCommand (\"0\"ms) [Parameters=[\"\"], CommandType='Text', CommandTimeout='30']\"\r\n\"\"SELECT [o].[Id], [o].[EventDate], [o].[EventPayload], [o].[EventType], [o].[ExpireDate]\r\nFROM [OutboxMessages] AS [o]\r\nWHERE ([o].[ExpireDate] IS NULL) OR [o].[ExpireDate] >= GETDATE()\"","fields":{"elapsed":"0","parameters":"","commandType":"Text","commandTimeout":30,"newLine":"\r\n","commandText":"SELECT [o].[Id], [o].[EventDate], [o].[EventPayload], [o].[EventType], [o].[ExpireDate]\r\nFROM [OutboxMessages] AS [o]\r\nWHERE ([o].[ExpireDate] IS NULL) OR [o].[ExpireDate] >= GETDATE()","EventId":{"Id":20101,"Name":"Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted"},"SourceContext":"Microsoft.EntityFrameworkCore.Database.Command"}}
{"@timestamp":"2023-05-15T10:05:40.6858095+03:30","level":"Information","messageTemplate":"Executed DbCommand ({elapsed}ms) [Parameters=[{parameters}], CommandType='{commandType}', CommandTimeout='{commandTimeout}']{newLine}{commandText}","message":"Executed DbCommand (\"0\"ms) [Parameters=[\"\"], CommandType='Text', CommandTimeout='30']\"\r\n\"\"SELECT [o].[Id], [o].[EventDate], [o].[EventPayload], [o].[EventType], [o].[ExpireDate]\r\nFROM [OutboxMessages] AS [o]\r\nWHERE ([o].[ExpireDate] IS NULL) OR [o].[ExpireDate] >= GETDATE()\"","fields":{"elapsed":"0","parameters":"","commandType":"Text","commandTimeout":30,"newLine":"\r\n","commandText":"SELECT [o].[Id], [o].[EventDate], [o].[EventPayload], [o].[EventType], [o].[ExpireDate]\r\nFROM [OutboxMessages] AS [o]\r\nWHERE ([o].[ExpireDate] IS NULL) OR [o].[ExpireDate] >= GETDATE()","EventId":{"Id":20101,"Name":"Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted"},"SourceContext":"Microsoft.EntityFrameworkCore.Database.Command"}}
{"@timestamp":"2023-05-15T10:05:45.6879255+03:30","level":"Information","messageTemplate":"Executed DbCommand ({elapsed}ms) [Parameters=[{parameters}], CommandType='{commandType}', CommandTimeout='{commandTimeout}']{newLine}{commandText}","message":"Executed DbCommand (\"0\"ms) [Parameters=[\"\"], CommandType='Text', CommandTimeout='30']\"\r\n\"\"SELECT [o].[Id], [o].[EventDate], [o].[EventPayload], [o].[EventType], [o].[ExpireDate]\r\nFROM [OutboxMessages] AS [o]\r\nWHERE ([o].[ExpireDate] IS NULL) OR [o].[ExpireDate] >= GETDATE()\"","fields":{"elapsed":"0","parameters":"","commandType":"Text","commandTimeout":30,"newLine":"\r\n","commandText":"SELECT [o].[Id], [o].[EventDate], [o].[EventPayload], [o].[EventType], [o].[ExpireDate]\r\nFROM [OutboxMessages] AS [o]\r\nWHERE ([o].[ExpireDate] IS NULL) OR [o].[ExpireDate] >= GETDATE()","EventId":{"Id":20101,"Name":"Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted"},"SourceContext":"Microsoft.EntityFrameworkCore.Database.Command"}}
{"@timestamp":"2023-05-15T10:05:50.7004137+03:30","level":"Information","messageTemplate":"Executed DbCommand ({elapsed}ms) [Parameters=[{parameters}], CommandType='{commandType}', CommandTimeout='{commandTimeout}']{newLine}{commandText}","message":"Executed DbCommand (\"0\"ms) [Parameters=[\"\"], CommandType='Text', CommandTimeout='30']\"\r\n\"\"SELECT [o].[Id], [o].[EventDate], [o].[EventPayload], [o].[EventType], [o].[ExpireDate]\r\nFROM [OutboxMessages] AS [o]\r\nWHERE ([o].[ExpireDate] IS NULL) OR [o].[ExpireDate] >= GETDATE()\"","fields":{"elapsed":"0","parameters":"","commandType":"Text","commandTimeout":30,"newLine":"\r\n","commandText":"SELECT [o].[Id], [o].[EventDate], [o].[EventPayload], [o].[EventType], [o].[ExpireDate]\r\nFROM [OutboxMessages] AS [o]\r\nWHERE ([o].[ExpireDate] IS NULL) OR [o].[ExpireDate] >= GETDATE()","EventId":{"Id":20101,"Name":"Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted"},"SourceContext":"Microsoft.EntityFrameworkCore.Database.Command"}}
{"@timestamp":"2023-05-15T10:05:55.7104503+03:30","level":"Information","messageTemplate":"Executed DbCommand ({elapsed}ms) [Parameters=[{parameters}], CommandType='{commandType}', CommandTimeout='{commandTimeout}']{newLine}{commandText}","message":"Executed DbCommand (\"0\"ms) [Parameters=[\"\"], CommandType='Text', CommandTimeout='30']\"\r\n\"\"SELECT [o].[Id], [o].[EventDate], [o].[EventPayload], [o].[EventType], [o].[ExpireDate]\r\nFROM [OutboxMessages] AS [o]\r\nWHERE ([o].[ExpireDate] IS NULL) OR [o].[ExpireDate] >= GETDATE()\"","fields":{"elapsed":"0","parameters":"","commandType":"Text","commandTimeout":30,"newLine":"\r\n","commandText":"SELECT [o].[Id], [o].[EventDate], [o].[EventPayload], [o].[EventType], [o].[ExpireDate]\r\nFROM [OutboxMessages] AS [o]\r\nWHERE ([o].[ExpireDate] IS NULL) OR [o].[ExpireDate] >= GETDATE()","EventId":{"Id":20101,"Name":"Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted"},"SourceContext":"Microsoft.EntityFrameworkCore.Database.Command"}}
{"@timestamp":"2023-05-15T10:06:00.7282087+03:30","level":"Information","messageTemplate":"Executed DbCommand ({elapsed}ms) [Parameters=[{parameters}], CommandType='{commandType}', CommandTimeout='{commandTimeout}']{newLine}{commandText}","message":"Executed DbCommand (\"1\"ms) [Parameters=[\"\"], CommandType='Text', CommandTimeout='30']\"\r\n\"\"SELECT [o].[Id], [o].[EventDate], [o].[EventPayload], [o].[EventType], [o].[ExpireDate]\r\nFROM [OutboxMessages] AS [o]\r\nWHERE ([o].[ExpireDate] IS NULL) OR [o].[ExpireDate] >= GETDATE()\"","fields":{"elapsed":"1","parameters":"","commandType":"Text","commandTimeout":30,"newLine":"\r\n","commandText":"SELECT [o].[Id], [o].[EventDate], [o].[EventPayload], [o].[EventType], [o].[ExpireDate]\r\nFROM [OutboxMessages] AS [o]\r\nWHERE ([o].[ExpireDate] IS NULL) OR [o].[ExpireDate] >= GETDATE()","EventId":{"Id":20101,"Name":"Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted"},"SourceContext":"Microsoft.EntityFrameworkCore.Database.Command"}}
{"@timestamp":"2023-05-15T10:06:05.7303196+03:30","level":"Information","messageTemplate":"Executed DbCommand ({elapsed}ms) [Parameters=[{parameters}], CommandType='{commandType}', CommandTimeout='{commandTimeout}']{newLine}{commandText}","message":"Executed DbCommand (\"1\"ms) [Parameters=[\"\"], CommandType='Text', CommandTimeout='30']\"\r\n\"\"SELECT [o].[Id], [o].[EventDate], [o].[EventPayload], [o].[EventType], [o].[ExpireDate]\r\nFROM [OutboxMessages] AS [o]\r\nWHERE ([o].[ExpireDate] IS NULL) OR [o].[ExpireDate] >= GETDATE()\"","fields":{"elapsed":"1","parameters":"","commandType":"Text","commandTimeout":30,"newLine":"\r\n","commandText":"SELECT [o].[Id], [o].[EventDate], [o].[EventPayload], [o].[EventType], [o].[ExpireDate]\r\nFROM [OutboxMessages] AS [o]\r\nWHERE ([o].[ExpireDate] IS NULL) OR [o].[ExpireDate] >= GETDATE()","EventId":{"Id":20101,"Name":"Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted"},"SourceContext":"Microsoft.EntityFrameworkCore.Database.Command"}}
{"@timestamp":"2023-05-15T10:06:10.7412797+03:30","level":"Information","messageTemplate":"Executed DbCommand ({elapsed}ms) [Parameters=[{parameters}], CommandType='{commandType}', CommandTimeout='{commandTimeout}']{newLine}{commandText}","message":"Executed DbCommand (\"1\"ms) [Parameters=[\"\"], CommandType='Text', CommandTimeout='30']\"\r\n\"\"SELECT [o].[Id], [o].[EventDate], [o].[EventPayload], [o].[EventType], [o].[ExpireDate]\r\nFROM [OutboxMessages] AS [o]\r\nWHERE ([o].[ExpireDate] IS NULL) OR [o].[ExpireDate] >= GETDATE()\"","fields":{"elapsed":"1","parameters":"","commandType":"Text","commandTimeout":30,"newLine":"\r\n","commandText":"SELECT [o].[Id], [o].[EventDate], [o].[EventPayload], [o].[EventType], [o].[ExpireDate]\r\nFROM [OutboxMessages] AS [o]\r\nWHERE ([o].[ExpireDate] IS NULL) OR [o].[ExpireDate] >= GETDATE()","EventId":{"Id":20101,"Name":"Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted"},"SourceContext":"Microsoft.EntityFrameworkCore.Database.Command"}}
{"@timestamp":"2023-05-15T10:06:15.7478573+03:30","level":"Information","messageTemplate":"Executed DbCommand ({elapsed}ms) [Parameters=[{parameters}], CommandType='{commandType}', CommandTimeout='{commandTimeout}']{newLine}{commandText}","message":"Executed DbCommand (\"0\"ms) [Parameters=[\"\"], CommandType='Text', CommandTimeout='30']\"\r\n\"\"SELECT [o].[Id], [o].[EventDate], [o].[EventPayload], [o].[EventType], [o].[ExpireDate]\r\nFROM [OutboxMessages] AS [o]\r\nWHERE ([o].[ExpireDate] IS NULL) OR [o].[ExpireDate] >= GETDATE()\"","fields":{"elapsed":"0","parameters":"","commandType":"Text","commandTimeout":30,"newLine":"\r\n","commandText":"SELECT [o].[Id], [o].[EventDate], [o].[EventPayload], [o].[EventType], [o].[ExpireDate]\r\nFROM [OutboxMessages] AS [o]\r\nWHERE ([o].[ExpireDate] IS NULL) OR [o].[ExpireDate] >= GETDATE()","EventId":{"Id":20101,"Name":"Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted"},"SourceContext":"Microsoft.EntityFrameworkCore.Database.Command"}}
{"@timestamp":"2023-05-15T10:06:20.7539648+03:30","level":"Information","messageTemplate":"Executed DbCommand ({elapsed}ms) [Parameters=[{parameters}], CommandType='{commandType}', CommandTimeout='{commandTimeout}']{newLine}{commandText}","message":"Executed DbCommand (\"0\"ms) [Parameters=[\"\"], CommandType='Text', CommandTimeout='30']\"\r\n\"\"SELECT [o].[Id], [o].[EventDate], [o].[EventPayload], [o].[EventType], [o].[ExpireDate]\r\nFROM [OutboxMessages] AS [o]\r\nWHERE ([o].[ExpireDate] IS NULL) OR [o].[ExpireDate] >= GETDATE()\"","fields":{"elapsed":"0","parameters":"","commandType":"Text","commandTimeout":30,"newLine":"\r\n","commandText":"SELECT [o].[Id], [o].[EventDate], [o].[EventPayload], [o].[EventType], [o].[ExpireDate]\r\nFROM [OutboxMessages] AS [o]\r\nWHERE ([o].[ExpireDate] IS NULL) OR [o].[ExpireDate] >= GETDATE()","EventId":{"Id":20101,"Name":"Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted"},"SourceContext":"Microsoft.EntityFrameworkCore.Database.Command"}}
{"@timestamp":"2023-05-15T10:06:25.7691387+03:30","level":"Information","messageTemplate":"Executed DbCommand ({elapsed}ms) [Parameters=[{parameters}], CommandType='{commandType}', CommandTimeout='{commandTimeout}']{newLine}{commandText}","message":"Executed DbCommand (\"1\"ms) [Parameters=[\"\"], CommandType='Text', CommandTimeout='30']\"\r\n\"\"SELECT [o].[Id], [o].[EventDate], [o].[EventPayload], [o].[EventType], [o].[ExpireDate]\r\nFROM [OutboxMessages] AS [o]\r\nWHERE ([o].[ExpireDate] IS NULL) OR [o].[ExpireDate] >= GETDATE()\"","fields":{"elapsed":"1","parameters":"","commandType":"Text","commandTimeout":30,"newLine":"\r\n","commandText":"SELECT [o].[Id], [o].[EventDate], [o].[EventPayload], [o].[EventType], [o].[ExpireDate]\r\nFROM [OutboxMessages] AS [o]\r\nWHERE ([o].[ExpireDate] IS NULL) OR [o].[ExpireDate] >= GETDATE()","EventId":{"Id":20101,"Name":"Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted"},"SourceContext":"Microsoft.EntityFrameworkCore.Database.Command"}}
{"@timestamp":"2023-05-15T10:06:30.7836418+03:30","level":"Information","messageTemplate":"Executed DbCommand ({elapsed}ms) [Parameters=[{parameters}], CommandType='{commandType}', CommandTimeout='{commandTimeout}']{newLine}{commandText}","message":"Executed DbCommand (\"0\"ms) [Parameters=[\"\"], CommandType='Text', CommandTimeout='30']\"\r\n\"\"SELECT [o].[Id], [o].[EventDate], [o].[EventPayload], [o].[EventType], [o].[ExpireDate]\r\nFROM [OutboxMessages] AS [o]\r\nWHERE ([o].[ExpireDate] IS NULL) OR [o].[ExpireDate] >= GETDATE()\"","fields":{"elapsed":"0","parameters":"","commandType":"Text","commandTimeout":30,"newLine":"\r\n","commandText":"SELECT [o].[Id], [o].[EventDate], [o].[EventPayload], [o].[EventType], [o].[ExpireDate]\r\nFROM [OutboxMessages] AS [o]\r\nWHERE ([o].[ExpireDate] IS NULL) OR [o].[ExpireDate] >= GETDATE()","EventId":{"Id":20101,"Name":"Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted"},"SourceContext":"Microsoft.EntityFrameworkCore.Database.Command"}}
{"@timestamp":"2023-05-15T10:06:35.7859401+03:30","level":"Information","messageTemplate":"Executed DbCommand ({elapsed}ms) [Parameters=[{parameters}], CommandType='{commandType}', CommandTimeout='{commandTimeout}']{newLine}{commandText}","message":"Executed DbCommand (\"0\"ms) [Parameters=[\"\"], CommandType='Text', CommandTimeout='30']\"\r\n\"\"SELECT [o].[Id], [o].[EventDate], [o].[EventPayload], [o].[EventType], [o].[ExpireDate]\r\nFROM [OutboxMessages] AS [o]\r\nWHERE ([o].[ExpireDate] IS NULL) OR [o].[ExpireDate] >= GETDATE()\"","fields":{"elapsed":"0","parameters":"","commandType":"Text","commandTimeout":30,"newLine":"\r\n","commandText":"SELECT [o].[Id], [o].[EventDate], [o].[EventPayload], [o].[EventType], [o].[ExpireDate]\r\nFROM [OutboxMessages] AS [o]\r\nWHERE ([o].[ExpireDate] IS NULL) OR [o].[ExpireDate] >= GETDATE()","EventId":{"Id":20101,"Name":"Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted"},"SourceContext":"Microsoft.EntityFrameworkCore.Database.Command"}}
{"@timestamp":"2023-05-15T10:06:40.7946902+03:30","level":"Information","messageTemplate":"Executed DbCommand ({elapsed}ms) [Parameters=[{parameters}], CommandType='{commandType}', CommandTimeout='{commandTimeout}']{newLine}{commandText}","message":"Executed DbCommand (\"1\"ms) [Parameters=[\"\"], CommandType='Text', CommandTimeout='30']\"\r\n\"\"SELECT [o].[Id], [o].[EventDate], [o].[EventPayload], [o].[EventType], [o].[ExpireDate]\r\nFROM [OutboxMessages] AS [o]\r\nWHERE ([o].[ExpireDate] IS NULL) OR [o].[ExpireDate] >= GETDATE()\"","fields":{"elapsed":"1","parameters":"","commandType":"Text","commandTimeout":30,"newLine":"\r\n","commandText":"SELECT [o].[Id], [o].[EventDate], [o].[EventPayload], [o].[EventType], [o].[ExpireDate]\r\nFROM [OutboxMessages] AS [o]\r\nWHERE ([o].[ExpireDate] IS NULL) OR [o].[ExpireDate] >= GETDATE()","EventId":{"Id":20101,"Name":"Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted"},"SourceContext":"Microsoft.EntityFrameworkCore.Database.Command"}}
{"@timestamp":"2023-05-15T10:06:45.8040500+03:30","level":"Information","messageTemplate":"Executed DbCommand ({elapsed}ms) [Parameters=[{parameters}], CommandType='{commandType}', CommandTimeout='{commandTimeout}']{newLine}{commandText}","message":"Executed DbCommand (\"0\"ms) [Parameters=[\"\"], CommandType='Text', CommandTimeout='30']\"\r\n\"\"SELECT [o].[Id], [o].[EventDate], [o].[EventPayload], [o].[EventType], [o].[ExpireDate]\r\nFROM [OutboxMessages] AS [o]\r\nWHERE ([o].[ExpireDate] IS NULL) OR [o].[ExpireDate] >= GETDATE()\"","fields":{"elapsed":"0","parameters":"","commandType":"Text","commandTimeout":30,"newLine":"\r\n","commandText":"SELECT [o].[Id], [o].[EventDate], [o].[EventPayload], [o].[EventType], [o].[ExpireDate]\r\nFROM [OutboxMessages] AS [o]\r\nWHERE ([o].[ExpireDate] IS NULL) OR [o].[ExpireDate] >= GETDATE()","EventId":{"Id":20101,"Name":"Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted"},"SourceContext":"Microsoft.EntityFrameworkCore.Database.Command"}}
{"@timestamp":"2023-05-15T10:06:50.8100050+03:30","level":"Information","messageTemplate":"Executed DbCommand ({elapsed}ms) [Parameters=[{parameters}], CommandType='{commandType}', CommandTimeout='{commandTimeout}']{newLine}{commandText}","message":"Executed DbCommand (\"0\"ms) [Parameters=[\"\"], CommandType='Text', CommandTimeout='30']\"\r\n\"\"SELECT [o].[Id], [o].[EventDate], [o].[EventPayload], [o].[EventType], [o].[ExpireDate]\r\nFROM [OutboxMessages] AS [o]\r\nWHERE ([o].[ExpireDate] IS NULL) OR [o].[ExpireDate] >= GETDATE()\"","fields":{"elapsed":"0","parameters":"","commandType":"Text","commandTimeout":30,"newLine":"\r\n","commandText":"SELECT [o].[Id], [o].[EventDate], [o].[EventPayload], [o].[EventType], [o].[ExpireDate]\r\nFROM [OutboxMessages] AS [o]\r\nWHERE ([o].[ExpireDate] IS NULL) OR [o].[ExpireDate] >= GETDATE()","EventId":{"Id":20101,"Name":"Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted"},"SourceContext":"Microsoft.EntityFrameworkCore.Database.Command"}}
{"@timestamp":"2023-05-15T10:06:55.8114735+03:30","level":"Information","messageTemplate":"Executed DbCommand ({elapsed}ms) [Parameters=[{parameters}], CommandType='{commandType}', CommandTimeout='{commandTimeout}']{newLine}{commandText}","message":"Executed DbCommand (\"0\"ms) [Parameters=[\"\"], CommandType='Text', CommandTimeout='30']\"\r\n\"\"SELECT [o].[Id], [o].[EventDate], [o].[EventPayload], [o].[EventType], [o].[ExpireDate]\r\nFROM [OutboxMessages] AS [o]\r\nWHERE ([o].[ExpireDate] IS NULL) OR [o].[ExpireDate] >= GETDATE()\"","fields":{"elapsed":"0","parameters":"","commandType":"Text","commandTimeout":30,"newLine":"\r\n","commandText":"SELECT [o].[Id], [o].[EventDate], [o].[EventPayload], [o].[EventType], [o].[ExpireDate]\r\nFROM [OutboxMessages] AS [o]\r\nWHERE ([o].[ExpireDate] IS NULL) OR [o].[ExpireDate] >= GETDATE()","EventId":{"Id":20101,"Name":"Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted"},"SourceContext":"Microsoft.EntityFrameworkCore.Database.Command"}}
{"@timestamp":"2023-05-15T10:07:00.8206409+03:30","level":"Information","messageTemplate":"Executed DbCommand ({elapsed}ms) [Parameters=[{parameters}], CommandType='{commandType}', CommandTimeout='{commandTimeout}']{newLine}{commandText}","message":"Executed DbCommand (\"0\"ms) [Parameters=[\"\"], CommandType='Text', CommandTimeout='30']\"\r\n\"\"SELECT [o].[Id], [o].[EventDate], [o].[EventPayload], [o].[EventType], [o].[ExpireDate]\r\nFROM [OutboxMessages] AS [o]\r\nWHERE ([o].[ExpireDate] IS NULL) OR [o].[ExpireDate] >= GETDATE()\"","fields":{"elapsed":"0","parameters":"","commandType":"Text","commandTimeout":30,"newLine":"\r\n","commandText":"SELECT [o].[Id], [o].[EventDate], [o].[EventPayload], [o].[EventType], [o].[ExpireDate]\r\nFROM [OutboxMessages] AS [o]\r\nWHERE ([o].[ExpireDate] IS NULL) OR [o].[ExpireDate] >= GETDATE()","EventId":{"Id":20101,"Name":"Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted"},"SourceContext":"Microsoft.EntityFrameworkCore.Database.Command"}}
{"@timestamp":"2023-05-15T10:07:05.8309515+03:30","level":"Information","messageTemplate":"Executed DbCommand ({elapsed}ms) [Parameters=[{parameters}], CommandType='{commandType}', CommandTimeout='{commandTimeout}']{newLine}{commandText}","message":"Executed DbCommand (\"0\"ms) [Parameters=[\"\"], CommandType='Text', CommandTimeout='30']\"\r\n\"\"SELECT [o].[Id], [o].[EventDate], [o].[EventPayload], [o].[EventType], [o].[ExpireDate]\r\nFROM [OutboxMessages] AS [o]\r\nWHERE ([o].[ExpireDate] IS NULL) OR [o].[ExpireDate] >= GETDATE()\"","fields":{"elapsed":"0","parameters":"","commandType":"Text","commandTimeout":30,"newLine":"\r\n","commandText":"SELECT [o].[Id], [o].[EventDate], [o].[EventPayload], [o].[EventType], [o].[ExpireDate]\r\nFROM [OutboxMessages] AS [o]\r\nWHERE ([o].[ExpireDate] IS NULL) OR [o].[ExpireDate] >= GETDATE()","EventId":{"Id":20101,"Name":"Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted"},"SourceContext":"Microsoft.EntityFrameworkCore.Database.Command"}}
{"@timestamp":"2023-05-15T10:07:10.8371127+03:30","level":"Information","messageTemplate":"Executed DbCommand ({elapsed}ms) [Parameters=[{parameters}], CommandType='{commandType}', CommandTimeout='{commandTimeout}']{newLine}{commandText}","message":"Executed DbCommand (\"1\"ms) [Parameters=[\"\"], CommandType='Text', CommandTimeout='30']\"\r\n\"\"SELECT [o].[Id], [o].[EventDate], [o].[EventPayload], [o].[EventType], [o].[ExpireDate]\r\nFROM [OutboxMessages] AS [o]\r\nWHERE ([o].[ExpireDate] IS NULL) OR [o].[ExpireDate] >= GETDATE()\"","fields":{"elapsed":"1","parameters":"","commandType":"Text","commandTimeout":30,"newLine":"\r\n","commandText":"SELECT [o].[Id], [o].[EventDate], [o].[EventPayload], [o].[EventType], [o].[ExpireDate]\r\nFROM [OutboxMessages] AS [o]\r\nWHERE ([o].[ExpireDate] IS NULL) OR [o].[ExpireDate] >= GETDATE()","EventId":{"Id":20101,"Name":"Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted"},"SourceContext":"Microsoft.EntityFrameworkCore.Database.Command"}}
{"@timestamp":"2023-05-15T10:07:15.8422186+03:30","level":"Information","messageTemplate":"Executed DbCommand ({elapsed}ms) [Parameters=[{parameters}], CommandType='{commandType}', CommandTimeout='{commandTimeout}']{newLine}{commandText}","message":"Executed DbCommand (\"1\"ms) [Parameters=[\"\"], CommandType='Text', CommandTimeout='30']\"\r\n\"\"SELECT [o].[Id], [o].[EventDate], [o].[EventPayload], [o].[EventType], [o].[ExpireDate]\r\nFROM [OutboxMessages] AS [o]\r\nWHERE ([o].[ExpireDate] IS NULL) OR [o].[ExpireDate] >= GETDATE()\"","fields":{"elapsed":"1","parameters":"","commandType":"Text","commandTimeout":30,"newLine":"\r\n","commandText":"SELECT [o].[Id], [o].[EventDate], [o].[EventPayload], [o].[EventType], [o].[ExpireDate]\r\nFROM [OutboxMessages] AS [o]\r\nWHERE ([o].[ExpireDate] IS NULL) OR [o].[ExpireDate] >= GETDATE()","EventId":{"Id":20101,"Name":"Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted"},"SourceContext":"Microsoft.EntityFrameworkCore.Database.Command"}}
{"@timestamp":"2023-05-15T10:07:20.8539804+03:30","level":"Information","messageTemplate":"Executed DbCommand ({elapsed}ms) [Parameters=[{parameters}], CommandType='{commandType}', CommandTimeout='{commandTimeout}']{newLine}{commandText}","message":"Executed DbCommand (\"0\"ms) [Parameters=[\"\"], CommandType='Text', CommandTimeout='30']\"\r\n\"\"SELECT [o].[Id], [o].[EventDate], [o].[EventPayload], [o].[EventType], [o].[ExpireDate]\r\nFROM [OutboxMessages] AS [o]\r\nWHERE ([o].[ExpireDate] IS NULL) OR [o].[ExpireDate] >= GETDATE()\"","fields":{"elapsed":"0","parameters":"","commandType":"Text","commandTimeout":30,"newLine":"\r\n","commandText":"SELECT [o].[Id], [o].[EventDate], [o].[EventPayload], [o].[EventType], [o].[ExpireDate]\r\nFROM [OutboxMessages] AS [o]\r\nWHERE ([o].[ExpireDate] IS NULL) OR [o].[ExpireDate] >= GETDATE()","EventId":{"Id":20101,"Name":"Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted"},"SourceContext":"Microsoft.EntityFrameworkCore.Database.Command"}}
{"@timestamp":"2023-05-15T10:07:25.8557533+03:30","level":"Information","messageTemplate":"Executed DbCommand ({elapsed}ms) [Parameters=[{parameters}], CommandType='{commandType}', CommandTimeout='{commandTimeout}']{newLine}{commandText}","message":"Executed DbCommand (\"0\"ms) [Parameters=[\"\"], CommandType='Text', CommandTimeout='30']\"\r\n\"\"SELECT [o].[Id], [o].[EventDate], [o].[EventPayload], [o].[EventType], [o].[ExpireDate]\r\nFROM [OutboxMessages] AS [o]\r\nWHERE ([o].[ExpireDate] IS NULL) OR [o].[ExpireDate] >= GETDATE()\"","fields":{"elapsed":"0","parameters":"","commandType":"Text","commandTimeout":30,"newLine":"\r\n","commandText":"SELECT [o].[Id], [o].[EventDate], [o].[EventPayload], [o].[EventType], [o].[ExpireDate]\r\nFROM [OutboxMessages] AS [o]\r\nWHERE ([o].[ExpireDate] IS NULL) OR [o].[ExpireDate] >= GETDATE()","EventId":{"Id":20101,"Name":"Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted"},"SourceContext":"Microsoft.EntityFrameworkCore.Database.Command"}}
{"@timestamp":"2023-05-15T10:07:30.8620779+03:30","level":"Information","messageTemplate":"Executed DbCommand ({elapsed}ms) [Parameters=[{parameters}], CommandType='{commandType}', CommandTimeout='{commandTimeout}']{newLine}{commandText}","message":"Executed DbCommand (\"1\"ms) [Parameters=[\"\"], CommandType='Text', CommandTimeout='30']\"\r\n\"\"SELECT [o].[Id], [o].[EventDate], [o].[EventPayload], [o].[EventType], [o].[ExpireDate]\r\nFROM [OutboxMessages] AS [o]\r\nWHERE ([o].[ExpireDate] IS NULL) OR [o].[ExpireDate] >= GETDATE()\"","fields":{"elapsed":"1","parameters":"","commandType":"Text","commandTimeout":30,"newLine":"\r\n","commandText":"SELECT [o].[Id], [o].[EventDate], [o].[EventPayload], [o].[EventType], [o].[ExpireDate]\r\nFROM [OutboxMessages] AS [o]\r\nWHERE ([o].[ExpireDate] IS NULL) OR [o].[ExpireDate] >= GETDATE()","EventId":{"Id":20101,"Name":"Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted"},"SourceContext":"Microsoft.EntityFrameworkCore.Database.Command"}}
{"@timestamp":"2023-05-15T10:07:35.8743232+03:30","level":"Information","messageTemplate":"Executed DbCommand ({elapsed}ms) [Parameters=[{parameters}], CommandType='{commandType}', CommandTimeout='{commandTimeout}']{newLine}{commandText}","message":"Executed DbCommand (\"0\"ms) [Parameters=[\"\"], CommandType='Text', CommandTimeout='30']\"\r\n\"\"SELECT [o].[Id], [o].[EventDate], [o].[EventPayload], [o].[EventType], [o].[ExpireDate]\r\nFROM [OutboxMessages] AS [o]\r\nWHERE ([o].[ExpireDate] IS NULL) OR [o].[ExpireDate] >= GETDATE()\"","fields":{"elapsed":"0","parameters":"","commandType":"Text","commandTimeout":30,"newLine":"\r\n","commandText":"SELECT [o].[Id], [o].[EventDate], [o].[EventPayload], [o].[EventType], [o].[ExpireDate]\r\nFROM [OutboxMessages] AS [o]\r\nWHERE ([o].[ExpireDate] IS NULL) OR [o].[ExpireDate] >= GETDATE()","EventId":{"Id":20101,"Name":"Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted"},"SourceContext":"Microsoft.EntityFrameworkCore.Database.Command"}}
{"@timestamp":"2023-05-15T10:07:40.8853680+03:30","level":"Information","messageTemplate":"Executed DbCommand ({elapsed}ms) [Parameters=[{parameters}], CommandType='{commandType}', CommandTimeout='{commandTimeout}']{newLine}{commandText}","message":"Executed DbCommand (\"0\"ms) [Parameters=[\"\"], CommandType='Text', CommandTimeout='30']\"\r\n\"\"SELECT [o].[Id], [o].[EventDate], [o].[EventPayload], [o].[EventType], [o].[ExpireDate]\r\nFROM [OutboxMessages] AS [o]\r\nWHERE ([o].[ExpireDate] IS NULL) OR [o].[ExpireDate] >= GETDATE()\"","fields":{"elapsed":"0","parameters":"","commandType":"Text","commandTimeout":30,"newLine":"\r\n","commandText":"SELECT [o].[Id], [o].[EventDate], [o].[EventPayload], [o].[EventType], [o].[ExpireDate]\r\nFROM [OutboxMessages] AS [o]\r\nWHERE ([o].[ExpireDate] IS NULL) OR [o].[ExpireDate] >= GETDATE()","EventId":{"Id":20101,"Name":"Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted"},"SourceContext":"Microsoft.EntityFrameworkCore.Database.Command"}}
{"@timestamp":"2023-05-15T10:07:45.8889918+03:30","level":"Information","messageTemplate":"Executed DbCommand ({elapsed}ms) [Parameters=[{parameters}], CommandType='{commandType}', CommandTimeout='{commandTimeout}']{newLine}{commandText}","message":"Executed DbCommand (\"0\"ms) [Parameters=[\"\"], CommandType='Text', CommandTimeout='30']\"\r\n\"\"SELECT [o].[Id], [o].[EventDate], [o].[EventPayload], [o].[EventType], [o].[ExpireDate]\r\nFROM [OutboxMessages] AS [o]\r\nWHERE ([o].[ExpireDate] IS NULL) OR [o].[ExpireDate] >= GETDATE()\"","fields":{"elapsed":"0","parameters":"","commandType":"Text","commandTimeout":30,"newLine":"\r\n","commandText":"SELECT [o].[Id], [o].[EventDate], [o].[EventPayload], [o].[EventType], [o].[ExpireDate]\r\nFROM [OutboxMessages] AS [o]\r\nWHERE ([o].[ExpireDate] IS NULL) OR [o].[ExpireDate] >= GETDATE()","EventId":{"Id":20101,"Name":"Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted"},"SourceContext":"Microsoft.EntityFrameworkCore.Database.Command"}}
{"@timestamp":"2023-05-15T10:07:50.9055180+03:30","level":"Information","messageTemplate":"Executed DbCommand ({elapsed}ms) [Parameters=[{parameters}], CommandType='{commandType}', CommandTimeout='{commandTimeout}']{newLine}{commandText}","message":"Executed DbCommand (\"0\"ms) [Parameters=[\"\"], CommandType='Text', CommandTimeout='30']\"\r\n\"\"SELECT [o].[Id], [o].[EventDate], [o].[EventPayload], [o].[EventType], [o].[ExpireDate]\r\nFROM [OutboxMessages] AS [o]\r\nWHERE ([o].[ExpireDate] IS NULL) OR [o].[ExpireDate] >= GETDATE()\"","fields":{"elapsed":"0","parameters":"","commandType":"Text","commandTimeout":30,"newLine":"\r\n","commandText":"SELECT [o].[Id], [o].[EventDate], [o].[EventPayload], [o].[EventType], [o].[ExpireDate]\r\nFROM [OutboxMessages] AS [o]\r\nWHERE ([o].[ExpireDate] IS NULL) OR [o].[ExpireDate] >= GETDATE()","EventId":{"Id":20101,"Name":"Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted"},"SourceContext":"Microsoft.EntityFrameworkCore.Database.Command"}}
{"@timestamp":"2023-05-15T10:07:55.9191010+03:30","level":"Information","messageTemplate":"Executed DbCommand ({elapsed}ms) [Parameters=[{parameters}], CommandType='{commandType}', CommandTimeout='{commandTimeout}']{newLine}{commandText}","message":"Executed DbCommand (\"1\"ms) [Parameters=[\"\"], CommandType='Text', CommandTimeout='30']\"\r\n\"\"SELECT [o].[Id], [o].[EventDate], [o].[EventPayload], [o].[EventType], [o].[ExpireDate]\r\nFROM [OutboxMessages] AS [o]\r\nWHERE ([o].[ExpireDate] IS NULL) OR [o].[ExpireDate] >= GETDATE()\"","fields":{"elapsed":"1","parameters":"","commandType":"Text","commandTimeout":30,"newLine":"\r\n","commandText":"SELECT [o].[Id], [o].[EventDate], [o].[EventPayload], [o].[EventType], [o].[ExpireDate]\r\nFROM [OutboxMessages] AS [o]\r\nWHERE ([o].[ExpireDate] IS NULL) OR [o].[ExpireDate] >= GETDATE()","EventId":{"Id":20101,"Name":"Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted"},"SourceContext":"Microsoft.EntityFrameworkCore.Database.Command"}}
{"@timestamp":"2023-05-15T10:07:59.8386469+03:30","level":"Information","messageTemplate":"{HostingRequestStartingLog:l}","message":"Request starting HTTP/2 GET https://localhost:7211/swagger/index.html - -","fields":{"Protocol":"HTTP/2","Method":"GET","ContentType":null,"ContentLength":null,"Scheme":"https","Host":"localhost:7211","PathBase":"","Path":"/swagger/index.html","QueryString":"","HostingRequestStartingLog":"Request starting HTTP/2 GET https://localhost:7211/swagger/index.html - -","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HMQL1J5MT4T7:00000019","RequestPath":"/swagger/index.html","ConnectionId":"0HMQL1J5MT4T7"},"renderings":{"HostingRequestStartingLog":[{"Format":"l","Rendering":"Request starting HTTP/2 GET https://localhost:7211/swagger/index.html - -"}]}}
{"@timestamp":"2023-05-15T10:07:59.8543106+03:30","level":"Information","messageTemplate":"{HostingRequestFinishedLog:l}","message":"Request finished HTTP/2 GET https://localhost:7211/swagger/index.html - - - 200 - text/html;charset=utf-8 15.5772ms","fields":{"ElapsedMilliseconds":15.5772,"StatusCode":200,"ContentType":"text/html;charset=utf-8","ContentLength":null,"Protocol":"HTTP/2","Method":"GET","Scheme":"https","Host":"localhost:7211","PathBase":"","Path":"/swagger/index.html","QueryString":"","HostingRequestFinishedLog":"Request finished HTTP/2 GET https://localhost:7211/swagger/index.html - - - 200 - text/html;charset=utf-8 15.5772ms","EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HMQL1J5MT4T7:00000019","RequestPath":"/swagger/index.html","ConnectionId":"0HMQL1J5MT4T7"},"renderings":{"HostingRequestFinishedLog":[{"Format":"l","Rendering":"Request finished HTTP/2 GET https://localhost:7211/swagger/index.html - - - 200 - text/html;charset=utf-8 15.5772ms"}]}}
{"@timestamp":"2023-05-15T10:07:59.8853389+03:30","level":"Information","messageTemplate":"{HostingRequestStartingLog:l}","message":"Request starting HTTP/2 GET https://localhost:7211/_framework/aspnetcore-browser-refresh.js - -","fields":{"Protocol":"HTTP/2","Method":"GET","ContentType":null,"ContentLength":null,"Scheme":"https","Host":"localhost:7211","PathBase":"","Path":"/_framework/aspnetcore-browser-refresh.js","QueryString":"","HostingRequestStartingLog":"Request starting HTTP/2 GET https://localhost:7211/_framework/aspnetcore-browser-refresh.js - -","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HMQL1J5MT4T7:0000001B","RequestPath":"/_framework/aspnetcore-browser-refresh.js","ConnectionId":"0HMQL1J5MT4T7"},"renderings":{"HostingRequestStartingLog":[{"Format":"l","Rendering":"Request starting HTTP/2 GET https://localhost:7211/_framework/aspnetcore-browser-refresh.js - -"}]}}
{"@timestamp":"2023-05-15T10:07:59.8853389+03:30","level":"Information","messageTemplate":"{HostingRequestStartingLog:l}","message":"Request starting HTTP/2 GET https://localhost:7211/_vs/browserLink - -","fields":{"Protocol":"HTTP/2","Method":"GET","ContentType":null,"ContentLength":null,"Scheme":"https","Host":"localhost:7211","PathBase":"","Path":"/_vs/browserLink","QueryString":"","HostingRequestStartingLog":"Request starting HTTP/2 GET https://localhost:7211/_vs/browserLink - -","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HMQL1J5MT4T7:0000001D","RequestPath":"/_vs/browserLink","ConnectionId":"0HMQL1J5MT4T7"},"renderings":{"HostingRequestStartingLog":[{"Format":"l","Rendering":"Request starting HTTP/2 GET https://localhost:7211/_vs/browserLink - -"}]}}
{"@timestamp":"2023-05-15T10:07:59.8869409+03:30","level":"Information","messageTemplate":"{HostingRequestFinishedLog:l}","message":"Request finished HTTP/2 GET https://localhost:7211/_framework/aspnetcore-browser-refresh.js - - - 200 12018 application/javascript;+charset=utf-8 1.5718ms","fields":{"ElapsedMilliseconds":1.5718,"StatusCode":200,"ContentType":"application/javascript; charset=utf-8","ContentLength":12018,"Protocol":"HTTP/2","Method":"GET","Scheme":"https","Host":"localhost:7211","PathBase":"","Path":"/_framework/aspnetcore-browser-refresh.js","QueryString":"","HostingRequestFinishedLog":"Request finished HTTP/2 GET https://localhost:7211/_framework/aspnetcore-browser-refresh.js - - - 200 12018 application/javascript;+charset=utf-8 1.5718ms","EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HMQL1J5MT4T7:0000001B","RequestPath":"/_framework/aspnetcore-browser-refresh.js","ConnectionId":"0HMQL1J5MT4T7"},"renderings":{"HostingRequestFinishedLog":[{"Format":"l","Rendering":"Request finished HTTP/2 GET https://localhost:7211/_framework/aspnetcore-browser-refresh.js - - - 200 12018 application/javascript;+charset=utf-8 1.5718ms"}]}}
{"@timestamp":"2023-05-15T10:07:59.9314832+03:30","level":"Information","messageTemplate":"{HostingRequestFinishedLog:l}","message":"Request finished HTTP/2 GET https://localhost:7211/_vs/browserLink - - - 200 - text/javascript;+charset=UTF-8 46.0101ms","fields":{"ElapsedMilliseconds":46.0101,"StatusCode":200,"ContentType":"text/javascript; charset=UTF-8","ContentLength":null,"Protocol":"HTTP/2","Method":"GET","Scheme":"https","Host":"localhost:7211","PathBase":"","Path":"/_vs/browserLink","QueryString":"","HostingRequestFinishedLog":"Request finished HTTP/2 GET https://localhost:7211/_vs/browserLink - - - 200 - text/javascript;+charset=UTF-8 46.0101ms","EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HMQL1J5MT4T7:0000001D","RequestPath":"/_vs/browserLink","ConnectionId":"0HMQL1J5MT4T7"},"renderings":{"HostingRequestFinishedLog":[{"Format":"l","Rendering":"Request finished HTTP/2 GET https://localhost:7211/_vs/browserLink - - - 200 - text/javascript;+charset=UTF-8 46.0101ms"}]}}
{"@timestamp":"2023-05-15T10:08:00.4259547+03:30","level":"Information","messageTemplate":"{HostingRequestStartingLog:l}","message":"Request starting HTTP/2 GET https://localhost:7211/swagger/v1/swagger.json - -","fields":{"Protocol":"HTTP/2","Method":"GET","ContentType":null,"ContentLength":null,"Scheme":"https","Host":"localhost:7211","PathBase":"","Path":"/swagger/v1/swagger.json","QueryString":"","HostingRequestStartingLog":"Request starting HTTP/2 GET https://localhost:7211/swagger/v1/swagger.json - -","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HMQL1J5MT4T7:0000001F","RequestPath":"/swagger/v1/swagger.json","ConnectionId":"0HMQL1J5MT4T7"},"renderings":{"HostingRequestStartingLog":[{"Format":"l","Rendering":"Request starting HTTP/2 GET https://localhost:7211/swagger/v1/swagger.json - -"}]}}
{"@timestamp":"2023-05-15T10:08:00.4323121+03:30","level":"Information","messageTemplate":"{HostingRequestFinishedLog:l}","message":"Request finished HTTP/2 GET https://localhost:7211/swagger/v1/swagger.json - - - 200 - application/json;charset=utf-8 6.7851ms","fields":{"ElapsedMilliseconds":6.7851,"StatusCode":200,"ContentType":"application/json;charset=utf-8","ContentLength":null,"Protocol":"HTTP/2","Method":"GET","Scheme":"https","Host":"localhost:7211","PathBase":"","Path":"/swagger/v1/swagger.json","QueryString":"","HostingRequestFinishedLog":"Request finished HTTP/2 GET https://localhost:7211/swagger/v1/swagger.json - - - 200 - application/json;charset=utf-8 6.7851ms","EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HMQL1J5MT4T7:0000001F","RequestPath":"/swagger/v1/swagger.json","ConnectionId":"0HMQL1J5MT4T7"},"renderings":{"HostingRequestFinishedLog":[{"Format":"l","Rendering":"Request finished HTTP/2 GET https://localhost:7211/swagger/v1/swagger.json - - - 200 - application/json;charset=utf-8 6.7851ms"}]}}
{"@timestamp":"2023-05-15T10:08:00.9214286+03:30","level":"Information","messageTemplate":"Executed DbCommand ({elapsed}ms) [Parameters=[{parameters}], CommandType='{commandType}', CommandTimeout='{commandTimeout}']{newLine}{commandText}","message":"Executed DbCommand (\"0\"ms) [Parameters=[\"\"], CommandType='Text', CommandTimeout='30']\"\r\n\"\"SELECT [o].[Id], [o].[EventDate], [o].[EventPayload], [o].[EventType], [o].[ExpireDate]\r\nFROM [OutboxMessages] AS [o]\r\nWHERE ([o].[ExpireDate] IS NULL) OR [o].[ExpireDate] >= GETDATE()\"","fields":{"elapsed":"0","parameters":"","commandType":"Text","commandTimeout":30,"newLine":"\r\n","commandText":"SELECT [o].[Id], [o].[EventDate], [o].[EventPayload], [o].[EventType], [o].[ExpireDate]\r\nFROM [OutboxMessages] AS [o]\r\nWHERE ([o].[ExpireDate] IS NULL) OR [o].[ExpireDate] >= GETDATE()","EventId":{"Id":20101,"Name":"Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted"},"SourceContext":"Microsoft.EntityFrameworkCore.Database.Command"}}
{"@timestamp":"2023-05-15T10:08:05.9287999+03:30","level":"Information","messageTemplate":"Executed DbCommand ({elapsed}ms) [Parameters=[{parameters}], CommandType='{commandType}', CommandTimeout='{commandTimeout}']{newLine}{commandText}","message":"Executed DbCommand (\"0\"ms) [Parameters=[\"\"], CommandType='Text', CommandTimeout='30']\"\r\n\"\"SELECT [o].[Id], [o].[EventDate], [o].[EventPayload], [o].[EventType], [o].[ExpireDate]\r\nFROM [OutboxMessages] AS [o]\r\nWHERE ([o].[ExpireDate] IS NULL) OR [o].[ExpireDate] >= GETDATE()\"","fields":{"elapsed":"0","parameters":"","commandType":"Text","commandTimeout":30,"newLine":"\r\n","commandText":"SELECT [o].[Id], [o].[EventDate], [o].[EventPayload], [o].[EventType], [o].[ExpireDate]\r\nFROM [OutboxMessages] AS [o]\r\nWHERE ([o].[ExpireDate] IS NULL) OR [o].[ExpireDate] >= GETDATE()","EventId":{"Id":20101,"Name":"Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted"},"SourceContext":"Microsoft.EntityFrameworkCore.Database.Command"}}
{"@timestamp":"2023-05-15T10:08:10.9361384+03:30","level":"Information","messageTemplate":"Executed DbCommand ({elapsed}ms) [Parameters=[{parameters}], CommandType='{commandType}', CommandTimeout='{commandTimeout}']{newLine}{commandText}","message":"Executed DbCommand (\"0\"ms) [Parameters=[\"\"], CommandType='Text', CommandTimeout='30']\"\r\n\"\"SELECT [o].[Id], [o].[EventDate], [o].[EventPayload], [o].[EventType], [o].[ExpireDate]\r\nFROM [OutboxMessages] AS [o]\r\nWHERE ([o].[ExpireDate] IS NULL) OR [o].[ExpireDate] >= GETDATE()\"","fields":{"elapsed":"0","parameters":"","commandType":"Text","commandTimeout":30,"newLine":"\r\n","commandText":"SELECT [o].[Id], [o].[EventDate], [o].[EventPayload], [o].[EventType], [o].[ExpireDate]\r\nFROM [OutboxMessages] AS [o]\r\nWHERE ([o].[ExpireDate] IS NULL) OR [o].[ExpireDate] >= GETDATE()","EventId":{"Id":20101,"Name":"Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted"},"SourceContext":"Microsoft.EntityFrameworkCore.Database.Command"}}
{"@timestamp":"2023-05-15T10:08:15.9463428+03:30","level":"Information","messageTemplate":"Executed DbCommand ({elapsed}ms) [Parameters=[{parameters}], CommandType='{commandType}', CommandTimeout='{commandTimeout}']{newLine}{commandText}","message":"Executed DbCommand (\"1\"ms) [Parameters=[\"\"], CommandType='Text', CommandTimeout='30']\"\r\n\"\"SELECT [o].[Id], [o].[EventDate], [o].[EventPayload], [o].[EventType], [o].[ExpireDate]\r\nFROM [OutboxMessages] AS [o]\r\nWHERE ([o].[ExpireDate] IS NULL) OR [o].[ExpireDate] >= GETDATE()\"","fields":{"elapsed":"1","parameters":"","commandType":"Text","commandTimeout":30,"newLine":"\r\n","commandText":"SELECT [o].[Id], [o].[EventDate], [o].[EventPayload], [o].[EventType], [o].[ExpireDate]\r\nFROM [OutboxMessages] AS [o]\r\nWHERE ([o].[ExpireDate] IS NULL) OR [o].[ExpireDate] >= GETDATE()","EventId":{"Id":20101,"Name":"Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted"},"SourceContext":"Microsoft.EntityFrameworkCore.Database.Command"}}
{"@timestamp":"2023-05-15T10:08:20.9485341+03:30","level":"Information","messageTemplate":"Executed DbCommand ({elapsed}ms) [Parameters=[{parameters}], CommandType='{commandType}', CommandTimeout='{commandTimeout}']{newLine}{commandText}","message":"Executed DbCommand (\"1\"ms) [Parameters=[\"\"], CommandType='Text', CommandTimeout='30']\"\r\n\"\"SELECT [o].[Id], [o].[EventDate], [o].[EventPayload], [o].[EventType], [o].[ExpireDate]\r\nFROM [OutboxMessages] AS [o]\r\nWHERE ([o].[ExpireDate] IS NULL) OR [o].[ExpireDate] >= GETDATE()\"","fields":{"elapsed":"1","parameters":"","commandType":"Text","commandTimeout":30,"newLine":"\r\n","commandText":"SELECT [o].[Id], [o].[EventDate], [o].[EventPayload], [o].[EventType], [o].[ExpireDate]\r\nFROM [OutboxMessages] AS [o]\r\nWHERE ([o].[ExpireDate] IS NULL) OR [o].[ExpireDate] >= GETDATE()","EventId":{"Id":20101,"Name":"Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted"},"SourceContext":"Microsoft.EntityFrameworkCore.Database.Command"}}
